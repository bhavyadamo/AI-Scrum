{"ast":null,"code":"import { UserRole } from '../../models/settings.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../../services/settings.service\";\nimport * as i3 from \"../../services/team.service\";\nimport * as i4 from \"../../services/task.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"./user-roles/user-roles.component\";\nimport * as i8 from \"./azure-devops-settings/azure-devops-settings.component\";\nimport * as i9 from \"./ai-model-settings/ai-model-settings.component\";\nfunction SettingsComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r4.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r4.label);\n  }\n}\nfunction SettingsComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function SettingsComponent_div_47_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.successMessage = \"\");\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.successMessage, \" \");\n  }\n}\nfunction SettingsComponent_div_65_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49)(1, \"div\", 50)(2, \"span\", 51);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"span\", 52);\n    i0.ɵɵtext(5, \"Loading team members...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SettingsComponent_div_65_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.teamMembersError, \" \");\n  }\n}\nfunction SettingsComponent_div_65_div_11_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 58);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" No team members found for team \\\"\", ctx_r11.teamName, \"\\\". API returned data but filtering may have removed all entries. \");\n  }\n}\nfunction SettingsComponent_div_65_div_11_div_5_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 65);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const member_r13 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", member_r13.currentWorkload, \" tasks \");\n  }\n}\nfunction SettingsComponent_div_65_div_11_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 59)(1, \"input\", 60);\n    i0.ɵɵlistener(\"ngModelChange\", function SettingsComponent_div_65_div_11_div_5_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const member_r13 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(member_r13.selected = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 61);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"small\", 62)(5, \"span\", 63);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, SettingsComponent_div_65_div_11_div_5_span_7_Template, 2, 1, \"span\", 64);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const member_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"teamMember\", member_r13.id, \"\");\n    i0.ɵɵproperty(\"id\", \"member-\" + member_r13.id)(\"ngModel\", member_r13.selected);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"member-\" + member_r13.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", member_r13.displayName, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(member_r13.team);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", member_r13.currentWorkload && member_r13.currentWorkload > 0);\n  }\n}\nfunction SettingsComponent_div_65_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54)(1, \"label\", 55);\n    i0.ɵɵtext(2, \" Select Team Members for Auto-Assignment \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, SettingsComponent_div_65_div_11_div_3_Template, 2, 1, \"div\", 48);\n    i0.ɵɵelementStart(4, \"div\", 56);\n    i0.ɵɵtemplate(5, SettingsComponent_div_65_div_11_div_5_Template, 8, 7, \"div\", 57);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.teamMembers.length === 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.teamMembers);\n  }\n}\nfunction SettingsComponent_div_65_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 58);\n    i0.ɵɵtext(1, \" No team members found. Please check the team name and try again. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SettingsComponent_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"div\", 40)(2, \"div\")(3, \"label\", 41);\n    i0.ɵɵtext(4, \"Team Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 42);\n    i0.ɵɵlistener(\"ngModelChange\", function SettingsComponent_div_65_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.teamName = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"button\", 43);\n    i0.ɵɵlistener(\"click\", function SettingsComponent_div_65_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.loadTeamMembers());\n    });\n    i0.ɵɵelement(7, \"i\", 44);\n    i0.ɵɵtext(8, \" Load Team Members \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, SettingsComponent_div_65_div_9_Template, 6, 0, \"div\", 45);\n    i0.ɵɵtemplate(10, SettingsComponent_div_65_div_10_Template, 2, 1, \"div\", 46);\n    i0.ɵɵtemplate(11, SettingsComponent_div_65_div_11_Template, 6, 2, \"div\", 47);\n    i0.ɵɵtemplate(12, SettingsComponent_div_65_div_12_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.teamName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loadingTeamMembers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.teamMembersError);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.loadingTeamMembers && ctx_r2.teamMembers.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.loadingTeamMembers && ctx_r2.teamMembers.length === 0 && !ctx_r2.teamMembersError);\n  }\n}\nfunction SettingsComponent_span_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 66);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.getSelectedMembersCount(), \" selected\");\n  }\n}\nexport class SettingsComponent {\n  constructor(authService, settingsService, teamService, taskService) {\n    this.authService = authService;\n    this.settingsService = settingsService;\n    this.teamService = teamService;\n    this.taskService = taskService;\n    this.loading = {\n      settings: false,\n      userRoles: false,\n      azureDevOps: false,\n      aiModel: false\n    };\n    this.error = {\n      settings: '',\n      userRoles: '',\n      azureDevOps: '',\n      aiModel: ''\n    };\n    // Role options for demo purposes\n    this.roleOptions = [{\n      value: UserRole.Admin,\n      label: 'Admin'\n    }, {\n      value: UserRole.ScrumMaster,\n      label: 'Scrum Master'\n    }, {\n      value: UserRole.Member,\n      label: 'Member'\n    }];\n    // For demo/testing - allow changing current user role\n    this.demoUserRole = UserRole.Admin;\n    // Team Filters & Iteration Settings\n    this.defaultIterationPath = 'Techoil\\\\2.3.23';\n    this.enableTeamFilter = true;\n    this.teamName = 'RND';\n    this.teamMembers = [];\n    this.loadingTeamMembers = false;\n    this.teamMembersError = '';\n    this.successMessage = '';\n  }\n  ngOnInit() {\n    // Initialize with current user role\n    const currentUser = this.authService.currentUserValue;\n    if (currentUser) {\n      this.demoUserRole = currentUser.role;\n    }\n    // Load saved team filter settings\n    this.loadTeamFilterSettings();\n  }\n  // For demo purposes - change current user role\n  changeUserRole() {\n    this.authService.changeUserRole(this.demoUserRole);\n  }\n  // Load team filter settings from local storage\n  loadTeamFilterSettings() {\n    const savedSettings = localStorage.getItem('teamFilterSettings');\n    if (savedSettings) {\n      const settings = JSON.parse(savedSettings);\n      this.enableTeamFilter = settings.enableTeamFilter ?? true;\n      this.teamName = settings.teamName ?? 'RND';\n      this.defaultIterationPath = settings.defaultIterationPath ?? 'Techoil\\\\2.3.23';\n    }\n  }\n  // Load team members from the API\n  loadTeamMembers() {\n    this.loadingTeamMembers = true;\n    this.teamMembersError = '';\n    // Get previously saved settings with selected members\n    const savedSettings = localStorage.getItem('teamFilterSettings');\n    const savedMembers = savedSettings ? JSON.parse(savedSettings).selectedMembers || [] : [];\n    console.log('Previously selected members:', savedMembers);\n    // Construct query parameters for the API call\n    const iterationPath = this.defaultIterationPath;\n    const teamName = this.teamName;\n    console.log(`Loading team members for team: ${teamName}, iteration: ${iterationPath}`);\n    // Make the API call with the query parameters\n    this.teamService.getTeamMembersByTeam(teamName, iterationPath).subscribe({\n      next: members => {\n        console.log('API Response for team members:', members);\n        // Process the response\n        this.teamMembers = members.map(m => {\n          // Check if this member was previously selected\n          const wasSelected = savedMembers.some(sm => sm.id === m.id || sm.displayName === m.displayName);\n          return {\n            id: m.id,\n            displayName: m.displayName,\n            team: m.team || 'RND Team',\n            email: m.email || m.uniqueName || '',\n            currentWorkload: m.currentWorkload || 0,\n            selected: wasSelected // Mark as selected if previously selected\n          };\n        });\n\n        console.log('Processed team members with selection state:', this.teamMembers);\n        this.loadingTeamMembers = false;\n      },\n      error: err => {\n        console.error('Error loading team members:', err);\n        this.teamMembersError = 'Failed to load team members. Please try again.';\n        this.loadingTeamMembers = false;\n      }\n    });\n  }\n  // Save team filter settings\n  saveTeamFilterSettings() {\n    // Get selected team members\n    const selectedMembers = this.teamMembers.filter(m => m.selected).map(m => ({\n      id: m.id,\n      displayName: m.displayName,\n      team: m.team || 'RND Team',\n      email: m.email\n    }));\n    console.log('Saving selected team members:', selectedMembers);\n    // Create settings object\n    const settings = {\n      enableTeamFilter: this.enableTeamFilter,\n      teamName: this.teamName,\n      defaultIterationPath: this.defaultIterationPath,\n      selectedMembers: selectedMembers\n    };\n    // Save to local storage\n    localStorage.setItem('teamFilterSettings', JSON.stringify(settings));\n    // Show success message\n    this.successMessage = `Saved ${selectedMembers.length} team members successfully!`;\n    setTimeout(() => {\n      this.successMessage = '';\n    }, 3000);\n  }\n  // Save iteration settings\n  saveIterationSettings() {\n    localStorage.setItem('defaultIterationPath', this.defaultIterationPath);\n    // Show success message\n    this.successMessage = 'Iteration settings saved successfully!';\n    setTimeout(() => {\n      this.successMessage = '';\n    }, 3000);\n  }\n  static {\n    this.ɵfac = function SettingsComponent_Factory(t) {\n      return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.SettingsService), i0.ɵɵdirectiveInject(i3.TeamService), i0.ɵɵdirectiveInject(i4.TaskService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SettingsComponent,\n      selectors: [[\"app-settings\"]],\n      decls: 70,\n      vars: 8,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"mb-4\"], [1, \"card\", \"mb-4\"], [1, \"card-body\"], [1, \"d-flex\", \"align-items-center\"], [1, \"me-3\"], [1, \"form-select\", \"w-auto\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"ms-3\", \"text-muted\"], [1, \"fw-bold\"], [1, \"nav\", \"nav-tabs\", \"mb-4\"], [1, \"nav-item\"], [\"data-bs-toggle\", \"tab\", \"href\", \"#userRoles\", 1, \"nav-link\", \"active\"], [\"data-bs-toggle\", \"tab\", \"href\", \"#azureDevOps\", 1, \"nav-link\"], [\"data-bs-toggle\", \"tab\", \"href\", \"#aiModel\", 1, \"nav-link\"], [\"data-bs-toggle\", \"tab\", \"href\", \"#teamFilters\", 1, \"nav-link\"], [1, \"tab-content\"], [\"id\", \"userRoles\", 1, \"tab-pane\", \"fade\", \"show\", \"active\"], [\"id\", \"azureDevOps\", 1, \"tab-pane\", \"fade\"], [\"id\", \"aiModel\", 1, \"tab-pane\", \"fade\"], [\"id\", \"teamFilters\", 1, \"tab-pane\", \"fade\"], [1, \"card\"], [1, \"card-header\"], [1, \"mb-0\"], [\"class\", \"alert alert-success alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"defaultIterationPath\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"defaultIterationPath\", \"placeholder\", \"Enter default iteration path (e.g. Techoil\\\\2.3.23)\", \"name\", \"defaultIterationPath\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-text\", \"text-muted\"], [1, \"form-group\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"form-check\", \"form-switch\", \"mb-3\"], [\"type\", \"checkbox\", \"id\", \"enableTeamFilter\", \"name\", \"enableTeamFilter\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"enableTeamFilter\", 1, \"form-check-label\"], [\"class\", \"card bg-light p-3 mb-3\", 4, \"ngIf\"], [\"class\", \"badge bg-light text-dark\", 4, \"ngIf\"], [3, \"value\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"alert-dismissible\", \"fade\", \"show\"], [\"type\", \"button\", 1, \"btn-close\", 3, \"click\"], [1, \"card\", \"bg-light\", \"p-3\", \"mb-3\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-3\"], [\"for\", \"teamName\", 1, \"form-label\", \"me-2\"], [\"type\", \"text\", \"id\", \"teamName\", \"name\", \"teamName\", \"value\", \"RND\", 1, \"form-control\", \"d-inline-block\", \"w-auto\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"bi\", \"bi-arrow-repeat\"], [\"class\", \"text-center py-2\", 4, \"ngIf\"], [\"class\", \"alert alert-danger alert-sm\", 4, \"ngIf\"], [\"class\", \"mb-3\", 4, \"ngIf\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [1, \"text-center\", \"py-2\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"ms-2\"], [1, \"alert\", \"alert-danger\", \"alert-sm\"], [1, \"mb-3\"], [1, \"form-label\"], [1, \"team-members-list\"], [\"class\", \"form-check mb-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert\", \"alert-warning\"], [1, \"form-check\", \"mb-2\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [1, \"form-check-label\", 3, \"for\"], [1, \"text-muted\", \"ms-2\"], [1, \"badge\", \"bg-secondary\"], [\"class\", \"badge bg-info ms-1\", 4, \"ngIf\"], [1, \"badge\", \"bg-info\", \"ms-1\"], [1, \"badge\", \"bg-light\", \"text-dark\"]],\n      template: function SettingsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Application Settings\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"strong\");\n          i0.ɵɵtext(8, \"Demo Mode:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(9, \" Change your current role \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"select\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function SettingsComponent_Template_select_ngModelChange_10_listener($event) {\n            return ctx.demoUserRole = $event;\n          })(\"change\", function SettingsComponent_Template_select_change_10_listener() {\n            return ctx.changeUserRole();\n          });\n          i0.ɵɵtemplate(11, SettingsComponent_option_11_Template, 2, 2, \"option\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 8)(13, \"small\");\n          i0.ɵɵtext(14, \"Current role: \");\n          i0.ɵɵelementStart(15, \"span\", 9);\n          i0.ɵɵtext(16);\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(17, \"ul\", 10)(18, \"li\", 11)(19, \"a\", 12);\n          i0.ɵɵtext(20, \"User Roles\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"li\", 11)(22, \"a\", 13);\n          i0.ɵɵtext(23, \"Azure DevOps\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"li\", 11)(25, \"a\", 14);\n          i0.ɵɵtext(26, \"AI Model\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"li\", 11)(28, \"a\", 15);\n          i0.ɵɵtext(29, \"Team Filters\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(30, \"div\", 16)(31, \"div\", 17);\n          i0.ɵɵelement(32, \"app-user-roles\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"div\", 18);\n          i0.ɵɵelement(34, \"app-azure-devops-settings\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"div\", 19);\n          i0.ɵɵelement(36, \"app-ai-model-settings\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"div\", 20)(38, \"div\", 21)(39, \"div\", 22)(40, \"h5\", 23);\n          i0.ɵɵtext(41, \"Team Filters & Iteration Settings\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(42, \"div\", 3)(43, \"form\")(44, \"div\", 1)(45, \"h6\");\n          i0.ɵɵtext(46, \"Iteration Path Settings\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(47, SettingsComponent_div_47_Template, 3, 1, \"div\", 24);\n          i0.ɵɵelementStart(48, \"div\", 25)(49, \"label\", 26);\n          i0.ɵɵtext(50, \"Default Iteration Path\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(51, \"input\", 27);\n          i0.ɵɵlistener(\"ngModelChange\", function SettingsComponent_Template_input_ngModelChange_51_listener($event) {\n            return ctx.defaultIterationPath = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(52, \"small\", 28);\n          i0.ɵɵtext(53, \"This iteration path will be used by default in task distribution\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(54, \"div\", 29)(55, \"button\", 30);\n          i0.ɵɵlistener(\"click\", function SettingsComponent_Template_button_click_55_listener() {\n            return ctx.saveIterationSettings();\n          });\n          i0.ɵɵtext(56, \" Save Iteration Settings \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(57, \"hr\");\n          i0.ɵɵelementStart(58, \"div\", 1)(59, \"h6\");\n          i0.ɵɵtext(60, \"Team Filters\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(61, \"div\", 31)(62, \"input\", 32);\n          i0.ɵɵlistener(\"ngModelChange\", function SettingsComponent_Template_input_ngModelChange_62_listener($event) {\n            return ctx.enableTeamFilter = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(63, \"label\", 33);\n          i0.ɵɵtext(64, \" Enable RND Team Filtering for Auto-Assign \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(65, SettingsComponent_div_65_Template, 13, 5, \"div\", 34);\n          i0.ɵɵelementStart(66, \"div\", 29)(67, \"button\", 30);\n          i0.ɵɵlistener(\"click\", function SettingsComponent_Template_button_click_67_listener() {\n            return ctx.saveTeamFilterSettings();\n          });\n          i0.ɵɵtext(68, \" Save Team Filter Settings \");\n          i0.ɵɵtemplate(69, SettingsComponent_span_69_Template, 2, 1, \"span\", 35);\n          i0.ɵɵelementEnd()()()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngModel\", ctx.demoUserRole);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.roleOptions);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.authService.currentUserValue == null ? null : ctx.authService.currentUserValue.role);\n          i0.ɵɵadvance(31);\n          i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.defaultIterationPath);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngModel\", ctx.enableTeamFilter);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.enableTeamFilter);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.getSelectedMembersCount() > 0);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.CheckboxControlValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.NgModel, i6.NgForm, i7.UserRolesComponent, i8.AzureDevOpsSettingsComponent, i9.AiModelSettingsComponent],\n      styles: [\"h2[_ngcontent-%COMP%] {\\n  margin-bottom: 1.5rem;\\n  color: #2c3e50;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  padding-top: 1.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbImgyIHtcclxuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XHJcbiAgY29sb3I6ICMyYzNlNTA7XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gIHBhZGRpbmctdG9wOiAxLjVyZW07XHJcbn0gIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["UserRole","i0","SettingsComponent","constructor","authService","settingsService","teamService","taskService","settings","userRoles","azureDevOps","aiModel","value","Admin","label","ScrumMaster","Member","ngOnInit","currentUser","currentUserValue","demoUserRole","role","loadTeamFilterSettings","changeUserRole","savedSettings","localStorage","getItem","JSON","parse","enableTeamFilter","teamName","defaultIterationPath","loadTeamMembers","loadingTeamMembers","teamMembersError","savedMembers","selectedMembers","console","log","iterationPath","getTeamMembersByTeam","subscribe","next","members","teamMembers","map","m","wasSelected","some","sm","id","displayName","team","email","uniqueName","currentWorkload","selected","error","err","saveTeamFilterSettings","filter","setItem","stringify","successMessage","length","setTimeout","saveIterationSettings","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\settings\\settings.component.ts","E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\settings\\settings.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { SettingsService } from '../../services/settings.service';\r\nimport { SettingsDto, UserRole } from '../../models/settings.model';\r\nimport { TeamService } from '../../services/team.service';\r\nimport { TaskService } from '../../services/task.service';\r\n\r\n// Interface for team member structure\r\ninterface TeamMember {\r\n  id: string;\r\n  displayName: string;\r\n  selected: boolean;\r\n  team?: string;\r\n  email?: string;\r\n  currentWorkload?: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  loading = {\r\n    settings: false,\r\n    userRoles: false,\r\n    azureDevOps: false,\r\n    aiModel: false\r\n  };\r\n  \r\n  error = {\r\n    settings: '',\r\n    userRoles: '',\r\n    azureDevOps: '',\r\n    aiModel: ''\r\n  };\r\n\r\n  // Role options for demo purposes\r\n  roleOptions = [\r\n    { value: UserRole.Admin, label: 'Admin' },\r\n    { value: UserRole.ScrumMaster, label: 'Scrum Master' },\r\n    { value: UserRole.Member, label: 'Member' }\r\n  ];\r\n\r\n  // For demo/testing - allow changing current user role\r\n  demoUserRole = UserRole.Admin;\r\n\r\n  // Team Filters & Iteration Settings\r\n  defaultIterationPath = 'Techoil\\\\2.3.23';\r\n  enableTeamFilter = true;\r\n  teamName = 'RND';\r\n  teamMembers: TeamMember[] = [];\r\n  loadingTeamMembers = false;\r\n  teamMembersError = '';\r\n  successMessage = '';\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private settingsService: SettingsService,\r\n    private teamService: TeamService,\r\n    private taskService: TaskService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize with current user role\r\n    const currentUser = this.authService.currentUserValue;\r\n    if (currentUser) {\r\n      this.demoUserRole = currentUser.role;\r\n    }\r\n\r\n    // Load saved team filter settings\r\n    this.loadTeamFilterSettings();\r\n  }\r\n\r\n  // For demo purposes - change current user role\r\n  changeUserRole(): void {\r\n    this.authService.changeUserRole(this.demoUserRole);\r\n  }\r\n\r\n  // Load team filter settings from local storage\r\n  loadTeamFilterSettings(): void {\r\n    const savedSettings = localStorage.getItem('teamFilterSettings');\r\n    \r\n    if (savedSettings) {\r\n      const settings = JSON.parse(savedSettings);\r\n      \r\n      this.enableTeamFilter = settings.enableTeamFilter ?? true;\r\n      this.teamName = settings.teamName ?? 'RND';\r\n      this.defaultIterationPath = settings.defaultIterationPath ?? 'Techoil\\\\2.3.23';\r\n    }\r\n  }\r\n\r\n  // Load team members from the API\r\n  loadTeamMembers(): void {\r\n    this.loadingTeamMembers = true;\r\n    this.teamMembersError = '';\r\n    \r\n    // Get previously saved settings with selected members\r\n    const savedSettings = localStorage.getItem('teamFilterSettings');\r\n    const savedMembers = savedSettings ? JSON.parse(savedSettings).selectedMembers || [] : [];\r\n    \r\n    console.log('Previously selected members:', savedMembers);\r\n    \r\n    // Construct query parameters for the API call\r\n    const iterationPath = this.defaultIterationPath;\r\n    const teamName = this.teamName;\r\n    \r\n    console.log(`Loading team members for team: ${teamName}, iteration: ${iterationPath}`);\r\n    \r\n    // Make the API call with the query parameters\r\n    this.teamService.getTeamMembersByTeam(teamName, iterationPath).subscribe({\r\n      next: (members: any[]) => {\r\n        console.log('API Response for team members:', members);\r\n        \r\n        // Process the response\r\n        this.teamMembers = members.map(m => {\r\n          // Check if this member was previously selected\r\n          const wasSelected = savedMembers.some((sm: any) => \r\n            sm.id === m.id || sm.displayName === m.displayName\r\n          );\r\n          \r\n          return {\r\n            id: m.id,\r\n            displayName: m.displayName,\r\n            team: m.team || 'RND Team',\r\n            email: m.email || m.uniqueName || '',\r\n            currentWorkload: m.currentWorkload || 0,\r\n            selected: wasSelected // Mark as selected if previously selected\r\n          };\r\n        });\r\n        \r\n        console.log('Processed team members with selection state:', this.teamMembers);\r\n        this.loadingTeamMembers = false;\r\n      },\r\n      error: (err) => {\r\n        console.error('Error loading team members:', err);\r\n        this.teamMembersError = 'Failed to load team members. Please try again.';\r\n        this.loadingTeamMembers = false;\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Save team filter settings\r\n  saveTeamFilterSettings(): void {\r\n    // Get selected team members\r\n    const selectedMembers = this.teamMembers\r\n      .filter(m => m.selected)\r\n      .map(m => ({\r\n        id: m.id,\r\n        displayName: m.displayName,\r\n        team: m.team || 'RND Team',\r\n        email: m.email\r\n      }));\r\n    \r\n    console.log('Saving selected team members:', selectedMembers);\r\n    \r\n    // Create settings object\r\n    const settings = {\r\n      enableTeamFilter: this.enableTeamFilter,\r\n      teamName: this.teamName,\r\n      defaultIterationPath: this.defaultIterationPath,\r\n      selectedMembers: selectedMembers\r\n    };\r\n    \r\n    // Save to local storage\r\n    localStorage.setItem('teamFilterSettings', JSON.stringify(settings));\r\n    \r\n    // Show success message\r\n    this.successMessage = `Saved ${selectedMembers.length} team members successfully!`;\r\n    setTimeout(() => {\r\n      this.successMessage = '';\r\n    }, 3000);\r\n  }\r\n\r\n  // Save iteration settings\r\n  saveIterationSettings(): void {\r\n    localStorage.setItem('defaultIterationPath', this.defaultIterationPath);\r\n    \r\n    // Show success message\r\n    this.successMessage = 'Iteration settings saved successfully!';\r\n    setTimeout(() => {\r\n      this.successMessage = '';\r\n    }, 3000);\r\n  }\r\n} ","<div class=\"container mt-4\">\r\n  <h2 class=\"mb-4\">Application Settings</h2>\r\n  \r\n  <!-- Role switcher for demo purposes -->\r\n  <div class=\"card mb-4\">\r\n    <div class=\"card-body\">\r\n      <div class=\"d-flex align-items-center\">\r\n        <div class=\"me-3\">\r\n          <strong>Demo Mode:</strong> Change your current role\r\n        </div>\r\n        <select [(ngModel)]=\"demoUserRole\" (change)=\"changeUserRole()\" class=\"form-select w-auto\">\r\n          <option *ngFor=\"let role of roleOptions\" [value]=\"role.value\">{{role.label}}</option>\r\n        </select>\r\n        <div class=\"ms-3 text-muted\">\r\n          <small>Current role: <span class=\"fw-bold\">{{authService.currentUserValue?.role}}</span></small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Tab navigation for settings sections -->\r\n  <ul class=\"nav nav-tabs mb-4\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link active\" data-bs-toggle=\"tab\" href=\"#userRoles\">User Roles</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#azureDevOps\">Azure DevOps</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#aiModel\">AI Model</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#teamFilters\">Team Filters</a>\r\n    </li>\r\n  </ul>\r\n\r\n  <!-- Tab content -->\r\n  <div class=\"tab-content\">\r\n    <div class=\"tab-pane fade show active\" id=\"userRoles\">\r\n      <app-user-roles></app-user-roles>\r\n    </div>\r\n    <div class=\"tab-pane fade\" id=\"azureDevOps\">\r\n      <app-azure-devops-settings></app-azure-devops-settings>\r\n    </div>\r\n    <div class=\"tab-pane fade\" id=\"aiModel\">\r\n      <app-ai-model-settings></app-ai-model-settings>\r\n    </div>\r\n    <div class=\"tab-pane fade\" id=\"teamFilters\">\r\n      <!-- Team Filters & Iteration Settings -->\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h5 class=\"mb-0\">Team Filters & Iteration Settings</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <!-- Form for iteration settings -->\r\n          <form>\r\n            <div class=\"mb-4\">\r\n              <h6>Iteration Path Settings</h6>\r\n              \r\n              <!-- Success message -->\r\n              <div *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                {{ successMessage }}\r\n                <button type=\"button\" class=\"btn-close\" (click)=\"successMessage = ''\"></button>\r\n              </div>\r\n              \r\n              <div class=\"form-group mb-3\">\r\n                <label for=\"defaultIterationPath\" class=\"form-label\">Default Iteration Path</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"defaultIterationPath\" \r\n                       placeholder=\"Enter default iteration path (e.g. Techoil\\2.3.23)\"\r\n                       [(ngModel)]=\"defaultIterationPath\" name=\"defaultIterationPath\">\r\n                <small class=\"form-text text-muted\">This iteration path will be used by default in task distribution</small>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveIterationSettings()\">\r\n                  Save Iteration Settings\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <hr>\r\n            \r\n            <!-- Team filter settings -->\r\n            <div class=\"mb-4\">\r\n              <h6>Team Filters</h6>\r\n              <div class=\"form-check form-switch mb-3\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"enableTeamFilter\" \r\n                       [(ngModel)]=\"enableTeamFilter\" name=\"enableTeamFilter\">\r\n                <label class=\"form-check-label\" for=\"enableTeamFilter\">\r\n                  Enable RND Team Filtering for Auto-Assign\r\n                </label>\r\n              </div>\r\n              <div *ngIf=\"enableTeamFilter\" class=\"card bg-light p-3 mb-3\">\r\n                <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n                  <div>\r\n                    <label for=\"teamName\" class=\"form-label me-2\">Team Name</label>\r\n                    <input type=\"text\" class=\"form-control d-inline-block w-auto\" \r\n                           id=\"teamName\" [(ngModel)]=\"teamName\" name=\"teamName\" value=\"RND\">\r\n                  </div>\r\n                  <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"loadTeamMembers()\">\r\n                    <i class=\"bi bi-arrow-repeat\"></i> Load Team Members\r\n                  </button>\r\n                </div>\r\n                \r\n                <!-- Loading indicator -->\r\n                <div *ngIf=\"loadingTeamMembers\" class=\"text-center py-2\">\r\n                  <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                  </div>\r\n                  <span class=\"ms-2\">Loading team members...</span>\r\n                </div>\r\n                \r\n                <!-- Error message -->\r\n                <div *ngIf=\"teamMembersError\" class=\"alert alert-danger alert-sm\">\r\n                  {{ teamMembersError }}\r\n                </div>\r\n                \r\n                <!-- Team members selection -->\r\n                <div *ngIf=\"!loadingTeamMembers && teamMembers.length > 0\" class=\"mb-3\">\r\n                  <label class=\"form-label\">\r\n                    Select Team Members for Auto-Assignment\r\n                  </label>\r\n                  <div *ngIf=\"teamMembers.length === 0\" class=\"alert alert-warning\">\r\n                    No team members found for team \"{{teamName}}\". API returned data but filtering may have removed all entries.\r\n                  </div>\r\n                  <div class=\"team-members-list\">\r\n                    <div *ngFor=\"let member of teamMembers\" class=\"form-check mb-2\">\r\n                      <input class=\"form-check-input\" type=\"checkbox\" \r\n                             [id]=\"'member-' + member.id\" \r\n                             [(ngModel)]=\"member.selected\"\r\n                             name=\"teamMember{{member.id}}\">\r\n                      <label class=\"form-check-label\" [for]=\"'member-' + member.id\">\r\n                        {{ member.displayName }}\r\n                        <small class=\"text-muted ms-2\">\r\n                          <span class=\"badge bg-secondary\">{{ member.team }}</span>\r\n                          <span *ngIf=\"member.currentWorkload && member.currentWorkload > 0\" class=\"badge bg-info ms-1\">\r\n                            {{ member.currentWorkload }} tasks\r\n                          </span>\r\n                        </small>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <!-- No team members found -->\r\n                <div *ngIf=\"!loadingTeamMembers && teamMembers.length === 0 && !teamMembersError\" class=\"alert alert-warning\">\r\n                  No team members found. Please check the team name and try again.\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveTeamFilterSettings()\">\r\n                  Save Team Filter Settings <span *ngIf=\"getSelectedMembersCount() > 0\" class=\"badge bg-light text-dark\">{{ getSelectedMembersCount() }} selected</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}