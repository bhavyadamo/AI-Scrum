{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/auth.service\";\nimport * as i2 from \"../../../services/settings.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction AzureDevOpsSettingsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AzureDevOpsSettingsComponent_div_5_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.error = \"\");\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction AzureDevOpsSettingsComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AzureDevOpsSettingsComponent_div_6_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.success = \"\");\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.success, \" \");\n  }\n}\nfunction AzureDevOpsSettingsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13)(2, \"span\", 14);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AzureDevOpsSettingsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelement(1, \"i\", 16);\n    i0.ɵɵtext(2, \" You do not have permission to view Azure DevOps settings. Contact an administrator. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AzureDevOpsSettingsComponent_div_9_div_6_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Organization URL is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AzureDevOpsSettingsComponent_div_9_div_6_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Enter a valid Azure DevOps URL\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AzureDevOpsSettingsComponent_div_9_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, AzureDevOpsSettingsComponent_div_9_div_6_small_1_Template, 2, 0, \"small\", 8);\n    i0.ɵɵtemplate(2, AzureDevOpsSettingsComponent_div_9_div_6_small_2_Template, 2, 0, \"small\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r10.azureDevOpsForm.get(\"organizationUrl\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r10.azureDevOpsForm.get(\"organizationUrl\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"pattern\"]);\n  }\n}\nfunction AzureDevOpsSettingsComponent_div_9_div_16_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Personal Access Token is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AzureDevOpsSettingsComponent_div_9_div_16_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Token must be at least 20 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AzureDevOpsSettingsComponent_div_9_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, AzureDevOpsSettingsComponent_div_9_div_16_small_1_Template, 2, 0, \"small\", 8);\n    i0.ɵɵtemplate(2, AzureDevOpsSettingsComponent_div_9_div_16_small_2_Template, 2, 0, \"small\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r11.azureDevOpsForm.get(\"personalAccessToken\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r11.azureDevOpsForm.get(\"personalAccessToken\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction AzureDevOpsSettingsComponent_div_9_div_26_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Project name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AzureDevOpsSettingsComponent_div_9_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, AzureDevOpsSettingsComponent_div_9_div_26_small_1_Template, 2, 0, \"small\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r12.azureDevOpsForm.get(\"projectName\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction AzureDevOpsSettingsComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 17);\n    i0.ɵɵlistener(\"ngSubmit\", function AzureDevOpsSettingsComponent_div_9_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.saveAzureDevOpsSettings());\n    });\n    i0.ɵɵelementStart(2, \"div\", 18)(3, \"label\", 19);\n    i0.ɵɵtext(4, \"Organization URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 20);\n    i0.ɵɵtemplate(6, AzureDevOpsSettingsComponent_div_9_div_6_Template, 3, 2, \"div\", 21);\n    i0.ɵɵelementStart(7, \"small\", 22);\n    i0.ɵɵtext(8, \" Example: https://dev.azure.com/your-organization \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 18)(10, \"label\", 23);\n    i0.ɵɵtext(11, \"Personal Access Token (PAT)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 24);\n    i0.ɵɵelement(13, \"input\", 25);\n    i0.ɵɵelementStart(14, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function AzureDevOpsSettingsComponent_div_9_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.togglePatVisibility());\n    });\n    i0.ɵɵelement(15, \"i\", 27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(16, AzureDevOpsSettingsComponent_div_9_div_16_Template, 3, 2, \"div\", 21);\n    i0.ɵɵelementStart(17, \"small\", 22);\n    i0.ɵɵelement(18, \"i\", 28);\n    i0.ɵɵtext(19, \" The PAT is used to authenticate with Azure DevOps. \");\n    i0.ɵɵelementStart(20, \"a\", 29);\n    i0.ɵɵtext(21, \" Learn more \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(22, \"div\", 18)(23, \"label\", 30);\n    i0.ɵɵtext(24, \"Project Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"input\", 31);\n    i0.ɵɵtemplate(26, AzureDevOpsSettingsComponent_div_9_div_26_Template, 2, 1, \"div\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 32)(28, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function AzureDevOpsSettingsComponent_div_9_Template_button_click_28_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.testConnection());\n    });\n    i0.ɵɵelement(29, \"i\", 34);\n    i0.ɵɵtext(30, \" Test Connection \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"button\", 35);\n    i0.ɵɵelement(32, \"i\", 36);\n    i0.ɵɵtext(33, \" Save DevOps Settings \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r4.azureDevOpsForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r4.azureDevOpsForm.get(\"organizationUrl\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r4.azureDevOpsForm.get(\"organizationUrl\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"type\", ctx_r4.showPat ? \"text\" : \"password\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r4.showPat ? \"bi-eye-slash\" : \"bi-eye\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r4.azureDevOpsForm.get(\"personalAccessToken\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx_r4.azureDevOpsForm.get(\"personalAccessToken\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r4.azureDevOpsForm.get(\"projectName\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx_r4.azureDevOpsForm.get(\"projectName\")) == null ? null : tmp_5_0.touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r4.azureDevOpsForm.invalid || ctx_r4.loading);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r4.azureDevOpsForm.invalid || ctx_r4.loading);\n  }\n}\nfunction AzureDevOpsSettingsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 38)(2, \"h6\", 39);\n    i0.ɵɵtext(3, \"Current Settings\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 40)(5, \"div\", 41)(6, \"div\", 42)(7, \"label\", 43);\n    i0.ɵɵtext(8, \"Organization\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 44);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 41)(11, \"div\", 42)(12, \"label\", 43);\n    i0.ɵɵtext(13, \"Project\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 44);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 45)(16, \"div\", 42)(17, \"label\", 43);\n    i0.ɵɵtext(18, \"Personal Access Token\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 24);\n    i0.ɵɵelement(20, \"input\", 46);\n    i0.ɵɵelementStart(21, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function AzureDevOpsSettingsComponent_div_10_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.togglePatVisibility());\n    });\n    i0.ɵɵelement(22, \"i\", 27);\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"value\", ctx_r5.settings.organization);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"value\", ctx_r5.settings.project);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"type\", ctx_r5.showPat ? \"text\" : \"password\")(\"value\", ctx_r5.settings.personalAccessToken);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.showPat ? \"bi-eye-slash\" : \"bi-eye\");\n  }\n}\nexport class AzureDevOpsSettingsComponent {\n  constructor(authService, settingsService, fb) {\n    this.authService = authService;\n    this.settingsService = settingsService;\n    this.fb = fb;\n    this.settings = null;\n    this.loading = false;\n    this.error = '';\n    this.success = '';\n    this.showPat = false;\n    this.testConnectionStatus = null;\n    this.testConnectionMessage = '';\n    this.azureDevOpsForm = this.fb.group({\n      organizationUrl: ['', [Validators.required, Validators.pattern(/^https:\\/\\/dev\\.azure\\.com\\/[\\w-]+\\/?$/)]],\n      personalAccessToken: ['', [Validators.required, Validators.minLength(20)]],\n      projectName: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.loadSettings();\n  }\n  loadSettings() {\n    if (!this.authService.canViewAzureDevOpsPat()) {\n      this.error = 'You do not have permission to view Azure DevOps settings';\n      return;\n    }\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n    this.settingsService.getAzureDevOpsSettings().subscribe({\n      next: settings => {\n        this.settings = settings;\n        // If the user can edit, populate the form\n        if (this.authService.canEditAzureDevOpsPat() && settings) {\n          this.azureDevOpsForm.patchValue({\n            organizationUrl: settings.organizationUrl || `https://dev.azure.com/${settings.organization || ''}`,\n            personalAccessToken: settings.personalAccessToken || '',\n            projectName: settings.project || ''\n          });\n        }\n        this.loading = false;\n      },\n      error: err => {\n        this.error = err.message || 'Failed to load Azure DevOps settings';\n        this.loading = false;\n        // For demo purposes, create mock data if API fails\n        if (!this.settings) {\n          this.createMockSettings();\n        }\n      }\n    });\n  }\n  saveAzureDevOpsSettings() {\n    if (!this.authService.canEditAzureDevOpsPat()) {\n      this.error = 'You do not have permission to update Azure DevOps settings';\n      return;\n    }\n    if (this.azureDevOpsForm.invalid) {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.azureDevOpsForm.controls).forEach(key => {\n        const control = this.azureDevOpsForm.get(key);\n        control?.markAsTouched();\n      });\n      return;\n    }\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n    const formValues = this.azureDevOpsForm.value;\n    // Extract organization from URL\n    const orgUrl = formValues.organizationUrl;\n    const orgMatch = orgUrl.match(/^https:\\/\\/dev\\.azure\\.com\\/([\\w-]+)\\/?$/);\n    const organization = orgMatch ? orgMatch[1] : '';\n    const settings = {\n      organization: organization,\n      organizationUrl: formValues.organizationUrl,\n      project: formValues.projectName,\n      personalAccessToken: formValues.personalAccessToken\n    };\n    // In a real app, you would send this to the backend\n    // For demo purposes, store in localStorage\n    localStorage.setItem('azureDevOpsSettings', JSON.stringify(settings));\n    // Simulate API call with timeout\n    setTimeout(() => {\n      this.settings = settings;\n      this.success = 'Azure DevOps settings saved successfully';\n      this.loading = false;\n    }, 800);\n  }\n  testConnection() {\n    if (this.azureDevOpsForm.invalid) {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.azureDevOpsForm.controls).forEach(key => {\n        const control = this.azureDevOpsForm.get(key);\n        control?.markAsTouched();\n      });\n      return;\n    }\n    this.loading = true;\n    this.testConnectionStatus = null;\n    this.testConnectionMessage = '';\n    this.error = '';\n    this.success = '';\n    // Simulate API call for testing connection\n    setTimeout(() => {\n      const random = Math.random();\n      if (random > 0.3) {\n        // 70% success rate for demo\n        this.testConnectionStatus = 'success';\n        this.testConnectionMessage = 'Connection successful! Your Azure DevOps credentials are valid.';\n        this.success = this.testConnectionMessage;\n      } else {\n        this.testConnectionStatus = 'error';\n        this.testConnectionMessage = 'Connection failed. Please check your credentials and try again.';\n        this.error = this.testConnectionMessage;\n      }\n      this.loading = false;\n    }, 1500);\n  }\n  togglePatVisibility() {\n    this.showPat = !this.showPat;\n  }\n  // Create mock settings for demo purposes\n  createMockSettings() {\n    this.settings = {\n      organization: 'demo-organization',\n      organizationUrl: 'https://dev.azure.com/demo-organization',\n      project: 'Demo Project',\n      personalAccessToken: '•••••••••••••••••••••••••••••'\n    };\n    // Populate form with mock data if user can edit\n    if (this.authService.canEditAzureDevOpsPat()) {\n      this.azureDevOpsForm.patchValue({\n        organizationUrl: this.settings.organizationUrl,\n        projectName: this.settings.project,\n        personalAccessToken: '' // Don't prefill the PAT for security reasons\n      });\n    }\n  }\n\n  static {\n    this.ɵfac = function AzureDevOpsSettingsComponent_Factory(t) {\n      return new (t || AzureDevOpsSettingsComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.SettingsService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AzureDevOpsSettingsComponent,\n      selectors: [[\"app-azure-devops-settings\"]],\n      decls: 11,\n      vars: 6,\n      consts: [[1, \"card\"], [1, \"card-header\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"alert alert-danger alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-success alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"d-flex justify-content-center mb-3\", 4, \"ngIf\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"alert-dismissible\", \"fade\", \"show\"], [\"type\", \"button\", 1, \"btn-close\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"alert-dismissible\", \"fade\", \"show\"], [1, \"d-flex\", \"justify-content-center\", \"mb-3\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"alert\", \"alert-warning\"], [1, \"bi\", \"bi-lock-fill\", \"me-2\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"organizationUrl\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"organizationUrl\", \"formControlName\", \"organizationUrl\", \"placeholder\", \"https://dev.azure.com/your-organization\", 1, \"form-control\"], [\"class\", \"text-danger mt-1\", 4, \"ngIf\"], [1, \"form-text\", \"text-muted\"], [\"for\", \"personalAccessToken\", 1, \"form-label\"], [1, \"input-group\"], [\"id\", \"personalAccessToken\", \"formControlName\", \"personalAccessToken\", \"placeholder\", \"Enter your Personal Access Token\", 1, \"form-control\", 3, \"type\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"bi\", 3, \"ngClass\"], [1, \"bi\", \"bi-info-circle\"], [\"href\", \"https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate\", \"target\", \"_blank\"], [\"for\", \"projectName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"projectName\", \"formControlName\", \"projectName\", \"placeholder\", \"Your Azure DevOps project name\", 1, \"form-control\"], [1, \"d-flex\", \"gap-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [1, \"bi\", \"bi-lightning-charge\", \"me-1\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"bi\", \"bi-check-circle\", \"me-1\"], [1, \"text-danger\", \"mt-1\"], [1, \"mb-4\"], [1, \"mb-2\"], [1, \"row\", \"g-3\"], [1, \"col-md-6\"], [1, \"form-group\"], [1, \"form-label\", \"text-muted\"], [\"type\", \"text\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"col-12\"], [\"readonly\", \"\", 1, \"form-control\", 3, \"type\", \"value\"]],\n      template: function AzureDevOpsSettingsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h5\", 2);\n          i0.ɵɵtext(3, \"Azure DevOps Integration\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵtemplate(5, AzureDevOpsSettingsComponent_div_5_Template, 3, 1, \"div\", 4);\n          i0.ɵɵtemplate(6, AzureDevOpsSettingsComponent_div_6_Template, 3, 1, \"div\", 5);\n          i0.ɵɵtemplate(7, AzureDevOpsSettingsComponent_div_7_Template, 4, 0, \"div\", 6);\n          i0.ɵɵtemplate(8, AzureDevOpsSettingsComponent_div_8_Template, 3, 0, \"div\", 7);\n          i0.ɵɵtemplate(9, AzureDevOpsSettingsComponent_div_9_Template, 34, 8, \"div\", 8);\n          i0.ɵɵtemplate(10, AzureDevOpsSettingsComponent_div_10_Template, 23, 5, \"div\", 8);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.success);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.authService.canViewAzureDevOpsPat() && !ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.authService.canEditAzureDevOpsPat() && !ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.authService.canViewAzureDevOpsPat() && !ctx.authService.canEditAzureDevOpsPat() && !ctx.loading && ctx.settings);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\".form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 1.5rem;\\n}\\n\\n.input-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%] {\\n  border-right: 0;\\n}\\n.input-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus {\\n  box-shadow: none;\\n}\\n.input-group[_ngcontent-%COMP%]   .btn-outline-secondary[_ngcontent-%COMP%] {\\n  background-color: white;\\n  border-color: #c5cae9;\\n  border-left: 0;\\n  color: #3949ab;\\n}\\n.input-group[_ngcontent-%COMP%]   .btn-outline-secondary[_ngcontent-%COMP%]:hover {\\n  background-color: #e8eaf6;\\n  color: #303f9f;\\n}\\n.input-group[_ngcontent-%COMP%]   .btn-outline-secondary[_ngcontent-%COMP%]:focus {\\n  box-shadow: none;\\n}\\n\\n.alert-info[_ngcontent-%COMP%] {\\n  background-color: #e1f5fe;\\n  border-color: #03a9f4;\\n  color: #0277bd;\\n}\\n\\n.alert-warning[_ngcontent-%COMP%] {\\n  background-color: #fff8e1;\\n  border-color: #ffc107;\\n  color: #ff8f00;\\n}\\n\\n.alert-success[_ngcontent-%COMP%] {\\n  background-color: #e8f5e9;\\n  border-color: #4caf50;\\n  color: #2e7d32;\\n}\\n\\n.alert-danger[_ngcontent-%COMP%] {\\n  background-color: #fbe9e7;\\n  border-color: #f44336;\\n  color: #c62828;\\n}\\n\\n.btn-secondary[_ngcontent-%COMP%] {\\n  background-color: #5c6bc0;\\n  border-color: #5c6bc0;\\n}\\n.btn-secondary[_ngcontent-%COMP%]:hover {\\n  background-color: #3949ab;\\n  border-color: #3949ab;\\n}\\n.btn-secondary[_ngcontent-%COMP%]:focus {\\n  box-shadow: 0 0 0 0.2rem rgba(92, 107, 192, 0.5);\\n}\\n\\n.connection-status[_ngcontent-%COMP%] {\\n  padding: 1rem;\\n  margin-top: 1.5rem;\\n  border-radius: 8px;\\n  display: flex;\\n  align-items: center;\\n  transition: all 0.3s ease;\\n}\\n.connection-status.success[_ngcontent-%COMP%] {\\n  background-color: #e8f5e9;\\n  border-left: 4px solid #4caf50;\\n}\\n.connection-status.error[_ngcontent-%COMP%] {\\n  background-color: #fbe9e7;\\n  border-left: 4px solid #f44336;\\n}\\n.connection-status[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n  font-size: 1.5rem;\\n  margin-right: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9henVyZS1kZXZvcHMtc2V0dGluZ3MvYXp1cmUtZGV2b3BzLXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDJDQUFBO0FBQ0E7RUFDRSxxQkFBQTtBQUNGOztBQUdFO0VBQ0UsZUFBQTtBQUFKO0FBRUk7RUFDRSxnQkFBQTtBQUFOO0FBSUU7RUFDRSx1QkFBQTtFQUNBLHFCQUFBO0VBQ0EsY0FBQTtFQUNBLGNBQUE7QUFGSjtBQUlJO0VBQ0UseUJBQUE7RUFDQSxjQUFBO0FBRk47QUFLSTtFQUNFLGdCQUFBO0FBSE47O0FBUUE7RUFDRSx5QkFBQTtFQUNBLHFCQUFBO0VBQ0EsY0FBQTtBQUxGOztBQVFBO0VBQ0UseUJBQUE7RUFDQSxxQkFBQTtFQUNBLGNBQUE7QUFMRjs7QUFRQTtFQUNFLHlCQUFBO0VBQ0EscUJBQUE7RUFDQSxjQUFBO0FBTEY7O0FBUUE7RUFDRSx5QkFBQTtFQUNBLHFCQUFBO0VBQ0EsY0FBQTtBQUxGOztBQVNBO0VBQ0UseUJBQUE7RUFDQSxxQkFBQTtBQU5GO0FBUUU7RUFDRSx5QkFBQTtFQUNBLHFCQUFBO0FBTko7QUFTRTtFQUNFLGdEQUFBO0FBUEo7O0FBWUE7RUFDRSxhQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHlCQUFBO0FBVEY7QUFXRTtFQUNFLHlCQUFBO0VBQ0EsOEJBQUE7QUFUSjtBQVlFO0VBQ0UseUJBQUE7RUFDQSw4QkFBQTtBQVZKO0FBYUU7RUFDRSxpQkFBQTtFQUNBLGtCQUFBO0FBWEoiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBenVyZSBEZXZPcHMgc2V0dGluZ3MgY29tcG9uZW50IHN0eWxlcyAqL1xyXG4uZm9ybS1ncm91cCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xyXG59XHJcblxyXG4uaW5wdXQtZ3JvdXAge1xyXG4gIC5mb3JtLWNvbnRyb2wge1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAwO1xyXG4gICAgXHJcbiAgICAmOmZvY3VzIHtcclxuICAgICAgYm94LXNoYWRvdzogbm9uZTtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgLmJ0bi1vdXRsaW5lLXNlY29uZGFyeSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlci1jb2xvcjogI2M1Y2FlOTtcclxuICAgIGJvcmRlci1sZWZ0OiAwO1xyXG4gICAgY29sb3I6ICMzOTQ5YWI7XHJcbiAgICBcclxuICAgICY6aG92ZXIge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThlYWY2O1xyXG4gICAgICBjb2xvcjogIzMwM2Y5ZjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJjpmb2N1cyB7XHJcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uYWxlcnQtaW5mbyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UxZjVmZTtcclxuICBib3JkZXItY29sb3I6ICMwM2E5ZjQ7XHJcbiAgY29sb3I6ICMwMjc3YmQ7XHJcbn1cclxuXHJcbi5hbGVydC13YXJuaW5nIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOGUxO1xyXG4gIGJvcmRlci1jb2xvcjogI2ZmYzEwNztcclxuICBjb2xvcjogI2ZmOGYwMDtcclxufVxyXG5cclxuLmFsZXJ0LXN1Y2Nlc3Mge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlOGY1ZTk7XHJcbiAgYm9yZGVyLWNvbG9yOiAjNGNhZjUwO1xyXG4gIGNvbG9yOiAjMmU3ZDMyO1xyXG59XHJcblxyXG4uYWxlcnQtZGFuZ2VyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmJlOWU3O1xyXG4gIGJvcmRlci1jb2xvcjogI2Y0NDMzNjtcclxuICBjb2xvcjogI2M2MjgyODtcclxufVxyXG5cclxuLy8gVGVzdCBDb25uZWN0aW9uIEJ1dHRvblxyXG4uYnRuLXNlY29uZGFyeSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVjNmJjMDtcclxuICBib3JkZXItY29sb3I6ICM1YzZiYzA7XHJcbiAgXHJcbiAgJjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzk0OWFiO1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjMzk0OWFiO1xyXG4gIH1cclxuICBcclxuICAmOmZvY3VzIHtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDkyLCAxMDcsIDE5MiwgMC41KTtcclxuICB9XHJcbn1cclxuXHJcbi8vIENvbm5lY3Rpb24gc3RhdHVzIHN0eWxpbmdcclxuLmNvbm5lY3Rpb24tc3RhdHVzIHtcclxuICBwYWRkaW5nOiAxcmVtO1xyXG4gIG1hcmdpbi10b3A6IDEuNXJlbTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XHJcbiAgXHJcbiAgJi5zdWNjZXNzIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOGY1ZTk7XHJcbiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkICM0Y2FmNTA7XHJcbiAgfVxyXG4gIFxyXG4gICYuZXJyb3Ige1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZiZTllNztcclxuICAgIGJvcmRlci1sZWZ0OiA0cHggc29saWQgI2Y0NDMzNjtcclxuICB9XHJcbiAgXHJcbiAgaSB7XHJcbiAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgIG1hcmdpbi1yaWdodDogMXJlbTtcclxuICB9XHJcbn0gIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","AzureDevOpsSettingsComponent","constructor","authService","settingsService","fb","azureDevOpsForm","group","organizationUrl","required","pattern","personalAccessToken","minLength","projectName","ngOnInit","loadSettings","canViewAzureDevOpsPat","error","loading","success","getAzureDevOpsSettings","subscribe","next","settings","canEditAzureDevOpsPat","patchValue","organization","project","err","message","createMockSettings","saveAzureDevOpsSettings","invalid","Object","keys","controls","forEach","key","control","get","markAsTouched","formValues","value","orgUrl","orgMatch","match","localStorage","setItem","JSON","stringify","setTimeout","testConnection","testConnectionStatus","testConnectionMessage","random","Math","togglePatVisibility","showPat","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\settings\\azure-devops-settings\\azure-devops-settings.component.ts","E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\settings\\azure-devops-settings\\azure-devops-settings.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../../services/auth.service';\nimport { SettingsService } from '../../../services/settings.service';\nimport { AzureDevOpsSettingsDto } from '../../../models/settings.model';\n\n@Component({\n  selector: 'app-azure-devops-settings',\n  templateUrl: './azure-devops-settings.component.html',\n  styleUrls: ['./azure-devops-settings.component.scss']\n})\nexport class AzureDevOpsSettingsComponent implements OnInit {\n  settings: AzureDevOpsSettingsDto | null = null;\n  azureDevOpsForm: FormGroup;\n  loading = false;\n  error = '';\n  success = '';\n  showPat = false;\n  testConnectionStatus: 'success' | 'error' | null = null;\n  testConnectionMessage = '';\n\n  constructor(\n    public authService: AuthService,\n    private settingsService: SettingsService,\n    private fb: FormBuilder\n  ) {\n    this.azureDevOpsForm = this.fb.group({\n      organizationUrl: ['', [\n        Validators.required, \n        Validators.pattern(/^https:\\/\\/dev\\.azure\\.com\\/[\\w-]+\\/?$/)\n      ]],\n      personalAccessToken: ['', [Validators.required, Validators.minLength(20)]],\n      projectName: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadSettings();\n  }\n\n  loadSettings(): void {\n    if (!this.authService.canViewAzureDevOpsPat()) {\n      this.error = 'You do not have permission to view Azure DevOps settings';\n      return;\n    }\n\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n\n    this.settingsService.getAzureDevOpsSettings().subscribe({\n      next: (settings) => {\n        this.settings = settings;\n        \n        // If the user can edit, populate the form\n        if (this.authService.canEditAzureDevOpsPat() && settings) {\n          this.azureDevOpsForm.patchValue({\n            organizationUrl: settings.organizationUrl || `https://dev.azure.com/${settings.organization || ''}`,\n            personalAccessToken: settings.personalAccessToken || '',\n            projectName: settings.project || ''\n          });\n        }\n        \n        this.loading = false;\n      },\n      error: (err) => {\n        this.error = err.message || 'Failed to load Azure DevOps settings';\n        this.loading = false;\n        \n        // For demo purposes, create mock data if API fails\n        if (!this.settings) {\n          this.createMockSettings();\n        }\n      }\n    });\n  }\n\n  saveAzureDevOpsSettings(): void {\n    if (!this.authService.canEditAzureDevOpsPat()) {\n      this.error = 'You do not have permission to update Azure DevOps settings';\n      return;\n    }\n\n    if (this.azureDevOpsForm.invalid) {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.azureDevOpsForm.controls).forEach(key => {\n        const control = this.azureDevOpsForm.get(key);\n        control?.markAsTouched();\n      });\n      return;\n    }\n\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n\n    const formValues = this.azureDevOpsForm.value;\n    \n    // Extract organization from URL\n    const orgUrl = formValues.organizationUrl;\n    const orgMatch = orgUrl.match(/^https:\\/\\/dev\\.azure\\.com\\/([\\w-]+)\\/?$/);\n    const organization = orgMatch ? orgMatch[1] : '';\n\n    const settings = {\n      organization: organization,\n      organizationUrl: formValues.organizationUrl,\n      project: formValues.projectName,\n      personalAccessToken: formValues.personalAccessToken\n    };\n\n    // In a real app, you would send this to the backend\n    // For demo purposes, store in localStorage\n    localStorage.setItem('azureDevOpsSettings', JSON.stringify(settings));\n    \n    // Simulate API call with timeout\n    setTimeout(() => {\n      this.settings = settings as AzureDevOpsSettingsDto;\n      this.success = 'Azure DevOps settings saved successfully';\n      this.loading = false;\n    }, 800);\n  }\n\n  testConnection(): void {\n    if (this.azureDevOpsForm.invalid) {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.azureDevOpsForm.controls).forEach(key => {\n        const control = this.azureDevOpsForm.get(key);\n        control?.markAsTouched();\n      });\n      return;\n    }\n\n    this.loading = true;\n    this.testConnectionStatus = null;\n    this.testConnectionMessage = '';\n    this.error = '';\n    this.success = '';\n\n    // Simulate API call for testing connection\n    setTimeout(() => {\n      const random = Math.random();\n      if (random > 0.3) { // 70% success rate for demo\n        this.testConnectionStatus = 'success';\n        this.testConnectionMessage = 'Connection successful! Your Azure DevOps credentials are valid.';\n        this.success = this.testConnectionMessage;\n      } else {\n        this.testConnectionStatus = 'error';\n        this.testConnectionMessage = 'Connection failed. Please check your credentials and try again.';\n        this.error = this.testConnectionMessage;\n      }\n      this.loading = false;\n    }, 1500);\n  }\n\n  togglePatVisibility(): void {\n    this.showPat = !this.showPat;\n  }\n\n  // Create mock settings for demo purposes\n  private createMockSettings(): void {\n    this.settings = {\n      organization: 'demo-organization',\n      organizationUrl: 'https://dev.azure.com/demo-organization',\n      project: 'Demo Project',\n      personalAccessToken: '•••••••••••••••••••••••••••••'\n    };\n    \n    // Populate form with mock data if user can edit\n    if (this.authService.canEditAzureDevOpsPat()) {\n      this.azureDevOpsForm.patchValue({\n        organizationUrl: this.settings.organizationUrl,\n        projectName: this.settings.project,\n        personalAccessToken: '' // Don't prefill the PAT for security reasons\n      });\n    }\n  }\n} ","<div class=\"card\">\n  <div class=\"card-header\">\n    <h5 class=\"mb-0\">Azure DevOps Integration</h5>\n  </div>\n  <div class=\"card-body\">\n    <!-- Error and success alerts -->\n    <div *ngIf=\"error\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n      {{ error }}\n      <button type=\"button\" class=\"btn-close\" (click)=\"error = ''\"></button>\n    </div>\n    \n    <div *ngIf=\"success\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n      {{ success }}\n      <button type=\"button\" class=\"btn-close\" (click)=\"success = ''\"></button>\n    </div>\n\n    <!-- Loading state -->\n    <div *ngIf=\"loading\" class=\"d-flex justify-content-center mb-3\">\n      <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n\n    <!-- No permission message -->\n    <div *ngIf=\"!authService.canViewAzureDevOpsPat() && !loading\" class=\"alert alert-warning\">\n      <i class=\"bi bi-lock-fill me-2\"></i>\n      You do not have permission to view Azure DevOps settings. Contact an administrator.\n    </div>\n\n    <!-- Azure DevOps Configuration Form -->\n    <div *ngIf=\"authService.canEditAzureDevOpsPat() && !loading\">\n      <form [formGroup]=\"azureDevOpsForm\" (ngSubmit)=\"saveAzureDevOpsSettings()\">\n        <div class=\"mb-3\">\n          <label for=\"organizationUrl\" class=\"form-label\">Organization URL</label>\n          <input \n            type=\"text\" \n            class=\"form-control\" \n            id=\"organizationUrl\" \n            formControlName=\"organizationUrl\"\n            placeholder=\"https://dev.azure.com/your-organization\">\n          <div *ngIf=\"azureDevOpsForm.get('organizationUrl')?.invalid && azureDevOpsForm.get('organizationUrl')?.touched\" class=\"text-danger mt-1\">\n            <small *ngIf=\"azureDevOpsForm.get('organizationUrl')?.errors?.['required']\">Organization URL is required</small>\n            <small *ngIf=\"azureDevOpsForm.get('organizationUrl')?.errors?.['pattern']\">Enter a valid Azure DevOps URL</small>\n          </div>\n          <small class=\"form-text text-muted\">\n            Example: https://dev.azure.com/your-organization\n          </small>\n        </div>\n\n        <div class=\"mb-3\">\n          <label for=\"personalAccessToken\" class=\"form-label\">Personal Access Token (PAT)</label>\n          <div class=\"input-group\">\n            <input \n              [type]=\"showPat ? 'text' : 'password'\" \n              class=\"form-control\" \n              id=\"personalAccessToken\" \n              formControlName=\"personalAccessToken\"\n              placeholder=\"Enter your Personal Access Token\">\n            <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"togglePatVisibility()\">\n              <i class=\"bi\" [ngClass]=\"showPat ? 'bi-eye-slash' : 'bi-eye'\"></i>\n            </button>\n          </div>\n          <div *ngIf=\"azureDevOpsForm.get('personalAccessToken')?.invalid && azureDevOpsForm.get('personalAccessToken')?.touched\" class=\"text-danger mt-1\">\n            <small *ngIf=\"azureDevOpsForm.get('personalAccessToken')?.errors?.['required']\">Personal Access Token is required</small>\n            <small *ngIf=\"azureDevOpsForm.get('personalAccessToken')?.errors?.['minlength']\">Token must be at least 20 characters</small>\n          </div>\n          <small class=\"form-text text-muted\">\n            <i class=\"bi bi-info-circle\"></i>\n            The PAT is used to authenticate with Azure DevOps. \n            <a href=\"https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate\" target=\"_blank\">\n              Learn more\n            </a>\n          </small>\n        </div>\n\n        <div class=\"mb-3\">\n          <label for=\"projectName\" class=\"form-label\">Project Name</label>\n          <input \n            type=\"text\" \n            class=\"form-control\" \n            id=\"projectName\" \n            formControlName=\"projectName\"\n            placeholder=\"Your Azure DevOps project name\">\n          <div *ngIf=\"azureDevOpsForm.get('projectName')?.invalid && azureDevOpsForm.get('projectName')?.touched\" class=\"text-danger mt-1\">\n            <small *ngIf=\"azureDevOpsForm.get('projectName')?.errors?.['required']\">Project name is required</small>\n          </div>\n        </div>\n\n        <div class=\"d-flex gap-2\">\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"testConnection()\" [disabled]=\"azureDevOpsForm.invalid || loading\">\n            <i class=\"bi bi-lightning-charge me-1\"></i> Test Connection\n          </button>\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"azureDevOpsForm.invalid || loading\">\n            <i class=\"bi bi-check-circle me-1\"></i> Save DevOps Settings\n          </button>\n        </div>\n      </form>\n    </div>\n\n    <!-- Current settings display for non-admin users -->\n    <div *ngIf=\"authService.canViewAzureDevOpsPat() && !authService.canEditAzureDevOpsPat() && !loading && settings\">\n      <div class=\"mb-4\">\n        <h6 class=\"mb-2\">Current Settings</h6>\n        <div class=\"row g-3\">\n          <div class=\"col-md-6\">\n            <div class=\"form-group\">\n              <label class=\"form-label text-muted\">Organization</label>\n              <input type=\"text\" class=\"form-control\" [value]=\"settings.organization\" readonly>\n            </div>\n          </div>\n          <div class=\"col-md-6\">\n            <div class=\"form-group\">\n              <label class=\"form-label text-muted\">Project</label>\n              <input type=\"text\" class=\"form-control\" [value]=\"settings.project\" readonly>\n            </div>\n          </div>\n          <div class=\"col-12\">\n            <div class=\"form-group\">\n              <label class=\"form-label text-muted\">Personal Access Token</label>\n              <div class=\"input-group\">\n                <input [type]=\"showPat ? 'text' : 'password'\" class=\"form-control\" [value]=\"settings.personalAccessToken\" readonly>\n                <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"togglePatVisibility()\">\n                  <i class=\"bi\" [ngClass]=\"showPat ? 'bi-eye-slash' : 'bi-eye'\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}