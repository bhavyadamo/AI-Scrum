{"ast":null,"code":"import { UserRole } from '../../../models/settings.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/auth.service\";\nimport * as i2 from \"../../../services/settings.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction UserRolesComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function UserRolesComponent_div_5_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.error = \"\");\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction UserRolesComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function UserRolesComponent_div_6_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.success = \"\");\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.success, \" \");\n  }\n}\nfunction UserRolesComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"span\", 15);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction UserRolesComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelement(1, \"i\", 17);\n    i0.ɵɵtext(2, \" You do not have permission to view user roles. Contact an administrator. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserRolesComponent_div_9_th_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1, \"Actions\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserRolesComponent_div_9_tr_12_td_8_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", role_r15.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r15.label, \" \");\n  }\n}\nfunction UserRolesComponent_div_9_tr_12_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"select\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function UserRolesComponent_div_9_tr_12_td_8_Template_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const user_r12 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(user_r12.role = $event);\n    })(\"ngModelChange\", function UserRolesComponent_div_9_tr_12_td_8_Template_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const user_r12 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.updateUserRole(user_r12, $event));\n    });\n    i0.ɵɵtemplate(2, UserRolesComponent_div_9_tr_12_td_8_option_2_Template, 2, 2, \"option\", 24);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r12 = i0.ɵɵnextContext().$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", user_r12.role)(\"disabled\", ctx_r13.loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r13.roleOptions);\n  }\n}\nfunction UserRolesComponent_div_9_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"span\", 22);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(8, UserRolesComponent_div_9_tr_12_td_8_Template, 3, 3, \"td\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r12 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r12.userName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r12.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r11.getRoleBadgeClass(user_r12.role));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r12.role);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.authService.canEditUserRoles());\n  }\n}\nfunction UserRolesComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"table\", 19)(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Role\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, UserRolesComponent_div_9_th_10_Template, 2, 0, \"th\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, UserRolesComponent_div_9_tr_12_Template, 9, 5, \"tr\", 21);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.authService.canEditUserRoles());\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.userRoles);\n  }\n}\nfunction UserRolesComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"p\", 27);\n    i0.ɵɵtext(2, \"No users found\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class UserRolesComponent {\n  constructor(authService, settingsService, fb) {\n    this.authService = authService;\n    this.settingsService = settingsService;\n    this.fb = fb;\n    this.userRoles = [];\n    this.loading = false;\n    this.error = '';\n    this.success = '';\n    // Role options for dropdown\n    this.roleOptions = [{\n      value: UserRole.Admin,\n      label: 'Admin'\n    }, {\n      value: UserRole.ScrumMaster,\n      label: 'Scrum Master'\n    }, {\n      value: UserRole.Member,\n      label: 'Member'\n    }];\n  }\n  ngOnInit() {\n    this.loadUserRoles();\n  }\n  loadUserRoles() {\n    if (!this.authService.canViewUserRoles()) {\n      this.error = 'You do not have permission to view user roles';\n      return;\n    }\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n    this.settingsService.getUserRoles().subscribe({\n      next: roles => {\n        this.userRoles = roles;\n        this.loading = false;\n      },\n      error: err => {\n        this.error = err.message || 'Failed to load user roles';\n        this.loading = false;\n      }\n    });\n  }\n  updateUserRole(user, newRole) {\n    if (!this.authService.canEditUserRoles()) {\n      this.error = 'You do not have permission to change user roles';\n      return;\n    }\n    if (user.role === newRole) {\n      return; // No change needed\n    }\n\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n    const request = {\n      userId: user.userId,\n      role: newRole\n    };\n    this.settingsService.updateUserRole(request).subscribe({\n      next: () => {\n        user.role = newRole; // Update locally\n        this.success = `Successfully updated ${user.userName}'s role to ${newRole}`;\n        this.loading = false;\n      },\n      error: err => {\n        this.error = err.message || 'Failed to update user role';\n        this.loading = false;\n      }\n    });\n  }\n  getRoleBadgeClass(role) {\n    switch (role) {\n      case UserRole.Admin:\n        return 'badge bg-danger';\n      case UserRole.ScrumMaster:\n        return 'badge bg-warning text-dark';\n      case UserRole.Member:\n        return 'badge bg-info text-dark';\n      default:\n        return 'badge bg-secondary';\n    }\n  }\n  static {\n    this.ɵfac = function UserRolesComponent_Factory(t) {\n      return new (t || UserRolesComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.SettingsService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserRolesComponent,\n      selectors: [[\"app-user-roles\"]],\n      decls: 11,\n      vars: 6,\n      consts: [[1, \"card\"], [1, \"card-header\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"alert alert-danger alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-success alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"d-flex justify-content-center mb-3\", 4, \"ngIf\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"class\", \"table-responsive\", 4, \"ngIf\"], [\"class\", \"text-center py-4\", 4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"alert-dismissible\", \"fade\", \"show\"], [\"type\", \"button\", 1, \"btn-close\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"alert-dismissible\", \"fade\", \"show\"], [1, \"d-flex\", \"justify-content-center\", \"mb-3\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"alert\", \"alert-warning\"], [1, \"bi\", \"bi-lock-fill\", \"me-2\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [1, \"form-select\", \"form-select-sm\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngValue\"], [1, \"text-center\", \"py-4\"], [1, \"text-muted\"]],\n      template: function UserRolesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h5\", 2);\n          i0.ɵɵtext(3, \"User Role Management\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵtemplate(5, UserRolesComponent_div_5_Template, 3, 1, \"div\", 4);\n          i0.ɵɵtemplate(6, UserRolesComponent_div_6_Template, 3, 1, \"div\", 5);\n          i0.ɵɵtemplate(7, UserRolesComponent_div_7_Template, 4, 0, \"div\", 6);\n          i0.ɵɵtemplate(8, UserRolesComponent_div_8_Template, 3, 0, \"div\", 7);\n          i0.ɵɵtemplate(9, UserRolesComponent_div_9_Template, 13, 2, \"div\", 8);\n          i0.ɵɵtemplate(10, UserRolesComponent_div_10_Template, 3, 0, \"div\", 9);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.success);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.authService.canViewUserRoles() && !ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.authService.canViewUserRoles() && !ctx.loading && ctx.userRoles.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.authService.canViewUserRoles() && !ctx.loading && ctx.userRoles.length === 0);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy91c2VyLXJvbGVzL3VzZXItcm9sZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0NBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBVc2VyIHJvbGVzIGNvbXBvbmVudCBzdHlsZXMgKi8gIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["UserRole","i0","UserRolesComponent","constructor","authService","settingsService","fb","value","Admin","label","ScrumMaster","Member","ngOnInit","loadUserRoles","canViewUserRoles","error","loading","success","getUserRoles","subscribe","next","roles","userRoles","err","message","updateUserRole","user","newRole","canEditUserRoles","role","request","userId","userName","getRoleBadgeClass","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\settings\\user-roles\\user-roles.component.ts","E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\settings\\user-roles\\user-roles.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { SettingsService } from '../../../services/settings.service';\r\nimport { UserRole, UserRoleDto, UpdateUserRoleRequest } from '../../../models/settings.model';\r\n\r\n@Component({\r\n  selector: 'app-user-roles',\r\n  templateUrl: './user-roles.component.html',\r\n  styleUrls: ['./user-roles.component.scss']\r\n})\r\nexport class UserRolesComponent implements OnInit {\r\n  userRoles: UserRoleDto[] = [];\r\n  loading = false;\r\n  error = '';\r\n  success = '';\r\n  \r\n  // Role options for dropdown\r\n  roleOptions = [\r\n    { value: UserRole.Admin, label: 'Admin' },\r\n    { value: UserRole.ScrumMaster, label: 'Scrum Master' },\r\n    { value: UserRole.Member, label: 'Member' }\r\n  ];\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private settingsService: SettingsService,\r\n    private fb: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadUserRoles();\r\n  }\r\n\r\n  loadUserRoles(): void {\r\n    if (!this.authService.canViewUserRoles()) {\r\n      this.error = 'You do not have permission to view user roles';\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.error = '';\r\n    this.success = '';\r\n\r\n    this.settingsService.getUserRoles().subscribe({\r\n      next: (roles) => {\r\n        this.userRoles = roles;\r\n        this.loading = false;\r\n      },\r\n      error: (err) => {\r\n        this.error = err.message || 'Failed to load user roles';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUserRole(user: UserRoleDto, newRole: UserRole): void {\r\n    if (!this.authService.canEditUserRoles()) {\r\n      this.error = 'You do not have permission to change user roles';\r\n      return;\r\n    }\r\n\r\n    if (user.role === newRole) {\r\n      return; // No change needed\r\n    }\r\n\r\n    this.loading = true;\r\n    this.error = '';\r\n    this.success = '';\r\n\r\n    const request: UpdateUserRoleRequest = {\r\n      userId: user.userId,\r\n      role: newRole\r\n    };\r\n\r\n    this.settingsService.updateUserRole(request).subscribe({\r\n      next: () => {\r\n        user.role = newRole; // Update locally\r\n        this.success = `Successfully updated ${user.userName}'s role to ${newRole}`;\r\n        this.loading = false;\r\n      },\r\n      error: (err) => {\r\n        this.error = err.message || 'Failed to update user role';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getRoleBadgeClass(role: UserRole): string {\r\n    switch (role) {\r\n      case UserRole.Admin:\r\n        return 'badge bg-danger';\r\n      case UserRole.ScrumMaster:\r\n        return 'badge bg-warning text-dark';\r\n      case UserRole.Member:\r\n        return 'badge bg-info text-dark';\r\n      default:\r\n        return 'badge bg-secondary';\r\n    }\r\n  }\r\n} ","<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <h5 class=\"mb-0\">User Role Management</h5>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- Error and success alerts -->\r\n    <div *ngIf=\"error\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n      {{ error }}\r\n      <button type=\"button\" class=\"btn-close\" (click)=\"error = ''\"></button>\r\n    </div>\r\n    \r\n    <div *ngIf=\"success\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n      {{ success }}\r\n      <button type=\"button\" class=\"btn-close\" (click)=\"success = ''\"></button>\r\n    </div>\r\n\r\n    <!-- Loading state -->\r\n    <div *ngIf=\"loading\" class=\"d-flex justify-content-center mb-3\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- No permission message -->\r\n    <div *ngIf=\"!authService.canViewUserRoles() && !loading\" class=\"alert alert-warning\">\r\n      <i class=\"bi bi-lock-fill me-2\"></i>\r\n      You do not have permission to view user roles. Contact an administrator.\r\n    </div>\r\n\r\n    <!-- User roles table -->\r\n    <div *ngIf=\"authService.canViewUserRoles() && !loading && userRoles.length > 0\" class=\"table-responsive\">\r\n      <table class=\"table table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th *ngIf=\"authService.canEditUserRoles()\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let user of userRoles\">\r\n            <td>{{ user.userName }}</td>\r\n            <td>{{ user.email }}</td>\r\n            <td>\r\n              <span [ngClass]=\"getRoleBadgeClass(user.role)\">{{ user.role }}</span>\r\n            </td>\r\n            <td *ngIf=\"authService.canEditUserRoles()\">\r\n              <select class=\"form-select form-select-sm\" \r\n                      [(ngModel)]=\"user.role\" \r\n                      (ngModelChange)=\"updateUserRole(user, $event)\"\r\n                      [disabled]=\"loading\">\r\n                <option *ngFor=\"let role of roleOptions\" [ngValue]=\"role.value\">\r\n                  {{ role.label }}\r\n                </option>\r\n              </select>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- Empty state -->\r\n    <div *ngIf=\"authService.canViewUserRoles() && !loading && userRoles.length === 0\" class=\"text-center py-4\">\r\n      <p class=\"text-muted\">No users found</p>\r\n    </div>\r\n  </div>\r\n</div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}