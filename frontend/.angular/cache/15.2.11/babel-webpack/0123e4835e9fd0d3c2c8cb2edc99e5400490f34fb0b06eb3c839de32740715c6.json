{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/task.service\";\nimport * as i2 from \"@angular/common\";\nfunction AutoAssignComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.error.tasks);\n  }\n}\nfunction AutoAssignComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.error.suggestions);\n  }\n}\nfunction AutoAssignComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.error.assign);\n  }\n}\nfunction AutoAssignComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"div\", 9)(3, \"span\", 10);\n    i0.ɵɵtext(4, \"Loading...\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"p\", 11);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r3.loading.tasks ? \"Loading tasks...\" : \"Analyzing developer performance...\");\n  }\n}\nfunction AutoAssignComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"div\", 12);\n    i0.ɵɵelement(3, \"i\", 13);\n    i0.ɵɵtext(4, \" No \\\"Dev-New\\\" tasks available for assignment. \");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AutoAssignComponent_div_12_tr_24_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 27)(2, \"span\", 28);\n    i0.ɵɵtext(3, \"AI Pick\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r7 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.autoAssignSuggestions[task_r7.id], \" \");\n  }\n}\nfunction AutoAssignComponent_div_12_tr_24_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵtext(1, \"No suggestion available\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AutoAssignComponent_div_12_tr_24_button_15_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Assign\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AutoAssignComponent_div_12_tr_24_button_15_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 32);\n  }\n}\nfunction AutoAssignComponent_div_12_tr_24_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AutoAssignComponent_div_12_tr_24_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const task_r7 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.assignTask(task_r7.id, ctx_r15.autoAssignSuggestions[task_r7.id]));\n    });\n    i0.ɵɵelement(1, \"i\", 30);\n    i0.ɵɵtemplate(2, AutoAssignComponent_div_12_tr_24_button_15_span_2_Template, 2, 0, \"span\", 23);\n    i0.ɵɵtemplate(3, AutoAssignComponent_div_12_tr_24_button_15_span_3_Template, 1, 0, \"span\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r10.loading.assign);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r10.loading.assign);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.loading.assign);\n  }\n}\nfunction AutoAssignComponent_div_12_tr_24_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵelement(1, \"i\", 34);\n    i0.ɵɵtext(2, \" No Recommendation \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AutoAssignComponent_div_12_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"span\", 21);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\")(9, \"span\", 22);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtemplate(12, AutoAssignComponent_div_12_tr_24_ng_container_12_Template, 5, 1, \"ng-container\", 23);\n    i0.ɵɵtemplate(13, AutoAssignComponent_div_12_tr_24_span_13_Template, 2, 0, \"span\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtemplate(15, AutoAssignComponent_div_12_tr_24_button_15_Template, 4, 3, \"button\", 25);\n    i0.ɵɵtemplate(16, AutoAssignComponent_div_12_tr_24_button_16_Template, 3, 0, \"button\", 26);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r7 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r7.id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r7.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r7.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r7.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.autoAssignSuggestions[task_r7.id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.autoAssignSuggestions[task_r7.id]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.autoAssignSuggestions[task_r7.id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.autoAssignSuggestions[task_r7.id]);\n  }\n}\nfunction AutoAssignComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 2)(2, \"div\", 14)(3, \"div\", 15)(4, \"h4\", 16);\n    i0.ɵɵtext(5, \"Tasks Ready for Assignment\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 17)(7, \"div\", 18)(8, \"table\", 19)(9, \"thead\")(10, \"tr\")(11, \"th\");\n    i0.ɵɵtext(12, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\");\n    i0.ɵɵtext(16, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"th\");\n    i0.ɵɵtext(18, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"th\");\n    i0.ɵɵtext(20, \"Recommended Developer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"th\");\n    i0.ɵɵtext(22, \"Action\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(23, \"tbody\");\n    i0.ɵɵtemplate(24, AutoAssignComponent_div_12_tr_24_Template, 17, 8, \"tr\", 20);\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(24);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.tasks);\n  }\n}\nexport class AutoAssignComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n    this.currentIterationPath = '';\n    this.autoAssignSuggestions = {};\n    this.loading = {\n      tasks: false,\n      suggestions: false,\n      assign: false\n    };\n    this.error = {\n      tasks: null,\n      suggestions: null,\n      assign: null\n    };\n  }\n  ngOnInit() {\n    // For demo purposes, use a default iteration path\n    this.currentIterationPath = 'Techoil\\\\2.3.23';\n    this.loadTasks();\n  }\n  loadTasks() {\n    this.loading.tasks = true;\n    this.error.tasks = null;\n    this.taskService.getTasks(this.currentIterationPath).subscribe({\n      next: tasks => {\n        // Filter for Dev-New tasks with type Feature or User Story\n        this.tasks = tasks.filter(t => t.status === 'Dev-New' && (t.type === 'Feature' || t.type === 'User Story') && !t.assignedTo);\n        this.loading.tasks = false;\n        // If we have tasks, load the suggestions\n        if (this.tasks.length > 0) {\n          this.loadAutoAssignSuggestions();\n        }\n      },\n      error: err => {\n        this.error.tasks = `Failed to load tasks: ${err.message}`;\n        this.loading.tasks = false;\n      }\n    });\n  }\n  loadAutoAssignSuggestions() {\n    this.loading.suggestions = true;\n    this.error.suggestions = null;\n    this.taskService.getAutoAssignSuggestions(this.currentIterationPath).subscribe({\n      next: suggestions => {\n        this.autoAssignSuggestions = suggestions;\n        this.loading.suggestions = false;\n      },\n      error: err => {\n        this.error.suggestions = `Failed to load auto-assign suggestions: ${err.message}`;\n        this.loading.suggestions = false;\n      }\n    });\n  }\n  assignTask(taskId, assignedTo) {\n    this.loading.assign = true;\n    this.error.assign = null;\n    // Extract just the name from the suggestion string\n    // The format is typically \"Name (explanation)\"\n    const nameOnly = assignedTo.split(' (')[0];\n    this.taskService.assignTask(taskId, nameOnly).subscribe({\n      next: () => {\n        // Remove the assigned task from the list\n        this.tasks = this.tasks.filter(t => t.id !== taskId);\n        this.loading.assign = false;\n      },\n      error: err => {\n        this.error.assign = `Failed to assign task: ${err.message}`;\n        this.loading.assign = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function AutoAssignComponent_Factory(t) {\n      return new (t || AutoAssignComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AutoAssignComponent,\n      selectors: [[\"app-auto-assign\"]],\n      decls: 13,\n      vars: 6,\n      consts: [[1, \"container-fluid\", \"p-4\"], [1, \"row\", \"mb-4\"], [1, \"col-12\"], [1, \"text-muted\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"row\"], [1, \"col-12\", \"text-center\", \"py-5\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"mt-2\"], [1, \"alert\", \"alert-info\"], [1, \"bi\", \"bi-info-circle\", \"me-2\"], [1, \"card\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"mb-0\"], [1, \"card-body\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [1, \"badge\", \"bg-info\", \"text-dark\"], [1, \"badge\", \"bg-secondary\"], [4, \"ngIf\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [\"class\", \"btn btn-primary btn-sm\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-secondary btn-sm\", \"disabled\", \"\", 4, \"ngIf\"], [1, \"d-flex\", \"align-items-center\"], [1, \"badge\", \"bg-success\", \"me-2\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"disabled\", \"click\"], [1, \"bi\", \"bi-person-check\", \"me-1\"], [\"class\", \"spinner-border spinner-border-sm\", \"role\", \"status\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\"], [\"disabled\", \"\", 1, \"btn\", \"btn-secondary\", \"btn-sm\"], [1, \"bi\", \"bi-person-x\", \"me-1\"]],\n      template: function AutoAssignComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n          i0.ɵɵtext(4, \"AI Task Auto-Assignment\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 3);\n          i0.ɵɵtext(6, \"Automatically assign \\\"Dev-New\\\" tasks to the most suitable developers based on past performance.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(7, AutoAssignComponent_div_7_Template, 2, 1, \"div\", 4);\n          i0.ɵɵtemplate(8, AutoAssignComponent_div_8_Template, 2, 1, \"div\", 4);\n          i0.ɵɵtemplate(9, AutoAssignComponent_div_9_Template, 2, 1, \"div\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(10, AutoAssignComponent_div_10_Template, 7, 1, \"div\", 5);\n          i0.ɵɵtemplate(11, AutoAssignComponent_div_11_Template, 5, 0, \"div\", 5);\n          i0.ɵɵtemplate(12, AutoAssignComponent_div_12_Template, 25, 1, \"div\", 5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.tasks);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.suggestions);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.assign);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.tasks || ctx.loading.suggestions);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.tasks && !ctx.loading.suggestions && ctx.tasks.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.tasks && !ctx.loading.suggestions && ctx.tasks.length > 0);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf],\n      styles: [\".badge[_ngcontent-%COMP%] {\\n  font-size: 0.8rem;\\n}\\n\\n.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n}\\n\\n.card-header[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\n  font-size: 1.25rem;\\n}\\n\\n.badge.bg-success[_ngcontent-%COMP%] {\\n  background-color: #198754 !important;\\n}\\n\\n.badge.bg-info[_ngcontent-%COMP%] {\\n  background-color: #0dcaf0 !important;\\n}\\n\\n.badge.bg-secondary[_ngcontent-%COMP%] {\\n  background-color: #6c757d !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hdXRvLWFzc2lnbi9hdXRvLWFzc2lnbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7QUFDRjs7QUFFQTtFQUNFLG9DQUFBO0FBQ0Y7O0FBRUE7RUFDRSxvQ0FBQTtBQUNGOztBQUVBO0VBQ0Usb0NBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5iYWRnZSB7XHJcbiAgZm9udC1zaXplOiAwLjhyZW07XHJcbn1cclxuXHJcbi50YWJsZSB0aCB7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG5cclxuLmNhcmQtaGVhZGVyIGg0IHtcclxuICBmb250LXNpemU6IDEuMjVyZW07XHJcbn1cclxuXHJcbi5iYWRnZS5iZy1zdWNjZXNzIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTk4NzU0ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5iYWRnZS5iZy1pbmZvIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGRjYWYwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5iYWRnZS5iZy1zZWNvbmRhcnkge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM2Yzc1N2QgIWltcG9ydGFudDtcclxufSAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["i0","AutoAssignComponent","constructor","taskService","tasks","suggestions","assign","ngOnInit","currentIterationPath","loadTasks","loading","error","getTasks","subscribe","next","filter","t","status","type","assignedTo","length","loadAutoAssignSuggestions","err","message","getAutoAssignSuggestions","autoAssignSuggestions","assignTask","taskId","nameOnly","split","id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\auto-assign\\auto-assign.component.html","E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\auto-assign\\auto-assign.component.ts"],"sourcesContent":["<div class=\"container-fluid p-4\">\r\n  <div class=\"row mb-4\">\r\n    <div class=\"col-12\">\r\n      <h2>AI Task Auto-Assignment</h2>\r\n      <p class=\"text-muted\">Automatically assign \"Dev-New\" tasks to the most suitable developers based on past performance.</p>\r\n      <div *ngIf=\"error.tasks\" class=\"alert alert-danger\">{{ error.tasks }}</div>\r\n      <div *ngIf=\"error.suggestions\" class=\"alert alert-danger\">{{ error.suggestions }}</div>\r\n      <div *ngIf=\"error.assign\" class=\"alert alert-danger\">{{ error.assign }}</div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading spinner -->\r\n  <div *ngIf=\"loading.tasks || loading.suggestions\" class=\"row\">\r\n    <div class=\"col-12 text-center py-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n      <p class=\"mt-2\">{{ loading.tasks ? 'Loading tasks...' : 'Analyzing developer performance...' }}</p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- No tasks message -->\r\n  <div *ngIf=\"!loading.tasks && !loading.suggestions && tasks.length === 0\" class=\"row\">\r\n    <div class=\"col-12 text-center py-5\">\r\n      <div class=\"alert alert-info\">\r\n        <i class=\"bi bi-info-circle me-2\"></i>\r\n        No \"Dev-New\" tasks available for assignment.\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Tasks with auto-assign suggestions -->\r\n  <div *ngIf=\"!loading.tasks && !loading.suggestions && tasks.length > 0\" class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header bg-primary text-white\">\r\n          <h4 class=\"mb-0\">Tasks Ready for Assignment</h4>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Type</th>\r\n                  <th>Title</th>\r\n                  <th>Status</th>\r\n                  <th>Recommended Developer</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let task of tasks\">\r\n                  <td>{{ task.id }}</td>\r\n                  <td>\r\n                    <span class=\"badge bg-info text-dark\">{{ task.type }}</span>\r\n                  </td>\r\n                  <td>{{ task.title }}</td>\r\n                  <td>\r\n                    <span class=\"badge bg-secondary\">{{ task.status }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <ng-container *ngIf=\"autoAssignSuggestions[task.id]\">\r\n                      <div class=\"d-flex align-items-center\">\r\n                        <span class=\"badge bg-success me-2\">AI Pick</span>\r\n                        {{ autoAssignSuggestions[task.id] }}\r\n                      </div>\r\n                    </ng-container>\r\n                    <span *ngIf=\"!autoAssignSuggestions[task.id]\" class=\"text-muted\">No suggestion available</span>\r\n                  </td>\r\n                  <td>\r\n                    <button \r\n                      *ngIf=\"autoAssignSuggestions[task.id]\"\r\n                      class=\"btn btn-primary btn-sm\" \r\n                      [disabled]=\"loading.assign\"\r\n                      (click)=\"assignTask(task.id, autoAssignSuggestions[task.id])\">\r\n                      <i class=\"bi bi-person-check me-1\"></i>\r\n                      <span *ngIf=\"!loading.assign\">Assign</span>\r\n                      <span *ngIf=\"loading.assign\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                    <button \r\n                      *ngIf=\"!autoAssignSuggestions[task.id]\"\r\n                      class=\"btn btn-secondary btn-sm\" \r\n                      disabled>\r\n                      <i class=\"bi bi-person-x me-1\"></i>\r\n                      No Recommendation\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> ","import { Component, OnInit } from '@angular/core';\r\nimport { TaskService } from '../../services/task.service';\r\nimport { WorkItem } from '../../models/task.model';\r\n\r\n@Component({\r\n  selector: 'app-auto-assign',\r\n  templateUrl: './auto-assign.component.html',\r\n  styleUrls: ['./auto-assign.component.scss']\r\n})\r\nexport class AutoAssignComponent implements OnInit {\r\n  tasks: WorkItem[] = [];\r\n  currentIterationPath: string = '';\r\n  autoAssignSuggestions: Record<string, string> = {};\r\n  loading = {\r\n    tasks: false,\r\n    suggestions: false,\r\n    assign: false\r\n  };\r\n  error = {\r\n    tasks: null as string | null,\r\n    suggestions: null as string | null,\r\n    assign: null as string | null\r\n  };\r\n\r\n  constructor(private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void {\r\n    // For demo purposes, use a default iteration path\r\n    this.currentIterationPath = 'Techoil\\\\2.3.23';\r\n    this.loadTasks();\r\n  }\r\n\r\n  loadTasks(): void {\r\n    this.loading.tasks = true;\r\n    this.error.tasks = null;\r\n    \r\n    this.taskService.getTasks(this.currentIterationPath).subscribe({\r\n      next: (tasks) => {\r\n        // Filter for Dev-New tasks with type Feature or User Story\r\n        this.tasks = tasks.filter(t => \r\n          t.status === 'Dev-New' && \r\n          (t.type === 'Feature' || t.type === 'User Story') &&\r\n          !t.assignedTo\r\n        );\r\n        this.loading.tasks = false;\r\n        \r\n        // If we have tasks, load the suggestions\r\n        if (this.tasks.length > 0) {\r\n          this.loadAutoAssignSuggestions();\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.error.tasks = `Failed to load tasks: ${err.message}`;\r\n        this.loading.tasks = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadAutoAssignSuggestions(): void {\r\n    this.loading.suggestions = true;\r\n    this.error.suggestions = null;\r\n    \r\n    this.taskService.getAutoAssignSuggestions(this.currentIterationPath).subscribe({\r\n      next: (suggestions) => {\r\n        this.autoAssignSuggestions = suggestions;\r\n        this.loading.suggestions = false;\r\n      },\r\n      error: (err) => {\r\n        this.error.suggestions = `Failed to load auto-assign suggestions: ${err.message}`;\r\n        this.loading.suggestions = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  assignTask(taskId: number, assignedTo: string): void {\r\n    this.loading.assign = true;\r\n    this.error.assign = null;\r\n    \r\n    // Extract just the name from the suggestion string\r\n    // The format is typically \"Name (explanation)\"\r\n    const nameOnly = assignedTo.split(' (')[0];\r\n    \r\n    this.taskService.assignTask(taskId, nameOnly).subscribe({\r\n      next: () => {\r\n        // Remove the assigned task from the list\r\n        this.tasks = this.tasks.filter(t => t.id !== taskId);\r\n        this.loading.assign = false;\r\n      },\r\n      error: (err) => {\r\n        this.error.assign = `Failed to assign task: ${err.message}`;\r\n        this.loading.assign = false;\r\n      }\r\n    });\r\n  }\r\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}