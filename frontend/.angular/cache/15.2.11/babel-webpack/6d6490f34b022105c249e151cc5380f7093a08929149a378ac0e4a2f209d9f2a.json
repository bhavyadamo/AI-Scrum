{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/auth.service\";\nimport * as i2 from \"../../../services/settings.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction AiModelSettingsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AiModelSettingsComponent_div_5_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.error = \"\");\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction AiModelSettingsComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AiModelSettingsComponent_div_6_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.success = \"\");\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.success, \" \");\n  }\n}\nfunction AiModelSettingsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13)(2, \"span\", 14);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AiModelSettingsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelement(1, \"i\", 16);\n    i0.ɵɵtext(2, \" You do not have permission to view AI model settings. Contact an administrator. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41)(1, \"small\");\n    i0.ɵɵtext(2, \"Model provider is required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_20_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"API key is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵtemplate(1, AiModelSettingsComponent_div_9_div_20_small_1_Template, 2, 0, \"small\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r10.aiModelForm.get(\"apiKey\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_21_div_4_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Endpoint URL is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_21_div_4_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Enter a valid URL\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_21_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵtemplate(1, AiModelSettingsComponent_div_9_div_21_div_4_small_1_Template, 2, 0, \"small\", 8);\n    i0.ɵɵtemplate(2, AiModelSettingsComponent_div_9_div_21_div_4_small_2_Template, 2, 0, \"small\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r14.aiModelForm.get(\"endpoint\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r14.aiModelForm.get(\"endpoint\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"pattern\"]);\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"label\", 42);\n    i0.ɵɵtext(2, \"Endpoint URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 43);\n    i0.ɵɵtemplate(4, AiModelSettingsComponent_div_9_div_21_div_4_Template, 3, 2, \"div\", 24);\n    i0.ɵɵelementStart(5, \"small\", 35);\n    i0.ɵɵtext(6, \" For Azure OpenAI, use your deployment URL \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r11.aiModelForm.get(\"endpoint\")) == null ? null : tmp_0_0.invalid) && ((tmp_0_0 = ctx_r11.aiModelForm.get(\"endpoint\")) == null ? null : tmp_0_0.touched));\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵelement(1, \"i\", 45);\n    i0.ɵɵtext(2, \" You can view AI model settings, but you need Admin or Scrum Master role to modify them. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AiModelSettingsComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 17);\n    i0.ɵɵlistener(\"ngSubmit\", function AiModelSettingsComponent_div_9_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.saveAiModelSettings());\n    });\n    i0.ɵɵelementStart(2, \"div\", 18)(3, \"label\", 19);\n    i0.ɵɵtext(4, \"AI Model Provider\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"select\", 20)(6, \"option\", 21);\n    i0.ɵɵtext(7, \"OpenAI\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"option\", 22);\n    i0.ɵɵtext(9, \"Azure OpenAI\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"option\", 23);\n    i0.ɵɵtext(11, \"Custom Model\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(12, AiModelSettingsComponent_div_9_div_12_Template, 3, 0, \"div\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 18)(14, \"label\", 25);\n    i0.ɵɵtext(15, \"API Key\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 26);\n    i0.ɵɵelement(17, \"input\", 27);\n    i0.ɵɵelementStart(18, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function AiModelSettingsComponent_div_9_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.toggleApiKeyVisibility());\n    });\n    i0.ɵɵelement(19, \"i\", 29);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(20, AiModelSettingsComponent_div_9_div_20_Template, 2, 1, \"div\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, AiModelSettingsComponent_div_9_div_21_Template, 7, 1, \"div\", 30);\n    i0.ɵɵelementStart(22, \"div\", 31)(23, \"div\", 32);\n    i0.ɵɵelement(24, \"input\", 33);\n    i0.ɵɵelementStart(25, \"label\", 34);\n    i0.ɵɵtext(26, \" Enable AI Recommendations \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"small\", 35);\n    i0.ɵɵtext(28, \" When enabled, the system will provide AI-powered recommendations for task estimation and assignment \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"div\", 31)(30, \"div\", 32);\n    i0.ɵɵelement(31, \"input\", 36);\n    i0.ɵɵelementStart(32, \"label\", 37);\n    i0.ɵɵtext(33, \" Enable Automatic Model Updates \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"small\", 35);\n    i0.ɵɵtext(35, \" When enabled, the AI model will automatically receive updates and improvements \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(36, \"button\", 38);\n    i0.ɵɵelement(37, \"i\", 39);\n    i0.ɵɵtext(38, \" Save AI Model Settings \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(39, AiModelSettingsComponent_div_9_div_39_Template, 3, 0, \"div\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r4.aiModelForm);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r4.aiModelForm.get(\"modelType\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r4.aiModelForm.get(\"modelType\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"type\", ctx_r4.showApiKey ? \"text\" : \"password\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r4.showApiKey ? \"bi-eye-slash\" : \"bi-eye\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r4.aiModelForm.get(\"apiKey\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx_r4.aiModelForm.get(\"apiKey\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r4.aiModelForm.get(\"modelType\")) == null ? null : tmp_5_0.value) === \"azureopenai\" || ((tmp_5_0 = ctx_r4.aiModelForm.get(\"modelType\")) == null ? null : tmp_5_0.value) === \"custom\");\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"disabled\", ctx_r4.aiModelForm.invalid || ctx_r4.loading || !ctx_r4.authService.canEditAiModelSettings());\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.authService.canEditAiModelSettings());\n  }\n}\nexport class AiModelSettingsComponent {\n  constructor(authService, settingsService, fb) {\n    this.authService = authService;\n    this.settingsService = settingsService;\n    this.fb = fb;\n    this.settings = null;\n    this.loading = false;\n    this.error = '';\n    this.success = '';\n    this.showApiKey = false;\n    this.aiModelForm = this.fb.group({\n      modelType: ['openai', Validators.required],\n      apiKey: ['', Validators.required],\n      endpoint: ['', [\n      // Make endpoint required only for azureopenai and custom models\n      // Will be handled in custom validation\n      Validators.pattern(/^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/)]],\n      enableRecommendations: [true],\n      enableAutoUpdate: [true]\n    });\n    // Add custom validator for the endpoint field\n    this.aiModelForm.get('modelType')?.valueChanges.subscribe(value => {\n      const endpointControl = this.aiModelForm.get('endpoint');\n      if (value === 'azureopenai' || value === 'custom') {\n        endpointControl?.setValidators([Validators.required, Validators.pattern(/^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/)]);\n      } else {\n        endpointControl?.setValidators([Validators.pattern(/^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/)]);\n      }\n      endpointControl?.updateValueAndValidity();\n    });\n  }\n  ngOnInit() {\n    this.loadSettings();\n  }\n  loadSettings() {\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n    this.settingsService.getAiModelSettings().subscribe({\n      next: settings => {\n        this.settings = settings;\n        // Populate form with current settings\n        if (settings) {\n          this.aiModelForm.patchValue({\n            modelType: settings.modelType || 'openai',\n            endpoint: settings.modelEndpoint || '',\n            enableRecommendations: settings.enableRecommendations || true,\n            enableAutoUpdate: settings.enableAutoUpdate\n            // We don't populate the API key for security reasons\n          });\n        }\n\n        this.loading = false;\n      },\n      error: err => {\n        this.error = err.message || 'Failed to load AI model settings';\n        this.loading = false;\n        // Create mock data for demo if API fails\n        if (!this.settings) {\n          this.createMockSettings();\n        }\n      }\n    });\n  }\n  saveAiModelSettings() {\n    if (!this.authService.canEditAiModelSettings()) {\n      this.error = 'You do not have permission to update AI model settings';\n      return;\n    }\n    if (this.aiModelForm.invalid) {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.aiModelForm.controls).forEach(key => {\n        const control = this.aiModelForm.get(key);\n        control?.markAsTouched();\n      });\n      return;\n    }\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n    const formValues = this.aiModelForm.value;\n    const settings = {\n      modelType: formValues.modelType,\n      modelEndpoint: formValues.endpoint || null,\n      apiKey: formValues.apiKey,\n      enableRecommendations: formValues.enableRecommendations,\n      enableAutoUpdate: formValues.enableAutoUpdate\n    };\n    // In a real app, this would be sent to the backend\n    // For demo purposes, we'll save to localStorage\n    localStorage.setItem('aiModelSettings', JSON.stringify({\n      ...settings,\n      apiKey: '•••••••••••••' // Don't store the actual API key in localStorage\n    }));\n    // Simulate API call\n    setTimeout(() => {\n      this.settings = settings;\n      this.success = 'AI model settings saved successfully';\n      this.loading = false;\n    }, 800);\n  }\n  toggleApiKeyVisibility() {\n    this.showApiKey = !this.showApiKey;\n  }\n  // Create mock settings for demo purposes\n  createMockSettings() {\n    this.settings = {\n      modelType: 'openai',\n      modelEndpoint: '',\n      apiKey: '•••••••••••••••••••••••••••••',\n      enableRecommendations: true,\n      enableAutoUpdate: true\n    };\n    // Populate form with mock data\n    this.aiModelForm.patchValue({\n      modelType: this.settings?.modelType || 'openai',\n      endpoint: this.settings?.modelEndpoint || '',\n      enableRecommendations: this.settings?.enableRecommendations || true,\n      enableAutoUpdate: this.settings?.enableAutoUpdate || true\n      // Don't populate API key for security\n    });\n  }\n\n  static {\n    this.ɵfac = function AiModelSettingsComponent_Factory(t) {\n      return new (t || AiModelSettingsComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.SettingsService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AiModelSettingsComponent,\n      selectors: [[\"app-ai-model-settings\"]],\n      decls: 10,\n      vars: 5,\n      consts: [[1, \"card\"], [1, \"card-header\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"alert alert-danger alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-success alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"d-flex justify-content-center mb-3\", 4, \"ngIf\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"alert-dismissible\", \"fade\", \"show\"], [\"type\", \"button\", 1, \"btn-close\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"alert-dismissible\", \"fade\", \"show\"], [1, \"d-flex\", \"justify-content-center\", \"mb-3\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"alert\", \"alert-warning\"], [1, \"bi\", \"bi-lock-fill\", \"me-2\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"modelType\", 1, \"form-label\"], [\"id\", \"modelType\", \"formControlName\", \"modelType\", 1, \"form-select\"], [\"value\", \"openai\"], [\"value\", \"azureopenai\"], [\"value\", \"custom\"], [\"class\", \"text-danger mt-1\", 4, \"ngIf\"], [\"for\", \"apiKey\", 1, \"form-label\"], [1, \"input-group\"], [\"id\", \"apiKey\", \"formControlName\", \"apiKey\", \"placeholder\", \"Enter your API key\", 1, \"form-control\", 3, \"type\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"bi\", 3, \"ngClass\"], [\"class\", \"mb-3\", 4, \"ngIf\"], [1, \"mb-4\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"id\", \"enableRecommendations\", \"formControlName\", \"enableRecommendations\", 1, \"form-check-input\"], [\"for\", \"enableRecommendations\", 1, \"form-check-label\"], [1, \"form-text\", \"text-muted\"], [\"type\", \"checkbox\", \"id\", \"enableAutoUpdate\", \"formControlName\", \"enableAutoUpdate\", 1, \"form-check-input\"], [\"for\", \"enableAutoUpdate\", 1, \"form-check-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"bi\", \"bi-check-circle\", \"me-1\"], [\"class\", \"alert alert-info mt-3\", 4, \"ngIf\"], [1, \"text-danger\", \"mt-1\"], [\"for\", \"endpoint\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"endpoint\", \"formControlName\", \"endpoint\", \"placeholder\", \"Enter the model endpoint URL\", 1, \"form-control\"], [1, \"alert\", \"alert-info\", \"mt-3\"], [1, \"bi\", \"bi-info-circle\", \"me-2\"]],\n      template: function AiModelSettingsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h5\", 2);\n          i0.ɵɵtext(3, \"AI Model Settings\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵtemplate(5, AiModelSettingsComponent_div_5_Template, 3, 1, \"div\", 4);\n          i0.ɵɵtemplate(6, AiModelSettingsComponent_div_6_Template, 3, 1, \"div\", 5);\n          i0.ɵɵtemplate(7, AiModelSettingsComponent_div_7_Template, 4, 0, \"div\", 6);\n          i0.ɵɵtemplate(8, AiModelSettingsComponent_div_8_Template, 3, 0, \"div\", 7);\n          i0.ɵɵtemplate(9, AiModelSettingsComponent_div_9_Template, 40, 8, \"div\", 8);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.success);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.authService.canViewAiModelSettings() && !ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.authService.canViewAiModelSettings() && !ctx.loading);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\".form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 1.5rem;\\n}\\n\\n.form-check[_ngcontent-%COMP%] {\\n  padding-left: 1.8rem;\\n  margin-bottom: 1rem;\\n}\\n.form-check[_ngcontent-%COMP%]   .form-check-input[_ngcontent-%COMP%] {\\n  width: 1.2em;\\n  height: 1.2em;\\n  margin-top: 0.15em;\\n  margin-left: -1.8rem;\\n}\\n.form-check[_ngcontent-%COMP%]   .form-check-input[_ngcontent-%COMP%]:checked {\\n  background-color: #3949ab;\\n  border-color: #3949ab;\\n}\\n.form-check[_ngcontent-%COMP%]   .form-check-input[_ngcontent-%COMP%]:focus {\\n  border-color: #5c6bc0;\\n  box-shadow: 0 0 0 0.2rem rgba(92, 107, 192, 0.25);\\n}\\n.form-check[_ngcontent-%COMP%]   .form-check-label[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n}\\n\\n.input-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%] {\\n  border-right: 0;\\n}\\n.input-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus {\\n  box-shadow: none;\\n}\\n.input-group[_ngcontent-%COMP%]   .btn-outline-secondary[_ngcontent-%COMP%] {\\n  background-color: white;\\n  border-color: #c5cae9;\\n  border-left: 0;\\n  color: #3949ab;\\n}\\n.input-group[_ngcontent-%COMP%]   .btn-outline-secondary[_ngcontent-%COMP%]:hover {\\n  background-color: #e8eaf6;\\n  color: #303f9f;\\n}\\n.input-group[_ngcontent-%COMP%]   .btn-outline-secondary[_ngcontent-%COMP%]:focus {\\n  box-shadow: none;\\n}\\n\\n.feature-section[_ngcontent-%COMP%] {\\n  background-color: #ede7f6;\\n  border-radius: 8px;\\n  padding: 1.25rem;\\n  margin-bottom: 1.5rem;\\n  border-left: 4px solid #673ab7;\\n}\\n.feature-section[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%] {\\n  color: #673ab7;\\n  font-weight: 600;\\n  margin-bottom: 1rem;\\n}\\n\\n.model-type-option[_ngcontent-%COMP%] {\\n  border: 1px solid #c5cae9;\\n  border-radius: 8px;\\n  padding: 1rem;\\n  margin-bottom: 1rem;\\n  transition: all 0.2s ease;\\n  cursor: pointer;\\n}\\n.model-type-option[_ngcontent-%COMP%]:hover {\\n  background-color: #e8eaf6;\\n}\\n.model-type-option.selected[_ngcontent-%COMP%] {\\n  background-color: #e8eaf6;\\n  border-color: #3949ab;\\n  box-shadow: 0 0 0 1px #3949ab;\\n}\\n.model-type-option[_ngcontent-%COMP%]   .model-type-title[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  color: #2c3e50;\\n}\\n.model-type-option[_ngcontent-%COMP%]   .model-type-description[_ngcontent-%COMP%] {\\n  font-size: 0.9rem;\\n  color: #6c757d;\\n}\\n\\n.alert-info[_ngcontent-%COMP%] {\\n  background-color: #e1f5fe;\\n  border-color: #03a9f4;\\n  color: #0277bd;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9haS1tb2RlbC1zZXR0aW5ncy9haS1tb2RlbC1zZXR0aW5ncy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1Q0FBQTtBQUNBO0VBQ0UscUJBQUE7QUFDRjs7QUFFQTtFQUNFLG9CQUFBO0VBQ0EsbUJBQUE7QUFDRjtBQUNFO0VBQ0UsWUFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLG9CQUFBO0FBQ0o7QUFDSTtFQUNFLHlCQUFBO0VBQ0EscUJBQUE7QUFDTjtBQUVJO0VBQ0UscUJBQUE7RUFDQSxpREFBQTtBQUFOO0FBSUU7RUFDRSxnQkFBQTtBQUZKOztBQU9FO0VBQ0UsZUFBQTtBQUpKO0FBTUk7RUFDRSxnQkFBQTtBQUpOO0FBUUU7RUFDRSx1QkFBQTtFQUNBLHFCQUFBO0VBQ0EsY0FBQTtFQUNBLGNBQUE7QUFOSjtBQVFJO0VBQ0UseUJBQUE7RUFDQSxjQUFBO0FBTk47QUFTSTtFQUNFLGdCQUFBO0FBUE47O0FBYUE7RUFDRSx5QkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtFQUNBLDhCQUFBO0FBVkY7QUFZRTtFQUNFLGNBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0FBVko7O0FBZUE7RUFDRSx5QkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7RUFDQSxlQUFBO0FBWkY7QUFjRTtFQUNFLHlCQUFBO0FBWko7QUFlRTtFQUNFLHlCQUFBO0VBQ0EscUJBQUE7RUFDQSw2QkFBQTtBQWJKO0FBZ0JFO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0FBZEo7QUFpQkU7RUFDRSxpQkFBQTtFQUNBLGNBQUE7QUFmSjs7QUFtQkE7RUFDRSx5QkFBQTtFQUNBLHFCQUFBO0VBQ0EsY0FBQTtBQWhCRiIsInNvdXJjZXNDb250ZW50IjpbIi8qIEFJIG1vZGVsIHNldHRpbmdzIGNvbXBvbmVudCBzdHlsZXMgKi9cclxuLmZvcm0tZ3JvdXAge1xyXG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcclxufVxyXG5cclxuLmZvcm0tY2hlY2sge1xyXG4gIHBhZGRpbmctbGVmdDogMS44cmVtO1xyXG4gIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgXHJcbiAgLmZvcm0tY2hlY2staW5wdXQge1xyXG4gICAgd2lkdGg6IDEuMmVtO1xyXG4gICAgaGVpZ2h0OiAxLjJlbTtcclxuICAgIG1hcmdpbi10b3A6IDAuMTVlbTtcclxuICAgIG1hcmdpbi1sZWZ0OiAtMS44cmVtO1xyXG4gICAgXHJcbiAgICAmOmNoZWNrZWQge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzk0OWFiO1xyXG4gICAgICBib3JkZXItY29sb3I6ICMzOTQ5YWI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICY6Zm9jdXMge1xyXG4gICAgICBib3JkZXItY29sb3I6ICM1YzZiYzA7XHJcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDkyLCAxMDcsIDE5MiwgMC4yNSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWNoZWNrLWxhYmVsIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgfVxyXG59XHJcblxyXG4uaW5wdXQtZ3JvdXAge1xyXG4gIC5mb3JtLWNvbnRyb2wge1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAwO1xyXG4gICAgXHJcbiAgICAmOmZvY3VzIHtcclxuICAgICAgYm94LXNoYWRvdzogbm9uZTtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgLmJ0bi1vdXRsaW5lLXNlY29uZGFyeSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlci1jb2xvcjogI2M1Y2FlOTtcclxuICAgIGJvcmRlci1sZWZ0OiAwO1xyXG4gICAgY29sb3I6ICMzOTQ5YWI7XHJcbiAgICBcclxuICAgICY6aG92ZXIge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThlYWY2O1xyXG4gICAgICBjb2xvcjogIzMwM2Y5ZjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJjpmb2N1cyB7XHJcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBGZWF0dXJlIHNldHRpbmdzIHNlY3Rpb24gc3R5bGluZ1xyXG4uZmVhdHVyZS1zZWN0aW9uIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRlN2Y2O1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBwYWRkaW5nOiAxLjI1cmVtO1xyXG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcclxuICBib3JkZXItbGVmdDogNHB4IHNvbGlkICM2NzNhYjc7XHJcbiAgXHJcbiAgaDYge1xyXG4gICAgY29sb3I6ICM2NzNhYjc7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuICB9XHJcbn1cclxuXHJcbi8vIE1vZGVsIHR5cGUgb3B0aW9ucyBzdHlsaW5nXHJcbi5tb2RlbC10eXBlLW9wdGlvbiB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2M1Y2FlOTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgcGFkZGluZzogMXJlbTtcclxuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIFxyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U4ZWFmNjtcclxuICB9XHJcbiAgXHJcbiAgJi5zZWxlY3RlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThlYWY2O1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjMzk0OWFiO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDAgMXB4ICMzOTQ5YWI7XHJcbiAgfVxyXG4gIFxyXG4gIC5tb2RlbC10eXBlLXRpdGxlIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBjb2xvcjogIzJjM2U1MDtcclxuICB9XHJcbiAgXHJcbiAgLm1vZGVsLXR5cGUtZGVzY3JpcHRpb24ge1xyXG4gICAgZm9udC1zaXplOiAwLjlyZW07XHJcbiAgICBjb2xvcjogIzZjNzU3ZDtcclxuICB9XHJcbn1cclxuXHJcbi5hbGVydC1pbmZvIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFmNWZlO1xyXG4gIGJvcmRlci1jb2xvcjogIzAzYTlmNDtcclxuICBjb2xvcjogIzAyNzdiZDtcclxufSAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","AiModelSettingsComponent","constructor","authService","settingsService","fb","aiModelForm","group","modelType","required","apiKey","endpoint","pattern","enableRecommendations","enableAutoUpdate","get","valueChanges","subscribe","value","endpointControl","setValidators","updateValueAndValidity","ngOnInit","loadSettings","loading","error","success","getAiModelSettings","next","settings","patchValue","modelEndpoint","err","message","createMockSettings","saveAiModelSettings","canEditAiModelSettings","invalid","Object","keys","controls","forEach","key","control","markAsTouched","formValues","localStorage","setItem","JSON","stringify","setTimeout","toggleApiKeyVisibility","showApiKey","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\settings\\ai-model-settings\\ai-model-settings.component.ts","E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\settings\\ai-model-settings\\ai-model-settings.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../../services/auth.service';\nimport { SettingsService } from '../../../services/settings.service';\nimport { AiModelSettingsDto } from '../../../models/settings.model';\n\n@Component({\n  selector: 'app-ai-model-settings',\n  templateUrl: './ai-model-settings.component.html',\n  styleUrls: ['./ai-model-settings.component.scss']\n})\nexport class AiModelSettingsComponent implements OnInit {\n  settings: AiModelSettingsDto | null = null;\n  aiModelForm: FormGroup;\n  loading = false;\n  error = '';\n  success = '';\n  showApiKey = false;\n\n  constructor(\n    public authService: AuthService,\n    private settingsService: SettingsService,\n    private fb: FormBuilder\n  ) {\n    this.aiModelForm = this.fb.group({\n      modelType: ['openai', Validators.required],\n      apiKey: ['', Validators.required],\n      endpoint: ['', [\n        // Make endpoint required only for azureopenai and custom models\n        // Will be handled in custom validation\n        Validators.pattern(/^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/)\n      ]],\n      enableRecommendations: [true],\n      enableAutoUpdate: [true]\n    });\n\n    // Add custom validator for the endpoint field\n    this.aiModelForm.get('modelType')?.valueChanges.subscribe(value => {\n      const endpointControl = this.aiModelForm.get('endpoint');\n      if (value === 'azureopenai' || value === 'custom') {\n        endpointControl?.setValidators([\n          Validators.required,\n          Validators.pattern(/^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/)\n        ]);\n      } else {\n        endpointControl?.setValidators([\n          Validators.pattern(/^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/)\n        ]);\n      }\n      endpointControl?.updateValueAndValidity();\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadSettings();\n  }\n\n  loadSettings(): void {\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n\n    this.settingsService.getAiModelSettings().subscribe({\n      next: (settings) => {\n        this.settings = settings;\n        \n        // Populate form with current settings\n        if (settings) {\n          this.aiModelForm.patchValue({\n            modelType: settings.modelType || 'openai',\n            endpoint: settings.modelEndpoint || '',\n            enableRecommendations: settings.enableRecommendations || true,\n            enableAutoUpdate: settings.enableAutoUpdate\n            // We don't populate the API key for security reasons\n          });\n        }\n        \n        this.loading = false;\n      },\n      error: (err) => {\n        this.error = err.message || 'Failed to load AI model settings';\n        this.loading = false;\n        \n        // Create mock data for demo if API fails\n        if (!this.settings) {\n          this.createMockSettings();\n        }\n      }\n    });\n  }\n\n  saveAiModelSettings(): void {\n    if (!this.authService.canEditAiModelSettings()) {\n      this.error = 'You do not have permission to update AI model settings';\n      return;\n    }\n\n    if (this.aiModelForm.invalid) {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.aiModelForm.controls).forEach(key => {\n        const control = this.aiModelForm.get(key);\n        control?.markAsTouched();\n      });\n      return;\n    }\n\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n\n    const formValues = this.aiModelForm.value;\n    \n    const settings = {\n      modelType: formValues.modelType,\n      modelEndpoint: formValues.endpoint || null,\n      apiKey: formValues.apiKey,\n      enableRecommendations: formValues.enableRecommendations,\n      enableAutoUpdate: formValues.enableAutoUpdate\n    };\n\n    // In a real app, this would be sent to the backend\n    // For demo purposes, we'll save to localStorage\n    localStorage.setItem('aiModelSettings', JSON.stringify({\n      ...settings,\n      apiKey: '•••••••••••••' // Don't store the actual API key in localStorage\n    }));\n    \n    // Simulate API call\n    setTimeout(() => {\n      this.settings = settings as AiModelSettingsDto;\n      this.success = 'AI model settings saved successfully';\n      this.loading = false;\n    }, 800);\n  }\n\n  toggleApiKeyVisibility(): void {\n    this.showApiKey = !this.showApiKey;\n  }\n\n  // Create mock settings for demo purposes\n  private createMockSettings(): void {\n    this.settings = {\n      modelType: 'openai',\n      modelEndpoint: '',\n      apiKey: '•••••••••••••••••••••••••••••',\n      enableRecommendations: true,\n      enableAutoUpdate: true\n    };\n    \n    // Populate form with mock data\n    this.aiModelForm.patchValue({\n      modelType: this.settings?.modelType || 'openai',\n      endpoint: this.settings?.modelEndpoint || '',\n      enableRecommendations: this.settings?.enableRecommendations || true,\n      enableAutoUpdate: this.settings?.enableAutoUpdate || true\n      // Don't populate API key for security\n    });\n  }\n} ","<div class=\"card\">\n  <div class=\"card-header\">\n    <h5 class=\"mb-0\">AI Model Settings</h5>\n  </div>\n  <div class=\"card-body\">\n    <!-- Error and success alerts -->\n    <div *ngIf=\"error\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n      {{ error }}\n      <button type=\"button\" class=\"btn-close\" (click)=\"error = ''\"></button>\n    </div>\n    \n    <div *ngIf=\"success\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n      {{ success }}\n      <button type=\"button\" class=\"btn-close\" (click)=\"success = ''\"></button>\n    </div>\n\n    <!-- Loading state -->\n    <div *ngIf=\"loading\" class=\"d-flex justify-content-center mb-3\">\n      <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n\n    <!-- No permission message -->\n    <div *ngIf=\"!authService.canViewAiModelSettings() && !loading\" class=\"alert alert-warning\">\n      <i class=\"bi bi-lock-fill me-2\"></i>\n      You do not have permission to view AI model settings. Contact an administrator.\n    </div>\n\n    <!-- AI Model Settings Form -->\n    <div *ngIf=\"authService.canViewAiModelSettings() && !loading\">\n      <form [formGroup]=\"aiModelForm\" (ngSubmit)=\"saveAiModelSettings()\">\n        <div class=\"mb-3\">\n          <label for=\"modelType\" class=\"form-label\">AI Model Provider</label>\n          <select id=\"modelType\" class=\"form-select\" formControlName=\"modelType\">\n            <option value=\"openai\">OpenAI</option>\n            <option value=\"azureopenai\">Azure OpenAI</option>\n            <option value=\"custom\">Custom Model</option>\n          </select>\n          <div *ngIf=\"aiModelForm.get('modelType')?.invalid && aiModelForm.get('modelType')?.touched\" class=\"text-danger mt-1\">\n            <small>Model provider is required</small>\n          </div>\n        </div>\n\n        <div class=\"mb-3\">\n          <label for=\"apiKey\" class=\"form-label\">API Key</label>\n          <div class=\"input-group\">\n            <input \n              [type]=\"showApiKey ? 'text' : 'password'\" \n              class=\"form-control\" \n              id=\"apiKey\" \n              formControlName=\"apiKey\"\n              placeholder=\"Enter your API key\">\n            <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"toggleApiKeyVisibility()\">\n              <i class=\"bi\" [ngClass]=\"showApiKey ? 'bi-eye-slash' : 'bi-eye'\"></i>\n            </button>\n          </div>\n          <div *ngIf=\"aiModelForm.get('apiKey')?.invalid && aiModelForm.get('apiKey')?.touched\" class=\"text-danger mt-1\">\n            <small *ngIf=\"aiModelForm.get('apiKey')?.errors?.['required']\">API key is required</small>\n          </div>\n        </div>\n\n        <div class=\"mb-3\" *ngIf=\"aiModelForm.get('modelType')?.value === 'azureopenai' || aiModelForm.get('modelType')?.value === 'custom'\">\n          <label for=\"endpoint\" class=\"form-label\">Endpoint URL</label>\n          <input \n            type=\"text\" \n            class=\"form-control\" \n            id=\"endpoint\" \n            formControlName=\"endpoint\"\n            placeholder=\"Enter the model endpoint URL\">\n          <div *ngIf=\"aiModelForm.get('endpoint')?.invalid && aiModelForm.get('endpoint')?.touched\" class=\"text-danger mt-1\">\n            <small *ngIf=\"aiModelForm.get('endpoint')?.errors?.['required']\">Endpoint URL is required</small>\n            <small *ngIf=\"aiModelForm.get('endpoint')?.errors?.['pattern']\">Enter a valid URL</small>\n          </div>\n          <small class=\"form-text text-muted\">\n            For Azure OpenAI, use your deployment URL\n          </small>\n        </div>\n\n        <div class=\"mb-4\">\n          <div class=\"form-check\">\n            <input \n              class=\"form-check-input\" \n              type=\"checkbox\" \n              id=\"enableRecommendations\" \n              formControlName=\"enableRecommendations\">\n            <label class=\"form-check-label\" for=\"enableRecommendations\">\n              Enable AI Recommendations\n            </label>\n          </div>\n          <small class=\"form-text text-muted\">\n            When enabled, the system will provide AI-powered recommendations for task estimation and assignment\n          </small>\n        </div>\n\n        <div class=\"mb-4\">\n          <div class=\"form-check\">\n            <input \n              class=\"form-check-input\" \n              type=\"checkbox\" \n              id=\"enableAutoUpdate\" \n              formControlName=\"enableAutoUpdate\">\n            <label class=\"form-check-label\" for=\"enableAutoUpdate\">\n              Enable Automatic Model Updates\n            </label>\n          </div>\n          <small class=\"form-text text-muted\">\n            When enabled, the AI model will automatically receive updates and improvements\n          </small>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"aiModelForm.invalid || loading || !authService.canEditAiModelSettings()\">\n          <i class=\"bi bi-check-circle me-1\"></i> Save AI Model Settings\n        </button>\n      </form>\n\n      <!-- Info message about permissions -->\n      <div *ngIf=\"!authService.canEditAiModelSettings()\" class=\"alert alert-info mt-3\">\n        <i class=\"bi bi-info-circle me-2\"></i>\n        You can view AI model settings, but you need Admin or Scrum Master role to modify them.\n      </div>\n    </div>\n  </div>\n</div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}