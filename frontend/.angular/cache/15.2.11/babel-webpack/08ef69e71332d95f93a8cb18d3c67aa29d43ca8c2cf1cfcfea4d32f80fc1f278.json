{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/task.service\";\nimport * as i2 from \"../../services/team.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction TaskDistributionComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Auto-Assign Tasks\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"span\", 34);\n    i0.ɵɵtext(2, \" Assigning... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.error.autoAssign);\n  }\n}\nfunction TaskDistributionComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"div\", 37)(2, \"span\", 38);\n    i0.ɵɵtext(3, \"Loading tasks...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction TaskDistributionComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.error.tasks);\n  }\n}\nfunction TaskDistributionComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"p\", 39);\n    i0.ɵɵtext(2, \"No tasks found for the current sprint.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskDistributionComponent_div_20_tr_17_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r17.assignedTo);\n  }\n}\nfunction TaskDistributionComponent_div_20_tr_17_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 39);\n    i0.ɵɵtext(1, \"Unassigned\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_20_tr_17_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 48)(1, \"small\", 49);\n    i0.ɵɵelement(2, \"i\", 50);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Suggest: \", task_r17.autoAssignSuggestion, \" \");\n  }\n}\nfunction TaskDistributionComponent_div_20_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"span\", 43);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtemplate(9, TaskDistributionComponent_div_20_tr_17_span_9_Template, 2, 1, \"span\", 7);\n    i0.ɵɵtemplate(10, TaskDistributionComponent_div_20_tr_17_span_10_Template, 2, 0, \"span\", 44);\n    i0.ɵɵtemplate(11, TaskDistributionComponent_div_20_tr_17_div_11_Template, 4, 1, \"div\", 45);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"span\", 43);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_20_tr_17_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const task_r17 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.openAssignModal(task_r17.id));\n    });\n    i0.ɵɵelement(17, \"i\", 47);\n    i0.ɵɵtext(18, \" Assign \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r17.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r17.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r16.getPriorityClass(task_r17.priority));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r17.priority, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", task_r17.assignedTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !task_r17.assignedTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r17.autoAssignSuggestion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r16.getStatusClass(task_r17.status));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r17.status, \" \");\n  }\n}\nfunction TaskDistributionComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40)(1, \"table\", 41)(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Priority\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Assigned To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"tbody\");\n    i0.ɵɵtemplate(17, TaskDistributionComponent_div_20_tr_17_Template, 19, 9, \"tr\", 42);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.tasks);\n  }\n}\nfunction TaskDistributionComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"div\", 37)(2, \"span\", 38);\n    i0.ɵɵtext(3, \"Loading team members...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction TaskDistributionComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.error.members);\n  }\n}\nfunction TaskDistributionComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"p\", 39);\n    i0.ɵɵtext(2, \"No team members found.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskDistributionComponent_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 52)(1, \"div\", 53)(2, \"div\", 54)(3, \"h5\", 55);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 56)(6, \"span\", 57);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"div\", 58);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const member_r26 = ctx.$implicit;\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(member_r26.displayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r25.getTeamMemberWorkloadClass(member_r26.currentWorkload));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Tasks: \", member_r26.currentWorkload, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", member_r26.currentWorkload / 10 * 100, \"%\");\n  }\n}\nfunction TaskDistributionComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, TaskDistributionComponent_div_31_div_1_Template, 9, 5, \"div\", 51);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.teamMembers);\n  }\n}\nfunction TaskDistributionComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r11.error.assign);\n  }\n}\nfunction TaskDistributionComponent_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 59);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const member_r27 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", member_r27.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", member_r27.displayName, \" (Tasks: \", member_r27.currentWorkload, \")\");\n  }\n}\nfunction TaskDistributionComponent_span_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Assign\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_span_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"span\", 34);\n    i0.ɵɵtext(2, \" Assigning... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 60);\n  }\n}\nexport let TaskDistributionComponent = /*#__PURE__*/(() => {\n  class TaskDistributionComponent {\n    constructor(taskService, teamService) {\n      this.taskService = taskService;\n      this.teamService = teamService;\n      this.tasks = [];\n      this.teamMembers = [];\n      this.selectedTaskId = null;\n      this.selectedTeamMemberId = '';\n      this.selectedTask = null; // Added for modal display\n      this.selectedMember = ''; // Added for member selection in modal\n      this.currentIterationPath = 'Techoil\\\\Sprint 1'; // Default value\n      // Convert simple boolean to object with specific loading states\n      this.loading = {\n        tasks: false,\n        members: false,\n        assign: false,\n        autoAssign: false\n      };\n      // Convert simple string to object with specific error states\n      this.error = {\n        tasks: null,\n        members: null,\n        assign: null,\n        autoAssign: null\n      };\n    }\n    ngOnInit() {\n      this.loadTasks();\n      this.loadTeamMembers();\n    }\n    loadTasks() {\n      this.loading.tasks = true;\n      this.error.tasks = null;\n      this.taskService.getTasks(this.currentIterationPath).subscribe({\n        next: tasks => {\n          this.tasks = tasks;\n          this.loading.tasks = false;\n        },\n        error: err => {\n          this.error.tasks = `Failed to load tasks: ${err.message}`;\n          this.loading.tasks = false;\n        }\n      });\n    }\n    loadTeamMembers() {\n      this.loading.members = true;\n      this.error.members = null;\n      this.teamService.getTeamMembers().subscribe({\n        next: members => {\n          this.teamMembers = members;\n          this.loading.members = false;\n        },\n        error: err => {\n          this.error.members = `Failed to load team members: ${err.message}`;\n          this.loading.members = false;\n        }\n      });\n    }\n    assignTask() {\n      if (!this.selectedTask || !this.selectedMember) {\n        this.error.assign = 'Please select both a task and team member';\n        return;\n      }\n      this.loading.assign = true;\n      this.taskService.assignTask(this.selectedTask, this.selectedMember).subscribe({\n        next: () => {\n          this.loadTasks(); // Reload tasks to reflect changes\n          this.cancelAssign();\n        },\n        error: err => {\n          this.error.assign = `Failed to assign task: ${err.message}`;\n          this.loading.assign = false;\n        }\n      });\n    }\n    autoAssignTasks() {\n      this.loading.autoAssign = true;\n      this.error.autoAssign = null;\n      this.taskService.autoAssignTasks(this.currentIterationPath).subscribe({\n        next: () => {\n          this.loadTasks(); // Reload tasks to reflect changes\n          this.loading.autoAssign = false;\n        },\n        error: err => {\n          this.error.autoAssign = `Failed to auto-assign tasks: ${err.message}`;\n          this.loading.autoAssign = false;\n        }\n      });\n    }\n    openAssignModal(taskId) {\n      this.selectedTask = taskId;\n      this.selectedMember = '';\n      this.error.assign = null;\n    }\n    cancelAssign() {\n      this.selectedTask = null;\n      this.selectedMember = '';\n      this.error.assign = null;\n      this.loading.assign = false;\n    }\n    /**\r\n     * Get CSS class for priority badge\r\n     * @param priority Priority value (number or string)\r\n     * @returns CSS class name\r\n     */\n    getPriorityClass(priority) {\n      // Convert priority to number if it's a string\n      const priorityNum = typeof priority === 'string' ? parseInt(priority, 10) : priority;\n      if (isNaN(priorityNum)) {\n        return 'bg-secondary'; // Default for invalid priority\n      }\n\n      switch (priorityNum) {\n        case 1:\n          return 'bg-danger';\n        case 2:\n          return 'bg-warning text-dark';\n        case 3:\n          return 'bg-info text-dark';\n        case 4:\n          return 'bg-success';\n        default:\n          return 'bg-secondary';\n      }\n    }\n    /**\r\n     * Get CSS class for status badge\r\n     * @param status Status string or undefined\r\n     * @returns CSS class name\r\n     */\n    getStatusClass(status) {\n      if (!status) {\n        return 'bg-secondary'; // Default for undefined status\n      }\n\n      const statusLower = status.toLowerCase();\n      if (statusLower.includes('progress') || statusLower === 'active') {\n        return 'bg-primary';\n      } else if (statusLower === 'completed' || statusLower === 'done' || statusLower === 'closed') {\n        return 'bg-success';\n      } else if (statusLower === 'blocked') {\n        return 'bg-danger';\n      } else if (statusLower === 'to do' || statusLower === 'new') {\n        return 'bg-secondary';\n      } else {\n        return 'bg-info';\n      }\n    }\n    /**\r\n     * Get CSS class for team member workload indicator\r\n     * @param workload Current workload value\r\n     * @returns CSS class name\r\n     */\n    getTeamMemberWorkloadClass(workload) {\n      if (workload < 3) {\n        return 'low-workload';\n      } else if (workload < 7) {\n        return 'medium-workload';\n      } else {\n        return 'high-workload';\n      }\n    }\n    static {\n      this.ɵfac = function TaskDistributionComponent_Factory(t) {\n        return new (t || TaskDistributionComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.TeamService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: TaskDistributionComponent,\n        selectors: [[\"app-task-distribution\"]],\n        decls: 55,\n        vars: 23,\n        consts: [[1, \"container-fluid\", \"p-4\"], [1, \"row\", \"mb-4\"], [1, \"col-12\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mb-0\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"bi\", \"bi-magic\"], [4, \"ngIf\"], [1, \"text-muted\", \"mt-2\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"row\"], [1, \"card\"], [1, \"card-body\"], [\"class\", \"text-center py-4\", 4, \"ngIf\"], [\"class\", \"table-responsive\", 4, \"ngIf\"], [1, \"row\", \"mt-4\"], [1, \"card-header\"], [\"class\", \"row\", 4, \"ngIf\"], [\"tabindex\", \"-1\", 1, \"modal\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", 1, \"btn-close\", 3, \"click\"], [1, \"modal-body\"], [1, \"mb-3\"], [\"for\", \"teamMemberSelect\", 1, \"form-label\"], [\"id\", \"teamMemberSelect\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"class\", \"modal-backdrop fade show\", 4, \"ngIf\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\"], [1, \"alert\", \"alert-danger\"], [1, \"text-center\", \"py-4\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"text-muted\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [1, \"badge\", \"rounded-pill\", 3, \"ngClass\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [\"class\", \"mt-1 suggestion-box\", 4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-outline-primary\", \"me-1\", 3, \"click\"], [1, \"bi\", \"bi-person-plus\"], [1, \"mt-1\", \"suggestion-box\"], [1, \"text-primary\"], [1, \"bi\", \"bi-lightbulb-fill\"], [\"class\", \"col-md-3 col-sm-6 mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\", \"col-sm-6\", \"mb-3\"], [1, \"card\", \"team-member-card\", \"h-100\"], [1, \"card-body\", \"text-center\"], [1, \"card-title\"], [1, \"workload-indicator\", \"mt-2\", 3, \"ngClass\"], [1, \"workload-label\"], [1, \"workload-bar\"], [3, \"value\"], [1, \"modal-backdrop\", \"fade\", \"show\"]],\n        template: function TaskDistributionComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\", 4);\n            i0.ɵɵtext(5, \"Task Distribution\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"button\", 5);\n            i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_6_listener() {\n              return ctx.autoAssignTasks();\n            });\n            i0.ɵɵelement(7, \"i\", 6);\n            i0.ɵɵtemplate(8, TaskDistributionComponent_span_8_Template, 2, 0, \"span\", 7);\n            i0.ɵɵtemplate(9, TaskDistributionComponent_span_9_Template, 3, 0, \"span\", 7);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(10, \"p\", 8);\n            i0.ɵɵtext(11, \"Manage and assign tasks for the current sprint\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(12, TaskDistributionComponent_div_12_Template, 2, 1, \"div\", 9);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 2)(15, \"div\", 11)(16, \"div\", 12);\n            i0.ɵɵtemplate(17, TaskDistributionComponent_div_17_Template, 4, 0, \"div\", 13);\n            i0.ɵɵtemplate(18, TaskDistributionComponent_div_18_Template, 2, 1, \"div\", 9);\n            i0.ɵɵtemplate(19, TaskDistributionComponent_div_19_Template, 3, 0, \"div\", 13);\n            i0.ɵɵtemplate(20, TaskDistributionComponent_div_20_Template, 18, 1, \"div\", 14);\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(21, \"div\", 15)(22, \"div\", 2)(23, \"div\", 11)(24, \"div\", 16)(25, \"h4\", 4);\n            i0.ɵɵtext(26, \"Team Workload\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(27, \"div\", 12);\n            i0.ɵɵtemplate(28, TaskDistributionComponent_div_28_Template, 4, 0, \"div\", 13);\n            i0.ɵɵtemplate(29, TaskDistributionComponent_div_29_Template, 2, 1, \"div\", 9);\n            i0.ɵɵtemplate(30, TaskDistributionComponent_div_30_Template, 3, 0, \"div\", 13);\n            i0.ɵɵtemplate(31, TaskDistributionComponent_div_31_Template, 2, 1, \"div\", 17);\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(32, \"div\", 18)(33, \"div\", 19)(34, \"div\", 20)(35, \"div\", 21)(36, \"h5\", 22);\n            i0.ɵɵtext(37, \"Assign Task\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(38, \"button\", 23);\n            i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_38_listener() {\n              return ctx.cancelAssign();\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(39, \"div\", 24);\n            i0.ɵɵtemplate(40, TaskDistributionComponent_div_40_Template, 2, 1, \"div\", 9);\n            i0.ɵɵelementStart(41, \"div\", 25)(42, \"label\", 26);\n            i0.ɵɵtext(43, \"Select Team Member\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(44, \"select\", 27);\n            i0.ɵɵlistener(\"ngModelChange\", function TaskDistributionComponent_Template_select_ngModelChange_44_listener($event) {\n              return ctx.selectedMember = $event;\n            });\n            i0.ɵɵelementStart(45, \"option\", 28);\n            i0.ɵɵtext(46, \"-- Select Team Member --\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(47, TaskDistributionComponent_option_47_Template, 2, 3, \"option\", 29);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(48, \"div\", 30)(49, \"button\", 31);\n            i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_49_listener() {\n              return ctx.cancelAssign();\n            });\n            i0.ɵɵtext(50, \"Cancel\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(51, \"button\", 32);\n            i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_51_listener() {\n              return ctx.assignTask();\n            });\n            i0.ɵɵtemplate(52, TaskDistributionComponent_span_52_Template, 2, 0, \"span\", 7);\n            i0.ɵɵtemplate(53, TaskDistributionComponent_span_53_Template, 3, 0, \"span\", 7);\n            i0.ɵɵelementEnd()()()()();\n            i0.ɵɵtemplate(54, TaskDistributionComponent_div_54_Template, 1, 0, \"div\", 33);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"disabled\", ctx.loading.autoAssign);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading.autoAssign);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading.autoAssign);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.error.autoAssign);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading.tasks);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.error.tasks);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading.tasks && !ctx.error.tasks && ctx.tasks.length === 0);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading.tasks && !ctx.error.tasks && ctx.tasks.length > 0);\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading.members);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.error.members);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading.members && !ctx.error.members && ctx.teamMembers.length === 0);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading.members && !ctx.error.members && ctx.teamMembers.length > 0);\n            i0.ɵɵadvance(1);\n            i0.ɵɵstyleProp(\"display\", ctx.selectedTask !== null ? \"block\" : \"none\");\n            i0.ɵɵclassProp(\"show\", ctx.selectedTask !== null);\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"ngIf\", ctx.error.assign);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.selectedMember);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.teamMembers);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", ctx.loading.assign);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading.assign);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading.assign);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.selectedTask !== null);\n          }\n        },\n        dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n        styles: [\".card[_ngcontent-%COMP%]{border-radius:8px;box-shadow:0 2px 8px #0000001a;margin-bottom:20px}.card-header[_ngcontent-%COMP%]{background-color:#f8f9fa;border-bottom:1px solid #eaeaea;padding:12px 16px}.table[_ngcontent-%COMP%]{margin-bottom:0}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;color:#495057}.suggestion-box[_ngcontent-%COMP%]{background-color:#f8f9ff;padding:4px 8px;border-radius:4px;font-size:.8rem}.team-member-card[_ngcontent-%COMP%]{transition:transform .2s;border-radius:8px}.team-member-card[_ngcontent-%COMP%]:hover{transform:translateY(-5px)}.workload-indicator[_ngcontent-%COMP%]{position:relative;height:24px;border-radius:12px;background-color:#f0f0f0;overflow:hidden;margin-top:10px}.workload-bar[_ngcontent-%COMP%]{position:absolute;top:0;left:0;height:100%;z-index:1}.workload-label[_ngcontent-%COMP%]{position:relative;z-index:2;display:block;text-align:center;line-height:24px;font-size:.8rem;font-weight:500;color:#333}.low-workload[_ngcontent-%COMP%]   .workload-bar[_ngcontent-%COMP%]{background-color:#28a745}.medium-workload[_ngcontent-%COMP%]   .workload-bar[_ngcontent-%COMP%]{background-color:#ffc107}.high-workload[_ngcontent-%COMP%]   .workload-bar[_ngcontent-%COMP%]{background-color:#dc3545}.modal-backdrop[_ngcontent-%COMP%]{opacity:.5}.modal-content[_ngcontent-%COMP%]{border-radius:8px;box-shadow:0 5px 15px #0000001a}\"]\n      });\n    }\n  }\n  return TaskDistributionComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}