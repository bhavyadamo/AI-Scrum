{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DashboardService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/dashboard`;\n  }\n  getCurrentSprint() {\n    return this.http.get(`${this.apiUrl}/sprint`);\n  }\n  getSprintSummary(iterationPath) {\n    return this.http.get(`${this.apiUrl}/summary`, {\n      params: {\n        iterationPath\n      }\n    });\n  }\n  getActivityFeed(count = 10) {\n    return this.http.get(`${this.apiUrl}/activity`, {\n      params: {\n        count: count.toString()\n      }\n    });\n  }\n  getDailyTip() {\n    return this.http.get(`${this.apiUrl}/tip`);\n  }\n  static {\n    this.ɵfac = function DashboardService_Factory(t) {\n      return new (t || DashboardService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DashboardService,\n      factory: DashboardService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,GAAGH,WAAW,CAACI,MAAM,YAAY;EAEV;EAExCC,gBAAgB;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAiB,GAAG,IAAI,CAACF,MAAM,SAAS,CAAC;EAC/D;EAEAG,gBAAgB,CAACC,aAAqB;IACpC,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,UAAU,EAAE;MAC5DK,MAAM,EAAE;QAAED;MAAa;KACxB,CAAC;EACJ;EAEAE,eAAe,CAACC,QAAgB,EAAE;IAChC,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAe,GAAG,IAAI,CAACF,MAAM,WAAW,EAAE;MAC5DK,MAAM,EAAE;QAAEE,KAAK,EAAEA,KAAK,CAACC,QAAQ;MAAE;KAClC,CAAC;EACJ;EAEAC,WAAW;IACT,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAkB,GAAG,IAAI,CAACF,MAAM,MAAM,CAAC;EAC7D;;;uBAvBWH,gBAAgB;IAAA;EAAA;;;aAAhBA,gBAAgB;MAAAa,SAAhBb,gBAAgB;MAAAc,YAFf;IAAM;EAAA","names":["environment","DashboardService","constructor","http","apiUrl","getCurrentSprint","get","getSprintSummary","iterationPath","params","getActivityFeed","count","toString","getDailyTip","factory","providedIn"],"sourceRoot":"","sources":["E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\services\\dashboard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SprintOverview, SprintSummary, ActivityFeed } from '../models/sprint.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n  private apiUrl = `${environment.apiUrl}/dashboard`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCurrentSprint(): Observable<SprintOverview> {\r\n    return this.http.get<SprintOverview>(`${this.apiUrl}/sprint`);\r\n  }\r\n\r\n  getSprintSummary(iterationPath: string): Observable<SprintSummary> {\r\n    return this.http.get<SprintSummary>(`${this.apiUrl}/summary`, {\r\n      params: { iterationPath }\r\n    });\r\n  }\r\n\r\n  getActivityFeed(count: number = 10): Observable<ActivityFeed> {\r\n    return this.http.get<ActivityFeed>(`${this.apiUrl}/activity`, {\r\n      params: { count: count.toString() }\r\n    });\r\n  }\r\n\r\n  getDailyTip(): Observable<{ tip: string }> {\r\n    return this.http.get<{ tip: string }>(`${this.apiUrl}/tip`);\r\n  }\r\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}