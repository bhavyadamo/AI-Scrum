{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EstimationService = /*#__PURE__*/(() => {\n  class EstimationService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = `${environment.apiUrl}/estimation`;\n    }\n    /**\r\n     * Estimate task time using ML-based estimation\r\n     * @param request The task estimation request\r\n     * @returns Observable of the estimation response\r\n     */\n    estimateTaskTime(request) {\n      return this.http.post(`${this.apiUrl}/estimate-task-time`, request).pipe(catchError(this.handleError));\n    }\n    /**\r\n     * Generic error handler for HTTP requests\r\n     * @param error The error response\r\n     * @returns An error observable\r\n     */\n    handleError(error) {\n      console.error('An error occurred in estimation service:', error);\n      let errorMessage = 'An unknown error occurred';\n      if (error.error && error.error.message) {\n        errorMessage = error.error.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      return throwError(() => new Error(errorMessage));\n    }\n    static {\n      this.ɵfac = function EstimationService_Factory(t) {\n        return new (t || EstimationService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: EstimationService,\n        factory: EstimationService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return EstimationService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}