{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/task.service\";\nimport * as i2 from \"@angular/common\";\nfunction AutoAssignComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.error.tasks);\n  }\n}\nfunction AutoAssignComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.error.suggestions);\n  }\n}\nfunction AutoAssignComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.error.assign);\n  }\n}\nfunction AutoAssignComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"i\", 9);\n    i0.ɵɵtext(2, \" Tasks successfully assigned! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AutoAssignComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"div\", 12)(3, \"span\", 13);\n    i0.ɵɵtext(4, \"Loading...\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"p\", 14);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r4.loading.tasks ? \"Loading tasks...\" : \"Analyzing developer performance...\");\n  }\n}\nfunction AutoAssignComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"div\", 15);\n    i0.ɵɵelement(3, \"i\", 16);\n    i0.ɵɵtext(4, \" No \\\"Dev-New\\\" tasks available for assignment. \");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AutoAssignComponent_div_13_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Confirm & Assign All\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AutoAssignComponent_div_13_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 37);\n  }\n}\nfunction AutoAssignComponent_div_13_tr_37_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 44)(2, \"span\", 45);\n    i0.ɵɵtext(3, \"AI Pick\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r11.extractDeveloperName(ctx_r11.autoAssignSuggestions[task_r10.id]));\n  }\n}\nfunction AutoAssignComponent_div_13_tr_37_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵtext(1, \"No suggestion available\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AutoAssignComponent_div_13_tr_37_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 46);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r13.extractLogicExplanation(ctx_r13.autoAssignSuggestions[task_r10.id]), \" \");\n  }\n}\nfunction AutoAssignComponent_div_13_tr_37_button_17_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Confirm & Assign\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AutoAssignComponent_div_13_tr_37_button_17_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 37);\n  }\n}\nfunction AutoAssignComponent_div_13_tr_37_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 47);\n    i0.ɵɵlistener(\"click\", function AutoAssignComponent_div_13_tr_37_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const task_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.assignTask(task_r10.id, ctx_r20.autoAssignSuggestions[task_r10.id]));\n    });\n    i0.ɵɵelement(1, \"i\", 48);\n    i0.ɵɵtemplate(2, AutoAssignComponent_div_13_tr_37_button_17_span_2_Template, 2, 0, \"span\", 22);\n    i0.ɵɵtemplate(3, AutoAssignComponent_div_13_tr_37_button_17_span_3_Template, 1, 0, \"span\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r14.loading.assign);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r14.loading.assign);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.loading.assign);\n  }\n}\nfunction AutoAssignComponent_div_13_tr_37_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 49);\n    i0.ɵɵelement(1, \"i\", 50);\n    i0.ɵɵtext(2, \" No Recommendation \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AutoAssignComponent_div_13_tr_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"span\", 38);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\")(9, \"span\", 39);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtemplate(12, AutoAssignComponent_div_13_tr_37_ng_container_12_Template, 6, 1, \"ng-container\", 22);\n    i0.ɵɵtemplate(13, AutoAssignComponent_div_13_tr_37_span_13_Template, 2, 0, \"span\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtemplate(15, AutoAssignComponent_div_13_tr_37_span_15_Template, 2, 1, \"span\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtemplate(17, AutoAssignComponent_div_13_tr_37_button_17_Template, 4, 3, \"button\", 42);\n    i0.ɵɵtemplate(18, AutoAssignComponent_div_13_tr_37_button_18_Template, 3, 0, \"button\", 43);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r10.id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r10.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r10.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r10.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.autoAssignSuggestions[task_r10.id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r9.autoAssignSuggestions[task_r10.id]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.autoAssignSuggestions[task_r10.id]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.autoAssignSuggestions[task_r10.id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r9.autoAssignSuggestions[task_r10.id]);\n  }\n}\nfunction AutoAssignComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 2)(2, \"div\", 17)(3, \"div\", 18)(4, \"h4\", 19);\n    i0.ɵɵtext(5, \"Tasks Ready for Assignment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function AutoAssignComponent_div_13_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.confirmAndAssignAll());\n    });\n    i0.ɵɵelement(7, \"i\", 21);\n    i0.ɵɵtemplate(8, AutoAssignComponent_div_13_span_8_Template, 2, 0, \"span\", 22);\n    i0.ɵɵtemplate(9, AutoAssignComponent_div_13_span_9_Template, 1, 0, \"span\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 24)(11, \"div\", 25)(12, \"div\", 2)(13, \"div\", 26)(14, \"strong\");\n    i0.ɵɵelement(15, \"i\", 16);\n    i0.ɵɵtext(16, \"Preview:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \" Review the AI-suggested assignments below before confirming. \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"div\", 27)(19, \"table\", 28)(20, \"thead\")(21, \"tr\")(22, \"th\");\n    i0.ɵɵtext(23, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"th\");\n    i0.ɵɵtext(25, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"th\");\n    i0.ɵɵtext(27, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"th\");\n    i0.ɵɵtext(29, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"th\");\n    i0.ɵɵtext(31, \"Suggested Assignee\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"th\");\n    i0.ɵɵtext(33, \"Assignment Logic\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"th\");\n    i0.ɵɵtext(35, \"Action\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(36, \"tbody\");\n    i0.ɵɵtemplate(37, AutoAssignComponent_div_13_tr_37_Template, 19, 9, \"tr\", 29);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(38, \"div\", 30)(39, \"h5\");\n    i0.ɵɵtext(40, \"Assignment Logic Explanation:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"ul\", 31)(42, \"li\", 32);\n    i0.ɵɵelement(43, \"i\", 33);\n    i0.ɵɵelementStart(44, \"strong\");\n    i0.ɵɵtext(45, \"Past Performance\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(46, \" - Developers who completed similar tasks recently \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(47, \"li\", 32);\n    i0.ɵɵelement(48, \"i\", 34);\n    i0.ɵɵelementStart(49, \"strong\");\n    i0.ɵɵtext(50, \"Active Load\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(51, \" - Developers with the least number of active tasks \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"li\", 32);\n    i0.ɵɵelement(53, \"i\", 35);\n    i0.ɵɵelementStart(54, \"strong\");\n    i0.ɵɵtext(55, \"Recent Completion\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(56, \" - Developers who recently completed tasks and have no active tasks \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(57, \"li\", 32);\n    i0.ɵɵelement(58, \"i\", 36);\n    i0.ɵɵelementStart(59, \"strong\");\n    i0.ɵɵtext(60, \"Fallback\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(61, \" - If no match from history, assign to developer with least total task count \");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", ctx_r6.loading.assign || ctx_r6.bulkAssignDisabled());\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.loading.assign);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.loading.assign);\n    i0.ɵɵadvance(28);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.tasks);\n  }\n}\nexport let AutoAssignComponent = /*#__PURE__*/(() => {\n  class AutoAssignComponent {\n    constructor(taskService) {\n      this.taskService = taskService;\n      this.tasks = [];\n      this.currentIterationPath = '';\n      this.autoAssignSuggestions = {};\n      this.assignmentSuccess = false;\n      this.loading = {\n        tasks: false,\n        suggestions: false,\n        assign: false\n      };\n      this.error = {\n        tasks: null,\n        suggestions: null,\n        assign: null\n      };\n    }\n    ngOnInit() {\n      // For demo purposes, use a default iteration path\n      this.currentIterationPath = 'Techoil\\\\2.3.23';\n      this.loadTasks();\n    }\n    loadTasks() {\n      this.loading.tasks = true;\n      this.error.tasks = null;\n      this.assignmentSuccess = false;\n      this.taskService.getTasks(this.currentIterationPath).subscribe({\n        next: tasks => {\n          // Filter for Dev-New tasks, removing type filter to match requirements\n          this.tasks = tasks.filter(t => t.status === 'Dev-New' && !t.assignedTo);\n          this.loading.tasks = false;\n          // If we have tasks, load the suggestions\n          if (this.tasks.length > 0) {\n            this.loadAutoAssignSuggestions();\n          }\n        },\n        error: err => {\n          this.error.tasks = `Failed to load tasks: ${err.message}`;\n          this.loading.tasks = false;\n        }\n      });\n    }\n    loadAutoAssignSuggestions() {\n      this.loading.suggestions = true;\n      this.error.suggestions = null;\n      this.taskService.getAutoAssignSuggestions(this.currentIterationPath).subscribe({\n        next: suggestions => {\n          this.autoAssignSuggestions = suggestions;\n          this.loading.suggestions = false;\n        },\n        error: err => {\n          this.error.suggestions = `Failed to load auto-assign suggestions: ${err.message}`;\n          this.loading.suggestions = false;\n        }\n      });\n    }\n    assignTask(taskId, assignedTo) {\n      this.loading.assign = true;\n      this.error.assign = null;\n      this.assignmentSuccess = false;\n      // Extract just the name from the suggestion string\n      const developerName = this.extractDeveloperName(assignedTo);\n      this.taskService.assignTask(taskId, developerName).subscribe({\n        next: () => {\n          // Remove the assigned task from the list\n          this.tasks = this.tasks.filter(t => t.id !== taskId);\n          this.loading.assign = false;\n          this.assignmentSuccess = true;\n          // Reset success message after a delay\n          setTimeout(() => this.assignmentSuccess = false, 5000);\n        },\n        error: err => {\n          this.error.assign = `Failed to assign task: ${err.message}`;\n          this.loading.assign = false;\n        }\n      });\n    }\n    /**\r\n     * Extracts just the developer name from the suggestion string\r\n     * Format is typically \"Name (explanation)\"\r\n     */\n    extractDeveloperName(suggestion) {\n      if (!suggestion) return '';\n      const parts = suggestion.split(' (');\n      return parts[0];\n    }\n    /**\r\n     * Extracts the logic explanation from the suggestion string\r\n     * Format is typically \"Name (explanation)\"\r\n     */\n    extractLogicExplanation(suggestion) {\n      if (!suggestion) return '';\n      const match = suggestion.match(/\\((.*?)\\)/);\n      return match ? match[1] : '';\n    }\n    /**\r\n     * Check if bulk assign should be disabled\r\n     */\n    bulkAssignDisabled() {\n      // Disable if no tasks or no suggestions\n      return this.tasks.length === 0 || Object.keys(this.autoAssignSuggestions).length === 0 || this.tasks.some(task => !this.autoAssignSuggestions[task.id]);\n    }\n    /**\r\n     * Confirm and assign all tasks to their suggested developers\r\n     */\n    confirmAndAssignAll() {\n      this.loading.assign = true;\n      this.error.assign = null;\n      this.assignmentSuccess = false;\n      // Create an array of assignment observables\n      const assignmentObservables = [];\n      this.tasks.forEach(task => {\n        if (this.autoAssignSuggestions[task.id]) {\n          const developerName = this.extractDeveloperName(this.autoAssignSuggestions[task.id]);\n          assignmentObservables.push(this.taskService.assignTask(task.id, developerName));\n        }\n      });\n      // Execute all assignments in parallel\n      if (assignmentObservables.length > 0) {\n        forkJoin(assignmentObservables).subscribe({\n          next: () => {\n            this.loading.assign = false;\n            this.assignmentSuccess = true;\n            // Reload tasks to refresh the list\n            this.loadTasks();\n          },\n          error: err => {\n            this.error.assign = `Failed to assign some tasks: ${err.message}`;\n            this.loading.assign = false;\n            // Reload tasks to refresh the list\n            this.loadTasks();\n          }\n        });\n      } else {\n        this.loading.assign = false;\n      }\n    }\n    static {\n      this.ɵfac = function AutoAssignComponent_Factory(t) {\n        return new (t || AutoAssignComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AutoAssignComponent,\n        selectors: [[\"app-auto-assign\"]],\n        decls: 14,\n        vars: 7,\n        consts: [[1, \"container-fluid\", \"p-4\"], [1, \"row\", \"mb-4\"], [1, \"col-12\"], [1, \"text-muted\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"], [1, \"bi\", \"bi-check-circle\", \"me-2\"], [1, \"row\"], [1, \"col-12\", \"text-center\", \"py-5\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"mt-2\"], [1, \"alert\", \"alert-info\"], [1, \"bi\", \"bi-info-circle\", \"me-2\"], [1, \"card\"], [1, \"card-header\", \"bg-primary\", \"text-white\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mb-0\"], [1, \"btn\", \"btn-light\", 3, \"disabled\", \"click\"], [1, \"bi\", \"bi-magic\", \"me-2\"], [4, \"ngIf\"], [\"class\", \"spinner-border spinner-border-sm\", \"role\", \"status\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [1, \"card-body\"], [1, \"row\", \"mb-3\"], [1, \"alert\", \"alert-primary\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mt-4\"], [1, \"list-group\"], [1, \"list-group-item\"], [1, \"bi\", \"bi-trophy\", \"text-warning\", \"me-2\"], [1, \"bi\", \"bi-speedometer2\", \"text-info\", \"me-2\"], [1, \"bi\", \"bi-check-circle\", \"text-success\", \"me-2\"], [1, \"bi\", \"bi-person-plus\", \"text-primary\", \"me-2\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\"], [1, \"badge\", \"bg-info\", \"text-dark\"], [1, \"badge\", \"bg-secondary\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [\"class\", \"text-muted small\", 4, \"ngIf\"], [\"class\", \"btn btn-primary btn-sm\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-secondary btn-sm\", \"disabled\", \"\", 4, \"ngIf\"], [1, \"d-flex\", \"align-items-center\"], [1, \"badge\", \"bg-success\", \"me-2\"], [1, \"text-muted\", \"small\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"disabled\", \"click\"], [1, \"bi\", \"bi-person-check\", \"me-1\"], [\"disabled\", \"\", 1, \"btn\", \"btn-secondary\", \"btn-sm\"], [1, \"bi\", \"bi-person-x\", \"me-1\"]],\n        template: function AutoAssignComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n            i0.ɵɵtext(4, \"AI Task Auto-Assignment\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"p\", 3);\n            i0.ɵɵtext(6, \"Automatically assign \\\"Dev-New\\\" tasks to the most suitable developers based on past performance.\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(7, AutoAssignComponent_div_7_Template, 2, 1, \"div\", 4);\n            i0.ɵɵtemplate(8, AutoAssignComponent_div_8_Template, 2, 1, \"div\", 4);\n            i0.ɵɵtemplate(9, AutoAssignComponent_div_9_Template, 2, 1, \"div\", 4);\n            i0.ɵɵtemplate(10, AutoAssignComponent_div_10_Template, 3, 0, \"div\", 5);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(11, AutoAssignComponent_div_11_Template, 7, 1, \"div\", 6);\n            i0.ɵɵtemplate(12, AutoAssignComponent_div_12_Template, 5, 0, \"div\", 6);\n            i0.ɵɵtemplate(13, AutoAssignComponent_div_13_Template, 62, 4, \"div\", 6);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngIf\", ctx.error.tasks);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.error.suggestions);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.error.assign);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.assignmentSuccess);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading.tasks || ctx.loading.suggestions);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading.tasks && !ctx.loading.suggestions && ctx.tasks.length === 0);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading.tasks && !ctx.loading.suggestions && ctx.tasks.length > 0);\n          }\n        },\n        dependencies: [i2.NgForOf, i2.NgIf],\n        styles: [\".badge[_ngcontent-%COMP%]{font-size:.8rem}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600}.card-header[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{font-size:1.25rem}.badge.bg-success[_ngcontent-%COMP%]{background-color:#198754!important}.badge.bg-info[_ngcontent-%COMP%]{background-color:#0dcaf0!important}.badge.bg-secondary[_ngcontent-%COMP%]{background-color:#6c757d!important}\"]\n      });\n    }\n  }\n  return AutoAssignComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}