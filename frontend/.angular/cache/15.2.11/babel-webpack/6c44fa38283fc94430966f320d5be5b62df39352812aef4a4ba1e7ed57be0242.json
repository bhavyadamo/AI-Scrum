{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/estimation.service\";\nimport * as i3 from \"../../services/task.service\";\nimport * as i4 from \"@angular/common\";\nfunction TaskEstimationComponent_div_19_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskEstimationComponent_div_19_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Title must be at least 5 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskEstimationComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtemplate(1, TaskEstimationComponent_div_19_small_1_Template, 2, 0, \"small\", 29);\n    i0.ɵɵtemplate(2, TaskEstimationComponent_div_19_small_2_Template, 2, 0, \"small\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.estimationForm.get(\"title\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.estimationForm.get(\"title\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction TaskEstimationComponent_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r11);\n  }\n}\nfunction TaskEstimationComponent_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const member_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", member_r12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(member_r12);\n  }\n}\nfunction TaskEstimationComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelement(1, \"input\", 36);\n    i0.ɵɵelementStart(2, \"label\", 37);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const level_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", \"complexity-\" + level_r13.toLowerCase())(\"value\", level_r13);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"complexity-\" + level_r13.toLowerCase());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", level_r13, \" \");\n  }\n}\nfunction TaskEstimationComponent_span_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"i\", 38);\n    i0.ɵɵtext(2, \" Estimate Time \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskEstimationComponent_span_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"span\", 39);\n    i0.ɵɵtext(2, \" Estimating... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskEstimationComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.error, \" \");\n  }\n}\nfunction TaskEstimationComponent_div_46_li_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 52);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const factor_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", factor_r15, \" \");\n  }\n}\nfunction TaskEstimationComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 41)(2, \"h4\", 9);\n    i0.ɵɵtext(3, \"Estimation Results\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 10)(5, \"div\", 42)(6, \"h2\", 43);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 44);\n    i0.ɵɵtext(9, \"Estimated time to complete the task\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 45)(11, \"h5\");\n    i0.ɵɵtext(12, \"Prediction Confidence\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 46)(14, \"div\", 47);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"div\")(17, \"h5\");\n    i0.ɵɵtext(18, \"Factors Considered\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"ul\", 48);\n    i0.ɵɵtemplate(20, TaskEstimationComponent_div_46_li_20_Template, 2, 1, \"li\", 49);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"div\", 50);\n    i0.ɵɵelement(22, \"i\", 51);\n    i0.ɵɵtext(23, \" These estimates are based on machine learning models analyzing historical task data. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r7.estimationResult.estimatedHours, \" hours\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵstyleProp(\"width\", ctx_r7.estimationResult.confidenceScore * 100, \"%\");\n    i0.ɵɵproperty(\"ngClass\", ctx_r7.getConfidenceClass(ctx_r7.estimationResult.confidenceScore));\n    i0.ɵɵattribute(\"aria-valuenow\", ctx_r7.estimationResult.confidenceScore * 100);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.formatConfidence(ctx_r7.estimationResult.confidenceScore), \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.estimationResult.factors);\n  }\n}\nfunction TaskEstimationComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53)(1, \"div\", 54);\n    i0.ɵɵelement(2, \"i\", 55);\n    i0.ɵɵelementStart(3, \"h4\", 56);\n    i0.ɵɵtext(4, \"Task Time Prediction\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 44);\n    i0.ɵɵtext(6, \"Fill in the task details and click \\\"Estimate Time\\\" to get an ML-based time estimate\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport let TaskEstimationComponent = /*#__PURE__*/(() => {\n  class TaskEstimationComponent {\n    constructor(fb, estimationService, taskService) {\n      this.fb = fb;\n      this.estimationService = estimationService;\n      this.taskService = taskService;\n      this.teamMembers = [];\n      this.taskTypes = ['Bug', 'Change Request', 'Feature', 'Documentation', 'Test', 'Research'];\n      this.complexityLevels = ['Low', 'Medium', 'High'];\n      this.loading = false;\n      this.error = null;\n      this.estimationResult = null;\n      this.showResult = false;\n      this.estimationForm = this.fb.group({\n        title: ['', [Validators.required, Validators.minLength(5)]],\n        type: ['Feature', Validators.required],\n        assignee: [''],\n        complexity: ['Medium', Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.loadTeamMembers();\n    }\n    loadTeamMembers() {\n      this.taskService.getTeamMembers().subscribe({\n        next: response => {\n          if (Array.isArray(response)) {\n            if (typeof response[0] === 'string') {\n              // It's an array of strings\n              this.teamMembers = response;\n            } else {\n              // It's an array of TeamMember objects\n              this.teamMembers = response.map(m => m.displayName || m.name);\n            }\n          }\n        },\n        error: err => {\n          console.error('Error loading team members:', err);\n          this.error = 'Failed to load team members';\n        }\n      });\n    }\n    estimateTaskTime() {\n      if (this.estimationForm.invalid) {\n        // Mark all fields as touched to trigger validation messages\n        Object.keys(this.estimationForm.controls).forEach(key => {\n          this.estimationForm.get(key)?.markAsTouched();\n        });\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      this.estimationResult = null;\n      this.showResult = false;\n      const request = {\n        title: this.estimationForm.value.title,\n        type: this.estimationForm.value.type,\n        assignee: this.estimationForm.value.assignee,\n        complexity: this.estimationForm.value.complexity\n      };\n      this.estimationService.estimateTaskTime(request).subscribe({\n        next: result => {\n          this.estimationResult = result;\n          this.showResult = true;\n          this.loading = false;\n        },\n        error: err => {\n          this.error = err.message || 'An error occurred during estimation';\n          this.loading = false;\n        }\n      });\n    }\n    resetForm() {\n      this.estimationForm.reset({\n        title: '',\n        type: 'Feature',\n        assignee: '',\n        complexity: 'Medium'\n      });\n      this.error = null;\n      this.estimationResult = null;\n      this.showResult = false;\n    }\n    getConfidenceClass(score) {\n      if (score >= 0.8) return 'bg-success';\n      if (score >= 0.6) return 'bg-info';\n      if (score >= 0.4) return 'bg-warning';\n      return 'bg-danger';\n    }\n    formatConfidence(score) {\n      return (score * 100).toFixed(0) + '%';\n    }\n    static {\n      this.ɵfac = function TaskEstimationComponent_Factory(t) {\n        return new (t || TaskEstimationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EstimationService), i0.ɵɵdirectiveInject(i3.TaskService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: TaskEstimationComponent,\n        selectors: [[\"app-task-estimation\"]],\n        decls: 48,\n        vars: 11,\n        consts: [[1, \"container-fluid\", \"p-4\"], [1, \"row\", \"mb-4\"], [1, \"col-12\"], [1, \"mb-0\"], [1, \"text-muted\", \"mt-2\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\", \"mb-0\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"taskTitle\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"taskTitle\", \"formControlName\", \"title\", \"placeholder\", \"Enter task title\", 1, \"form-control\"], [\"class\", \"text-danger mt-1\", 4, \"ngIf\"], [\"for\", \"taskType\", 1, \"form-label\"], [\"id\", \"taskType\", \"formControlName\", \"type\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"assignee\", 1, \"form-label\"], [\"id\", \"assignee\", \"formControlName\", \"assignee\", 1, \"form-select\"], [\"value\", \"\"], [1, \"form-label\"], [1, \"d-flex\"], [\"class\", \"form-check me-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"justify-content-between\", \"mt-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"bi\", \"bi-arrow-counterclockwise\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [4, \"ngIf\"], [\"class\", \"alert alert-danger mb-4\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngIf\"], [\"class\", \"card bg-light\", 4, \"ngIf\"], [1, \"text-danger\", \"mt-1\"], [3, \"value\"], [1, \"form-check\", \"me-3\"], [\"type\", \"radio\", \"formControlName\", \"complexity\", 1, \"form-check-input\", 3, \"id\", \"value\"], [1, \"form-check-label\", 3, \"for\"], [1, \"bi\", \"bi-stopwatch\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\"], [1, \"alert\", \"alert-danger\", \"mb-4\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"mb-4\", \"text-center\"], [1, \"display-4\", \"mb-0\"], [1, \"text-muted\"], [1, \"mb-4\"], [1, \"progress\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", 3, \"ngClass\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-footer\", \"text-muted\", \"small\"], [1, \"bi\", \"bi-info-circle\"], [1, \"list-group-item\"], [1, \"card\", \"bg-light\"], [1, \"card-body\", \"text-center\", \"p-5\"], [1, \"bi\", \"bi-graph-up\", \"display-1\", \"text-muted\"], [1, \"mt-3\"]],\n        template: function TaskEstimationComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n            i0.ɵɵtext(4, \"ML-Based Task Estimation\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"p\", 4);\n            i0.ɵɵtext(6, \"Estimate task duration using machine learning predictions based on historical data\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"h4\", 9);\n            i0.ɵɵtext(12, \"Task Details\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(13, \"div\", 10)(14, \"form\", 11);\n            i0.ɵɵlistener(\"ngSubmit\", function TaskEstimationComponent_Template_form_ngSubmit_14_listener() {\n              return ctx.estimateTaskTime();\n            });\n            i0.ɵɵelementStart(15, \"div\", 12)(16, \"label\", 13);\n            i0.ɵɵtext(17, \"Task Title\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(18, \"input\", 14);\n            i0.ɵɵtemplate(19, TaskEstimationComponent_div_19_Template, 3, 2, \"div\", 15);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"div\", 12)(21, \"label\", 16);\n            i0.ɵɵtext(22, \"Task Type\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"select\", 17);\n            i0.ɵɵtemplate(24, TaskEstimationComponent_option_24_Template, 2, 2, \"option\", 18);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(25, \"div\", 12)(26, \"label\", 19);\n            i0.ɵɵtext(27, \"Assignee\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(28, \"select\", 20)(29, \"option\", 21);\n            i0.ɵɵtext(30, \"-- Unassigned --\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(31, TaskEstimationComponent_option_31_Template, 2, 2, \"option\", 18);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(32, \"div\", 12)(33, \"label\", 22);\n            i0.ɵɵtext(34, \"Complexity\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(35, \"div\", 23);\n            i0.ɵɵtemplate(36, TaskEstimationComponent_div_36_Template, 4, 4, \"div\", 24);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(37, \"div\", 25)(38, \"button\", 26);\n            i0.ɵɵlistener(\"click\", function TaskEstimationComponent_Template_button_click_38_listener() {\n              return ctx.resetForm();\n            });\n            i0.ɵɵelement(39, \"i\", 27);\n            i0.ɵɵtext(40, \" Reset \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(41, \"button\", 28);\n            i0.ɵɵtemplate(42, TaskEstimationComponent_span_42_Template, 3, 0, \"span\", 29);\n            i0.ɵɵtemplate(43, TaskEstimationComponent_span_43_Template, 3, 0, \"span\", 29);\n            i0.ɵɵelementEnd()()()()()();\n            i0.ɵɵelementStart(44, \"div\", 6);\n            i0.ɵɵtemplate(45, TaskEstimationComponent_div_45_Template, 2, 1, \"div\", 30);\n            i0.ɵɵtemplate(46, TaskEstimationComponent_div_46_Template, 24, 7, \"div\", 31);\n            i0.ɵɵtemplate(47, TaskEstimationComponent_div_47_Template, 7, 0, \"div\", 32);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            i0.ɵɵadvance(14);\n            i0.ɵɵproperty(\"formGroup\", ctx.estimationForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.estimationForm.get(\"title\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.estimationForm.get(\"title\")) == null ? null : tmp_1_0.touched));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.taskTypes);\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngForOf\", ctx.teamMembers);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.complexityLevels);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"disabled\", ctx.loading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.showResult && ctx.estimationResult);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.showResult && !ctx.error);\n          }\n        },\n        dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\"h2[_ngcontent-%COMP%]{margin-bottom:1.5rem;color:#2c3e50}.container[_ngcontent-%COMP%]{padding-top:1.5rem}.display-4[_ngcontent-%COMP%]{font-weight:600}.card[_ngcontent-%COMP%]{box-shadow:0 4px 6px #0000001a;transition:all .3s ease}.card[_ngcontent-%COMP%]:hover{box-shadow:0 6px 10px #00000026}.progress[_ngcontent-%COMP%]{height:25px;font-weight:600}.list-group-item[_ngcontent-%COMP%]:first-child{font-weight:500}.bg-light[_ngcontent-%COMP%]{opacity:.8}.bg-light[_ngcontent-%COMP%]   i.bi-graph-up[_ngcontent-%COMP%]{opacity:.5}.form-check[_ngcontent-%COMP%], .form-check[_ngcontent-%COMP%]   .form-check-input[_ngcontent-%COMP%], .form-check[_ngcontent-%COMP%]   .form-check-label[_ngcontent-%COMP%]{cursor:pointer}@keyframes _ngcontent-%COMP%_fadeIn{0%{opacity:0;transform:translateY(10px)}to{opacity:1;transform:translateY(0)}}.alert[_ngcontent-%COMP%], .card[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_fadeIn .3s ease-out}\"]\n      });\n    }\n  }\n  return TaskEstimationComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}