{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { tap, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/task.service\";\nimport * as i2 from \"../../services/team.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction TaskDistributionComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"option\", 70);\n  }\n  if (rf & 2) {\n    const path_r34 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", path_r34);\n  }\n}\nfunction TaskDistributionComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Search\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"span\", 71);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_span_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Auto-Assign Tasks\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_span_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"span\", 71);\n    i0.ɵɵtext(2, \" Loading Preview... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_span_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"span\", 71);\n    i0.ɵɵtext(2, \" Assigning... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 72);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.error.autoAssign);\n  }\n}\nfunction TaskDistributionComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 73);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.error.iterationPaths);\n  }\n}\nfunction TaskDistributionComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 72);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.error.tasks);\n  }\n}\nfunction TaskDistributionComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 72);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.error.members);\n  }\n}\nfunction TaskDistributionComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74)(1, \"div\", 75)(2, \"span\", 76);\n    i0.ɵɵtext(3, \"Loading tasks...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction TaskDistributionComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 72);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r11.error.tasks);\n  }\n}\nfunction TaskDistributionComponent_div_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74)(1, \"p\", 12);\n    i0.ɵɵtext(2, \"No tasks found for the current iteration path.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskDistributionComponent_div_57_tr_15_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 88);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r36 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r36.assignedTo);\n  }\n}\nfunction TaskDistributionComponent_div_57_tr_15_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 89);\n    i0.ɵɵtext(1, \"Unassigned\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_57_tr_15_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 90)(1, \"small\", 91);\n    i0.ɵɵelement(2, \"i\", 92);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r36 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Suggest: \", task_r36.autoAssignSuggestion, \" \");\n  }\n}\nfunction TaskDistributionComponent_div_57_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"a\", 80);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_57_tr_15_Template_a_click_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r43);\n      const task_r36 = restoredCtx.$implicit;\n      const ctx_r42 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r42.openTaskInAzureDevOps(task_r36.id, $event));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\")(7, \"span\", 81);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"td\")(10, \"div\", 82);\n    i0.ɵɵtemplate(11, TaskDistributionComponent_div_57_tr_15_span_11_Template, 2, 1, \"span\", 83);\n    i0.ɵɵtemplate(12, TaskDistributionComponent_div_57_tr_15_span_12_Template, 2, 0, \"span\", 84);\n    i0.ɵɵtemplate(13, TaskDistributionComponent_div_57_tr_15_div_13_Template, 4, 1, \"div\", 85);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\")(15, \"button\", 86);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_57_tr_15_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r43);\n      const task_r36 = restoredCtx.$implicit;\n      const ctx_r44 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r44.openAssignModal(task_r36.id));\n    });\n    i0.ɵɵelement(16, \"i\", 87);\n    i0.ɵɵtext(17, \" Assign \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r36 = ctx.$implicit;\n    const ctx_r35 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r36.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r36.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r35.getPriorityClass(task_r36.priority));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r36.priority, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", task_r36.assignedTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !task_r36.assignedTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r36.autoAssignSuggestion);\n  }\n}\nfunction TaskDistributionComponent_div_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 77)(1, \"table\", 78)(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Priority\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Assigned To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, TaskDistributionComponent_div_57_tr_15_Template, 18, 7, \"tr\", 79);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r13.filteredTasks);\n  }\n}\nfunction TaskDistributionComponent_div_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74)(1, \"div\", 75)(2, \"span\", 76);\n    i0.ɵɵtext(3, \"Loading team members...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction TaskDistributionComponent_div_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 72);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r15.error.members);\n  }\n}\nfunction TaskDistributionComponent_div_71_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74)(1, \"p\", 12);\n    i0.ɵɵtext(2, \"No team members found for the current iteration path.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskDistributionComponent_div_72_div_1_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 103);\n    i0.ɵɵelement(1, \"i\", 104);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const member_r46 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", member_r46.email, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"bg-light\": a0\n  };\n};\nfunction TaskDistributionComponent_div_72_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 94)(1, \"div\", 95)(2, \"div\", 36)(3, \"h5\", 96)(4, \"a\", 97);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_72_div_1_Template_a_click_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r50);\n      const member_r46 = restoredCtx.$implicit;\n      const ctx_r49 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r49.showMemberTasksModal($event, member_r46.displayName));\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 98)(7, \"span\", 99);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_72_div_1_Template_span_click_7_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r50);\n      const member_r46 = restoredCtx.$implicit;\n      const ctx_r51 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r51.showMemberTasks($event, member_r46.displayName));\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 100);\n    i0.ɵɵelement(10, \"div\", 101);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, TaskDistributionComponent_div_72_div_1_div_11_Template, 3, 1, \"div\", 102);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const member_r46 = ctx.$implicit;\n    const ctx_r45 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx_r45.getTaskCount(member_r46.displayName) === 0));\n    i0.ɵɵadvance(3);\n    i0.ɵɵattribute(\"aria-label\", \"View \" + member_r46.displayName + \"'s tasks\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", member_r46.displayName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r45.getTeamMemberWorkloadClass(ctx_r45.getTaskCount(member_r46.displayName)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r45.getTaskCount(member_r46.displayName), \" Tasks \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r45.getWorkloadPercentage(ctx_r45.getTaskCount(member_r46.displayName)), \"%\");\n    i0.ɵɵproperty(\"ngClass\", ctx_r45.getProgressBarClass(ctx_r45.getTaskCount(member_r46.displayName)));\n    i0.ɵɵattribute(\"aria-valuenow\", ctx_r45.getTaskCount(member_r46.displayName));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", member_r46.email);\n  }\n}\nfunction TaskDistributionComponent_div_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtemplate(1, TaskDistributionComponent_div_72_div_1_Template, 12, 12, \"div\", 93);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r17.filteredTeamMembers);\n  }\n}\nfunction TaskDistributionComponent_div_81_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 105);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r18.error.assign);\n  }\n}\nfunction TaskDistributionComponent_div_82_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 106)(2, \"label\", 107);\n    i0.ɵɵtext(3, \"Task ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 108);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 106)(7, \"label\", 107);\n    i0.ɵɵtext(8, \"Task Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 108);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r19.selectedTask);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.getSelectedTaskTitle(), \" \");\n  }\n}\nfunction TaskDistributionComponent_div_87_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r54 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 109)(1, \"input\", 110);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskDistributionComponent_div_87_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r54);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r53.selectedMember = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 111)(3, \"div\", 3)(4, \"span\", 112);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 81);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const member_r52 = ctx.$implicit;\n    const ctx_r20 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", \"member-\" + member_r52.id)(\"value\", member_r52.displayName)(\"ngModel\", ctx_r20.selectedMember);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"for\", \"member-\" + member_r52.id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(member_r52.displayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r20.getTeamMemberWorkloadClass(ctx_r20.getTaskCount(member_r52.displayName)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r20.getTaskCount(member_r52.displayName), \" Tasks \");\n  }\n}\nfunction TaskDistributionComponent_span_92_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Assign\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_span_93_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"span\", 71);\n    i0.ɵɵtext(2, \" Assigning... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_94_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 113);\n  }\n}\nfunction TaskDistributionComponent_div_104_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 105);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r24.error.preview);\n  }\n}\nfunction TaskDistributionComponent_div_110_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74)(1, \"div\", 75)(2, \"span\", 76);\n    i0.ɵɵtext(3, \"Loading assignment suggestions...\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"p\", 114);\n    i0.ɵɵtext(5, \"Analyzing tasks and developer performance...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskDistributionComponent_div_111_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 115);\n    i0.ɵɵelement(1, \"i\", 65);\n    i0.ɵɵtext(2, \" No \\\"Dev-New\\\" tasks available for assignment. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_112_div_13_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r60 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", status_r60.status, \": \", status_r60.count, \" \");\n  }\n}\nfunction TaskDistributionComponent_div_112_div_13_div_7_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r64 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"a\", 80);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_112_div_13_div_7_tr_13_Template_a_click_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r64);\n      const task_r62 = restoredCtx.$implicit;\n      const ctx_r63 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r63.openTaskInAzureDevOps(task_r62.id, $event));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r62 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r62.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r62.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r62.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r62.assignedTo || \"Unassigned\");\n  }\n}\nfunction TaskDistributionComponent_div_112_div_13_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 77)(1, \"table\", 124)(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Assigned To\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"tbody\");\n    i0.ɵɵtemplate(13, TaskDistributionComponent_div_112_div_13_div_7_tr_13_Template, 10, 4, \"tr\", 79);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r57 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r57.getDevNewTasks());\n  }\n}\nfunction TaskDistributionComponent_div_112_div_13_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 73);\n    i0.ɵɵtext(1, \" No tasks with 'Dev-New' status found in the data. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_112_div_13_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 73);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r59 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Found \", ctx_r59.getDevNewTasks().length, \" Dev-New tasks, but all are already assigned. \");\n  }\n}\nfunction TaskDistributionComponent_div_112_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h6\");\n    i0.ɵɵtext(2, \"Status Distribution:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, TaskDistributionComponent_div_112_div_13_li_4_Template, 2, 2, \"li\", 79);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h6\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, TaskDistributionComponent_div_112_div_13_div_7_Template, 14, 1, \"div\", 38);\n    i0.ɵɵtemplate(8, TaskDistributionComponent_div_112_div_13_div_8_Template, 2, 0, \"div\", 25);\n    i0.ɵɵtemplate(9, TaskDistributionComponent_div_112_div_13_div_9_Template, 2, 1, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r55 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r55.getStatusDistribution());\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Dev-New Tasks (\", ctx_r55.getDevNewTasks().length, \"):\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r55.getDevNewTasks().length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r55.getDevNewTasks().length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r55.getUnassignedDevNewTasks().length === 0 && ctx_r55.getDevNewTasks().length > 0);\n  }\n}\nfunction TaskDistributionComponent_div_112_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 116)(1, \"div\", 117)(2, \"div\", 118)(3, \"h2\", 119)(4, \"button\", 120);\n    i0.ɵɵelement(5, \"i\", 121);\n    i0.ɵɵtext(6, \" Debug Information \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 122)(8, \"div\", 123)(9, \"h6\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"h6\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, TaskDistributionComponent_div_112_div_13_Template, 10, 5, \"div\", 19);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"Total Tasks: \", ctx_r27.tasks.length, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"Total Tasks: \", ctx_r27.filteredTasks.length, \" (filtered from \", ctx_r27.tasks.length, \" total)\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r27.filteredTasks.length > 0);\n  }\n}\nfunction TaskDistributionComponent_div_113_tr_20_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r66 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r66.assignedTo);\n  }\n}\nfunction TaskDistributionComponent_div_113_tr_20_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 140);\n    i0.ɵɵtext(1, \"Unassigned\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_113_tr_20_ng_container_16_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 143);\n    i0.ɵɵtext(1, \"Reassignment\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_113_tr_20_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 82)(2, \"span\", 141);\n    i0.ɵɵtext(3, \"AI Pick\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, TaskDistributionComponent_div_113_tr_20_ng_container_16_span_6_Template, 2, 0, \"span\", 142);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r66 = i0.ɵɵnextContext().$implicit;\n    const ctx_r69 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r69.extractDeveloperName(ctx_r69.assignPreviewSuggestions[task_r66.id]));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r69.extractDeveloperName(ctx_r69.assignPreviewSuggestions[task_r66.id]) !== task_r66.assignedTo && task_r66.assignedTo);\n  }\n}\nfunction TaskDistributionComponent_div_113_tr_20_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"No suggestion available\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_113_tr_20_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 144);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r66 = i0.ɵɵnextContext().$implicit;\n    const ctx_r71 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r71.extractLogicExplanation(ctx_r71.assignPreviewSuggestions[task_r66.id]), \" \");\n  }\n}\nfunction TaskDistributionComponent_div_113_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r77 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"a\", 80);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_113_tr_20_Template_a_click_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r77);\n      const task_r66 = restoredCtx.$implicit;\n      const ctx_r76 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r76.openTaskInAzureDevOps(task_r66.id, $event));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"span\", 135);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"span\", 136);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtemplate(13, TaskDistributionComponent_div_113_tr_20_span_13_Template, 2, 1, \"span\", 137);\n    i0.ɵɵtemplate(14, TaskDistributionComponent_div_113_tr_20_span_14_Template, 2, 0, \"span\", 138);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtemplate(16, TaskDistributionComponent_div_113_tr_20_ng_container_16_Template, 7, 2, \"ng-container\", 19);\n    i0.ɵɵtemplate(17, TaskDistributionComponent_div_113_tr_20_span_17_Template, 2, 0, \"span\", 137);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtemplate(19, TaskDistributionComponent_div_113_tr_20_span_19_Template, 2, 1, \"span\", 139);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r66 = ctx.$implicit;\n    const ctx_r65 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r66.id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r66.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r66.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r66.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", task_r66.assignedTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !task_r66.assignedTo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r65.assignPreviewSuggestions[task_r66.id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r65.assignPreviewSuggestions[task_r66.id]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r65.assignPreviewSuggestions[task_r66.id]);\n  }\n}\nfunction TaskDistributionComponent_div_113_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 77)(2, \"table\", 78)(3, \"thead\")(4, \"tr\")(5, \"th\");\n    i0.ɵɵtext(6, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \"Current Assignee\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\");\n    i0.ɵɵtext(16, \"Suggested Assignee\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"th\");\n    i0.ɵɵtext(18, \"Assignment Logic\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"tbody\");\n    i0.ɵɵtemplate(20, TaskDistributionComponent_div_113_tr_20_Template, 20, 9, \"tr\", 79);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"div\", 125)(22, \"h6\");\n    i0.ɵɵtext(23, \"Assignment Logic Explanation:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"ul\", 126)(25, \"li\", 127);\n    i0.ɵɵelement(26, \"i\", 128);\n    i0.ɵɵelementStart(27, \"small\")(28, \"strong\");\n    i0.ɵɵtext(29, \"Past Expertise\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \" - Developer has completed similar tasks in the past 3 months\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"li\", 127);\n    i0.ɵɵelement(32, \"i\", 129);\n    i0.ɵɵelementStart(33, \"small\")(34, \"strong\");\n    i0.ɵɵtext(35, \"Recently Completed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \" - Developer has recently completed all assigned tasks\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(37, \"li\", 127);\n    i0.ɵɵelement(38, \"i\", 130);\n    i0.ɵɵelementStart(39, \"small\")(40, \"strong\");\n    i0.ɵɵtext(41, \"Lowest Workload\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \" - Developer has the fewest assigned tasks\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(43, \"li\", 127);\n    i0.ɵɵelement(44, \"i\", 131);\n    i0.ɵɵelementStart(45, \"small\")(46, \"strong\");\n    i0.ɵɵtext(47, \"Default Assignment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(48, \" - Task assigned to available developer when no other criteria met\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(49, \"div\", 132)(50, \"h6\");\n    i0.ɵɵtext(51, \"Assignment Summary:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"div\", 34)(53, \"div\", 133)(54, \"div\", 134);\n    i0.ɵɵelement(55, \"i\", 128);\n    i0.ɵɵelementStart(56, \"span\");\n    i0.ɵɵtext(57);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(58, \"div\", 133)(59, \"div\", 134);\n    i0.ɵɵelement(60, \"i\", 129);\n    i0.ɵɵelementStart(61, \"span\");\n    i0.ɵɵtext(62);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(63, \"div\", 133)(64, \"div\", 134);\n    i0.ɵɵelement(65, \"i\", 130);\n    i0.ɵɵelementStart(66, \"span\");\n    i0.ɵɵtext(67);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(68, \"div\", 133)(69, \"div\", 134);\n    i0.ɵɵelement(70, \"i\", 131);\n    i0.ɵɵelementStart(71, \"span\");\n    i0.ɵɵtext(72);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(20);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r28.assignPreviewTasks);\n    i0.ɵɵadvance(37);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r28.getAssignmentsByReason(\"expertise\"), \" task(s) by expertise\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r28.getAssignmentsByReason(\"completed\"), \" task(s) to recently available developers\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r28.getAssignmentsByReason(\"workload\"), \" task(s) by workload balancing\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r28.getAssignmentsByReason(\"default\"), \" task(s) by default assignment\");\n  }\n}\nfunction TaskDistributionComponent_span_119_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Confirm & Assign\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_span_120_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"span\", 71);\n    i0.ɵɵtext(2, \" Assigning... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_121_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 113);\n  }\n}\nfunction TaskDistributionComponent_div_122_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 150)(1, \"p\", 151);\n    i0.ɵɵtext(2, \"No tasks found for this team member.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskDistributionComponent_div_122_ul_7_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r83 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 154)(1, \"div\", 155)(2, \"div\")(3, \"a\", 80);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_122_ul_7_li_1_Template_a_click_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r83);\n      const task_r81 = restoredCtx.$implicit;\n      const ctx_r82 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r82.openTaskInAzureDevOps(task_r81.id, $event));\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 156);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"span\", 157);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r81 = ctx.$implicit;\n    const ctx_r80 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r81.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r81.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r80.getStatusClass(task_r81.status));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r81.status, \" \");\n  }\n}\nfunction TaskDistributionComponent_div_122_ul_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 152);\n    i0.ɵɵtemplate(1, TaskDistributionComponent_div_122_ul_7_li_1_Template, 9, 4, \"li\", 153);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r79 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r79.selectedMemberTasks);\n  }\n}\nfunction TaskDistributionComponent_div_122_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r85 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 145);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_122_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r85);\n      const ctx_r84 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r84.keepPopupOpen($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 146)(2, \"h5\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 49);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_122_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r85);\n      const ctx_r86 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r86.closePopup());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 147);\n    i0.ɵɵtemplate(6, TaskDistributionComponent_div_122_div_6_Template, 3, 0, \"div\", 148);\n    i0.ɵɵtemplate(7, TaskDistributionComponent_div_122_ul_7_Template, 2, 1, \"ul\", 149);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"top\", ctx_r32.popupPosition.top, \"px\")(\"left\", ctx_r32.popupPosition.left, \"px\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r32.selectedMemberName, \"'s Tasks\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.selectedMemberTasks.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.selectedMemberTasks.length > 0);\n  }\n}\nfunction TaskDistributionComponent_div_123_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 171);\n    i0.ɵɵelement(1, \"div\", 172);\n    i0.ɵɵelementStart(2, \"p\", 173);\n    i0.ɵɵtext(3, \"Loading tasks...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskDistributionComponent_div_123_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 174);\n    i0.ɵɵelement(1, \"i\", 175);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r88 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r88.error.memberTasks, \" \");\n  }\n}\nfunction TaskDistributionComponent_div_123_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74);\n    i0.ɵɵelement(1, \"i\", 178);\n    i0.ɵɵelementStart(2, \"p\", 179);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r90 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"No tasks assigned to \", ctx_r90.selectedModalMemberName, \"\");\n  }\n}\nfunction TaskDistributionComponent_div_123_div_11_ul_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r95 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 154)(1, \"div\", 181)(2, \"a\", 182);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_123_div_11_ul_2_li_1_Template_a_click_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r95);\n      const task_r93 = restoredCtx.$implicit;\n      const ctx_r94 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r94.openTaskInAzureDevOps(task_r93.id, $event));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 183);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 184);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r93 = ctx.$implicit;\n    const ctx_r92 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"#\", task_r93.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r92.getStatusClass(task_r93.status));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r93.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r93.title);\n  }\n}\nfunction TaskDistributionComponent_div_123_div_11_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 180);\n    i0.ɵɵtemplate(1, TaskDistributionComponent_div_123_div_11_ul_2_li_1_Template, 8, 4, \"li\", 153);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r91 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r91.selectedModalMemberTasks);\n  }\n}\nfunction TaskDistributionComponent_div_123_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 176);\n    i0.ɵɵtemplate(1, TaskDistributionComponent_div_123_div_11_div_1_Template, 4, 1, \"div\", 37);\n    i0.ɵɵtemplate(2, TaskDistributionComponent_div_123_div_11_ul_2_Template, 2, 1, \"ul\", 177);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r89 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r89.selectedModalMemberTasks.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r89.selectedModalMemberTasks.length > 0);\n  }\n}\nfunction TaskDistributionComponent_div_123_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r97 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 158);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_123_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r97);\n      const ctx_r96 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r96.closeMemberModal());\n    });\n    i0.ɵɵelementStart(1, \"div\", 159);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_123_Template_div_click_1_listener($event) {\n      return $event.stopPropagation();\n    })(\"keydown\", function TaskDistributionComponent_div_123_Template_div_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r97);\n      const ctx_r99 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r99.handleModalKeydown($event));\n    });\n    i0.ɵɵelementStart(2, \"div\", 160)(3, \"div\", 161)(4, \"h2\", 162);\n    i0.ɵɵelement(5, \"i\", 163);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 164);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_123_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r97);\n      const ctx_r100 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r100.closeMemberModal());\n    });\n    i0.ɵɵelement(8, \"i\", 165);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, TaskDistributionComponent_div_123_div_9_Template, 4, 0, \"div\", 166);\n    i0.ɵɵtemplate(10, TaskDistributionComponent_div_123_div_10_Template, 3, 1, \"div\", 167);\n    i0.ɵɵtemplate(11, TaskDistributionComponent_div_123_div_11_Template, 3, 2, \"div\", 168);\n    i0.ɵɵelementStart(12, \"div\", 169)(13, \"button\", 170);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_123_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r97);\n      const ctx_r101 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r101.closeMemberModal());\n    });\n    i0.ɵɵtext(14, \" Close \");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-labelledby\", \"memberModalTitle\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r33.selectedModalMemberName, \"'s Tasks \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r33.loading.memberTasks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r33.error.memberTasks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r33.loading.memberTasks && !ctx_r33.error.memberTasks);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"show\": a0\n  };\n};\nexport class TaskDistributionComponent {\n  constructor(taskService, teamService) {\n    this.taskService = taskService;\n    this.teamService = teamService;\n    this.tasks = [];\n    this.filteredTasks = [];\n    this.teamMembers = [];\n    this.filteredTeamMembers = []; // New property for filtered team members\n    this.selectedTaskId = null;\n    this.selectedTeamMemberId = '';\n    this.selectedTask = null; // Added for modal display\n    this.selectedMember = ''; // Added for member selection in modal\n    this.currentIterationPath = 'Techoil\\\\2.3.23'; // Default value\n    this.manualIterationPath = ''; // For manual input\n    this.teamName = 'RND'; // Default team name\n    this.iterationPaths = []; // Will be loaded from API\n    this.teamMemberTaskCounts = {}; // Added for task counts\n    this.applyTeamFilter = true; // Whether to apply team name filter\n    // Auto-assign preview properties\n    this.showingPreview = false;\n    this.assignPreviewTasks = [];\n    this.assignPreviewSuggestions = {};\n    // Track the active tab\n    this.activeTab = 'distribution';\n    // Convert simple boolean to object with specific loading states\n    this.loading = {\n      tasks: false,\n      members: false,\n      assign: false,\n      autoAssign: false,\n      iterationPaths: false,\n      taskCounts: false,\n      preview: false,\n      memberTasks: false // Added for loading member tasks in the modal\n    };\n    // Convert simple string to object with specific error states\n    this.error = {\n      tasks: null,\n      members: null,\n      assign: null,\n      autoAssign: null,\n      iterationPaths: null,\n      taskCounts: null,\n      preview: null,\n      memberTasks: null // Added for member tasks errors\n    };\n    // Azure DevOps URL components from environment\n    this.azureDevOpsUrl = environment.azureDevOpsUrl;\n    this.organization = environment.organization;\n    this.project = environment.project;\n    // Task popup properties\n    this.showTaskPopup = false;\n    this.popupPosition = {\n      top: 0,\n      left: 0\n    };\n    this.selectedMemberTasks = [];\n    this.selectedMemberName = '';\n    // Member modal properties\n    this.showMemberModal = false;\n    this.selectedModalMemberName = '';\n    this.selectedModalMemberTasks = [];\n    this.lastFocusedElement = null;\n  }\n  ngOnInit() {\n    this.loadIterationPaths();\n  }\n  /**\r\n   * Handle tab change events\r\n   * @param tabId The ID of the selected tab\r\n   */\n  onTabChange(tabId) {\n    console.log(`Tab changed to: ${tabId}`);\n    this.activeTab = tabId;\n    // Load specific data based on the selected tab\n    if (tabId === 'workload') {\n      // Force refresh team members and workload data\n      this.loadTeamMembers();\n      this.loadTeamMemberTaskCounts();\n      console.log('Refreshing team workload data');\n    } else if (tabId === 'distribution') {\n      // Refresh tasks if needed\n      if (this.filteredTasks.length === 0 && !this.loading.tasks) {\n        this.loadTasks();\n        console.log('Refreshing task distribution data');\n      }\n    }\n  }\n  ngAfterViewInit() {\n    // Initialize Bootstrap tabs\n    this.initializeBootstrapTabs();\n  }\n  /**\r\n   * Initialize Bootstrap tabs programmatically\r\n   */\n  initializeBootstrapTabs() {\n    try {\n      // Check if Bootstrap's Tab class is available globally\n      if (typeof window.bootstrap !== 'undefined' && window.bootstrap.Tab) {\n        // Initialize all tabs\n        const tabElements = document.querySelectorAll('[data-bs-toggle=\"tab\"]');\n        tabElements.forEach(tabEl => {\n          // Create tab instance\n          const tab = new window.bootstrap.Tab(tabEl);\n          // Add event listener for tab shown event\n          tabEl.addEventListener('shown.bs.tab', event => {\n            // Extract tab ID from the target\n            const targetId = event.target.getAttribute('data-bs-target');\n            const tabId = targetId === '#task-distribution' ? 'distribution' : 'workload';\n            console.log(`Tab shown event: ${tabId}`);\n            // Update active tab and ensure data is loaded\n            this.activeTab = tabId;\n            // Ensure tab content is loaded/refreshed\n            if (tabId === 'workload' && this.filteredTeamMembers.length === 0 && !this.loading.members) {\n              this.loadTeamMembers();\n              this.loadTeamMemberTaskCounts();\n            }\n          });\n        });\n        console.log('Bootstrap tabs initialized successfully with event listeners');\n      } else {\n        console.warn('Bootstrap JavaScript not found. Tabs may not function properly.');\n      }\n    } catch (error) {\n      console.error('Error initializing Bootstrap tabs:', error);\n    }\n  }\n  loadIterationPaths() {\n    this.loading.iterationPaths = true;\n    this.error.iterationPaths = null;\n    this.taskService.getIterationPaths().subscribe({\n      next: paths => {\n        this.iterationPaths = paths;\n        this.loading.iterationPaths = false;\n        if (paths.length > 0) {\n          // Use the first path as default if available\n          this.currentIterationPath = paths[0];\n          this.manualIterationPath = paths[0];\n        }\n        // We no longer automatically load data after loading iteration paths\n        // Data will be loaded when the search button is clicked\n      },\n\n      error: err => {\n        console.error('Error loading iteration paths:', err);\n        this.error.iterationPaths = `Failed to load iteration paths: ${err.message}`;\n        this.loading.iterationPaths = false;\n        // Add fallback iteration paths if API call fails\n        this.iterationPaths = ['Techoil\\\\2.3.23', 'Techoil\\\\2.3.24', 'Techoil\\\\2.3.25', 'Techoil\\\\2.3.26'];\n        console.log('Using fallback iteration paths:', this.iterationPaths);\n        // We no longer automatically load data after loading iteration paths\n        // Data will be loaded when the search button is clicked\n      }\n    });\n  }\n  /**\r\n   * Search button handler - loads data based on manual inputs\r\n   */\n  searchClicked() {\n    // Normalize the manual input iteration path\n    const normalizedPath = this.manualIterationPath.replace(/\\\\\\\\/g, '\\\\');\n    // Update the current iteration path with the normalized manual input\n    this.currentIterationPath = normalizedPath;\n    this.manualIterationPath = normalizedPath; // Update the displayed value too\n    // Clear previous errors\n    this.error.tasks = null;\n    this.error.members = null;\n    console.log(`Searching with team filter ${this.applyTeamFilter ? 'enabled' : 'disabled'}`);\n    console.log(`Using normalized iteration path: ${normalizedPath}`);\n    // Load data based on the manual inputs\n    this.loadTasks();\n    this.loadTeamMembers();\n  }\n  loadTasks() {\n    this.loading.tasks = true;\n    this.error.tasks = null;\n    // Normalize the iteration path to handle any double backslashes\n    const normalizedPath = this.currentIterationPath.replace(/\\\\\\\\/g, '\\\\');\n    console.log(`Loading tasks for iteration path: ${normalizedPath}`);\n    this.taskService.getTasks(normalizedPath).subscribe({\n      next: tasks => {\n        this.tasks = tasks;\n        this.loading.tasks = false;\n        console.log(`Loaded ${tasks.length} tasks for iteration path ${normalizedPath}`);\n        // After loading tasks, update team workload and filter tasks\n        if (this.teamMembers.length > 0) {\n          this.updateTeamWorkload();\n          this.filterTasksByRnDTeamMembers();\n        }\n      },\n      error: err => {\n        console.error(`Error loading tasks for iteration path ${normalizedPath}:`, err);\n        this.error.tasks = `Failed to load tasks: ${err.message}`;\n        this.loading.tasks = false;\n      }\n    });\n  }\n  loadTeamMembers() {\n    this.loading.members = true;\n    this.error.members = null;\n    // Normalize the iteration path to handle any double backslashes\n    const normalizedPath = this.currentIterationPath.replace(/\\\\\\\\/g, '\\\\');\n    // Use the teamService directly to get team members by team name if filter is applied\n    // Otherwise, just get all team members\n    if (this.applyTeamFilter) {\n      this.teamService.getTeamMembersByTeam(this.teamName, normalizedPath).subscribe({\n        next: teamMembers => {\n          this.teamMembers = teamMembers;\n          console.log(`Loaded ${this.teamName} team members:`, this.teamMembers);\n          this.loading.members = false;\n          // Filter out non-R&D team members\n          this.filterRnDTeamMembers();\n          // Load team member task counts after loading team members\n          this.loadTeamMemberTaskCounts();\n          // If tasks are already loaded, update workload\n          if (this.tasks.length > 0) {\n            this.updateTeamWorkload();\n          } else {\n            // If no tasks are loaded yet, still show the team members\n            console.log('No tasks loaded yet, showing filtered team members');\n          }\n        },\n        error: err => {\n          console.error(`Error loading ${this.teamName} team members:`, err);\n          // Fallback to regular team members if team-specific call fails\n          this.loadAllTeamMembers(normalizedPath);\n        }\n      });\n    } else {\n      // If team filter is not applied, load all team members\n      this.loadAllTeamMembers(normalizedPath);\n    }\n  }\n  /**\r\n   * Helper method to load all team members without team filter\r\n   */\n  loadAllTeamMembers(normalizedPath) {\n    this.taskService.getTeamMembers(normalizedPath).subscribe({\n      next: response => {\n        // Process the response as an array of TeamMember objects\n        if (Array.isArray(response)) {\n          // Handle string array response - convert strings to TeamMember objects\n          if (response.length > 0 && typeof response[0] === 'string') {\n            this.teamMembers = response.map((name, index) => ({\n              id: `member-${index}`,\n              displayName: name,\n              uniqueName: '',\n              currentWorkload: 0,\n              isActive: true,\n              email: '',\n              team: this.applyTeamFilter ? this.teamName : ''\n            }));\n          } else {\n            // It's already an array of TeamMember objects\n            this.teamMembers = response;\n          }\n          // If team filter is applied, still filter out non-R&D team members\n          if (this.applyTeamFilter) {\n            this.filterRnDTeamMembers();\n          } else {\n            // If not applying team filter, all team members are filtered\n            this.filteredTeamMembers = this.teamMembers;\n          }\n          // If tasks are already loaded, update team workload data\n          if (this.tasks.length > 0) {\n            this.updateTeamWorkload();\n          }\n        } else {\n          console.error('Unexpected response format from getTeamMembers:', response);\n          this.error.members = 'Failed to load team members: Invalid response format';\n        }\n        this.loading.members = false;\n      },\n      error: memberErr => {\n        console.error(`Error loading team members for iteration path ${normalizedPath}:`, memberErr);\n        this.error.members = `Failed to load team members: ${memberErr.message}`;\n        this.loading.members = false;\n      }\n    });\n  }\n  /**\r\n   * Filter team members to only include R&D team members\r\n   */\n  filterRnDTeamMembers() {\n    // Convert any string team members to objects first\n    this.teamMembers = this.teamMembers.map((member, index) => {\n      if (typeof member === 'string') {\n        return {\n          id: `member-${index}`,\n          displayName: member,\n          uniqueName: '',\n          currentWorkload: 0,\n          isActive: true,\n          email: '',\n          team: this.applyTeamFilter ? this.teamName : ''\n        };\n      }\n      return member;\n    });\n    // Filter out members that don't have an R&D-related team property\n    this.filteredTeamMembers = this.teamMembers.filter(member => {\n      // Ensure member is an object\n      if (typeof member !== 'object') {\n        console.warn(`Unexpected member type in filterRnDTeamMembers: ${typeof member}`);\n        return false;\n      }\n      // If member has a team property and it contains R&D-related terms\n      if (member.team) {\n        return member.team.toLowerCase().includes('r&d') || member.team.toLowerCase().includes('rnd') || member.team.toLowerCase().includes('research');\n      }\n      // Log members without team info\n      console.log(`Team member without team info: ${member.displayName}`);\n      // If no team property, default to including the member (backend should have already filtered)\n      return true;\n    });\n    // Log the results\n    console.log(`Filtered ${this.teamMembers.length} team members down to ${this.filteredTeamMembers.length} R&D members`);\n  }\n  /**\r\n   * Load task counts for each team member from the API\r\n   */\n  loadTeamMemberTaskCounts() {\n    this.loading.taskCounts = true;\n    this.error.taskCounts = null;\n    // Normalize the iteration path\n    const normalizedPath = this.currentIterationPath.replace(/\\\\\\\\/g, '\\\\');\n    this.taskService.getTeamMemberTaskCounts(normalizedPath).subscribe({\n      next: counts => {\n        this.teamMemberTaskCounts = counts;\n        this.loading.taskCounts = false;\n        console.log('Loaded team member task counts:', this.teamMemberTaskCounts);\n        // Update the team members with their task counts\n        this.updateTeamWorkload();\n      },\n      error: err => {\n        console.error('Error loading team member task counts:', err);\n        this.error.taskCounts = `Failed to load task counts: ${err.message}`;\n        this.loading.taskCounts = false;\n        // Fall back to counting tasks manually\n        this.updateTeamWorkload();\n      }\n    });\n  }\n  /**\r\n   * Calculate and update team members' workload based on task assignments\r\n   */\n  updateTeamWorkload() {\n    console.log('Updating team workload');\n    // Reset all workloads to 0 for all team members\n    this.teamMembers.forEach(member => {\n      // Ensure member is a TeamMember object and not a string\n      if (typeof member === 'string') {\n        console.warn(`Found string member instead of object: ${member}`);\n        // Convert string to TeamMember object if needed\n        const index = this.teamMembers.indexOf(member);\n        if (index >= 0) {\n          this.teamMembers[index] = {\n            id: `member-${index}`,\n            displayName: member,\n            uniqueName: '',\n            currentWorkload: 0,\n            isActive: true,\n            email: '',\n            team: this.applyTeamFilter ? this.teamName : ''\n          };\n        }\n      } else {\n        // Reset workload for object\n        member.currentWorkload = 0;\n      }\n    });\n    // If we have task counts from the API, use those\n    if (Object.keys(this.teamMemberTaskCounts).length > 0) {\n      this.teamMembers.forEach(member => {\n        // Skip if member is not an object\n        if (typeof member === 'string') return;\n        // Try to find this member in the task counts\n        const counts = Object.entries(this.teamMemberTaskCounts).find(([name, _]) => name.toLowerCase() === member.displayName.toLowerCase());\n        if (counts) {\n          member.currentWorkload = counts[1]; // Set the count from the API\n        }\n      });\n    } else {\n      // Fall back to counting from tasks array\n      this.tasks.forEach(task => {\n        if (task.assignedTo) {\n          // Normalize the assignedTo value\n          const normalizedAssignedTo = task.assignedTo.trim().toLowerCase();\n          // Find matching team member\n          const matchedMember = this.teamMembers.find(member => typeof member === 'object' && member.displayName.toLowerCase() === normalizedAssignedTo);\n          if (matchedMember) {\n            matchedMember.currentWorkload++;\n          }\n        }\n      });\n    }\n    // Only filter for R&D team members if team filter is applied\n    if (this.applyTeamFilter) {\n      // Re-apply R&D filter to ensure we only show R&D team members\n      this.filterRnDTeamMembers();\n    } else {\n      // If filter not applied, use all team members\n      this.filteredTeamMembers = this.teamMembers;\n    }\n    // Also filter tasks to match team members or show all if filter not applied\n    this.filterTasksByRnDTeamMembers();\n    console.log('Updated team workload for filtered members:', this.filteredTeamMembers);\n  }\n  /**\r\n   * Check if a team member is part of the current iteration team\r\n   * This is a placeholder - you may need to implement actual logic based on your data model\r\n   */\n  isPartOfCurrentIterationTeam(member) {\n    // By default, include all team members\n    // You might want to enhance this with actual iteration team membership logic\n    return true;\n  }\n  assignTask() {\n    if (!this.selectedTask) {\n      this.error.assign = 'Error: No task selected for assignment';\n      return;\n    }\n    if (!this.selectedMember) {\n      this.error.assign = 'Please select a team member for assignment';\n      return;\n    }\n    this.loading.assign = true;\n    this.error.assign = null;\n    // Use the selected member name directly for the API call\n    console.log(`Assigning task ${this.selectedTask} to member ${this.selectedMember}`);\n    this.taskService.assignTask(this.selectedTask, this.selectedMember).subscribe({\n      next: response => {\n        console.log('Task assignment successful:', response);\n        // Close the modal\n        this.cancelAssign();\n        // Show success message (could be implemented with a toast/snackbar service)\n        this.showSuccessMessage('Task assigned successfully');\n        // Reload tasks and task counts to reflect changes\n        this.loadTasks();\n        this.loadTeamMemberTaskCounts();\n      },\n      error: err => {\n        console.error('Error assigning task:', err);\n        this.error.assign = `Failed to assign task: ${err.message}`;\n        this.loading.assign = false;\n      }\n    });\n  }\n  // Helper method to show success message (placeholder for toast/snackbar)\n  showSuccessMessage(message) {\n    console.log('SUCCESS:', message);\n    // In a real implementation, you would use a toast/snackbar service\n    // Example: this.toastService.show(message, { classname: 'bg-success' });\n    // For now, create a simple alert element that disappears after a few seconds\n    const alertDiv = document.createElement('div');\n    alertDiv.className = 'alert alert-success position-fixed top-0 end-0 m-3';\n    alertDiv.textContent = message;\n    alertDiv.style.zIndex = '9999';\n    document.body.appendChild(alertDiv);\n    // Remove after 3 seconds\n    setTimeout(() => {\n      alertDiv.remove();\n    }, 3000);\n  }\n  /**\r\n   * Show preview of auto-assign suggestions before performing the assignment\r\n   */\n  showAutoAssignPreview() {\n    this.loading.preview = true;\n    this.error.preview = null;\n    this.showingPreview = true;\n    this.assignPreviewTasks = [];\n    this.assignPreviewSuggestions = {};\n    // Normalize the iteration path to handle any double backslashes\n    const normalizedPath = this.currentIterationPath.replace(/\\\\\\\\/g, '\\\\');\n    console.log('Using normalized iteration path for auto-assign preview:', normalizedPath);\n    // First, get all Dev-New tasks for the current iteration\n    this.taskService.getTasks(normalizedPath).subscribe({\n      next: tasks => {\n        // Enhanced filtering for Dev-New tasks with broader matching criteria\n        const allDevNewTasks = tasks.filter(task => {\n          // Skip tasks without status\n          if (!task.status) return false;\n          // Normalize status by removing spaces, hyphens, and converting to lowercase\n          const normalizedStatus = task.status.toLowerCase().replace(/[\\s\\-]/g, ''); // Remove spaces and hyphens\n          // Match against various formats of \"Dev-New\"\n          const isDevNew = normalizedStatus === 'devnew' || normalizedStatus === 'newdev' || normalizedStatus.includes('devnew') || normalizedStatus.includes('newdev') || normalizedStatus.includes('developmentnew') || normalizedStatus.includes('newdevelopment');\n          return isDevNew;\n        });\n        console.log(`Found ${allDevNewTasks.length} Dev-New tasks for auto-assign preview out of ${tasks.length} total tasks`);\n        console.log('Dev-New tasks:', allDevNewTasks);\n        if (allDevNewTasks.length === 0) {\n          this.error.preview = 'No Dev-New tasks found in the current iteration. Auto-assign requires tasks with Dev-New status.';\n          this.loading.preview = false;\n          return;\n        }\n        // Force using our default intelligent assignment logic even if there are no team-specific suggestions\n        // This ensures tasks are always assigned regardless of API response\n        this.getStandardAutoAssignSuggestions(allDevNewTasks, normalizedPath);\n      },\n      error: err => {\n        this.error.preview = `Failed to load tasks: ${err.message}`;\n        this.loading.preview = false;\n      }\n    });\n  }\n  /**\r\n   * Fallback method to get standard auto-assign suggestions if RnD-specific fails\r\n   */\n  getStandardAutoAssignSuggestions(allDevNewTasks, normalizedPath) {\n    console.log('Getting standard auto-assign suggestions with path:', normalizedPath);\n    console.log('Dev-New tasks available for assignment:', allDevNewTasks);\n    // Step 1: Get team members with their current task counts\n    this.loading.taskCounts = true;\n    // Prepare to hold our different data sources\n    let developerExpertise = {};\n    let availableDevelopers = [];\n    let teamMemberTaskCounts = {};\n    // First, get the team members with their task counts\n    this.taskService.getTeamMemberTaskCounts(normalizedPath).pipe(tap(taskCounts => {\n      teamMemberTaskCounts = taskCounts;\n      console.log('Team member task counts:', teamMemberTaskCounts);\n    }),\n    // Then get developer expertise data from past 3 months\n    switchMap(() => {\n      // Apply team filter if needed\n      let teamMembers = Object.keys(teamMemberTaskCounts);\n      // If team filter is active, filter by team members\n      if (this.applyTeamFilter && this.filteredTeamMembers.length > 0) {\n        const filteredNames = this.filteredTeamMembers.map(m => m.displayName.toLowerCase());\n        teamMembers = teamMembers.filter(member => filteredNames.includes(member.toLowerCase()));\n        console.log(`Applied team filter, filtered to ${teamMembers.length} team members`);\n      }\n      return this.taskService.getDeveloperExpertise(teamMembers);\n    }),\n    // Then get developers who have recently completed tasks\n    switchMap(expertise => {\n      developerExpertise = expertise;\n      console.log('Developer expertise:', developerExpertise);\n      return this.taskService.getAvailableDevelopers(normalizedPath);\n    })).subscribe({\n      next: available => {\n        availableDevelopers = available;\n        console.log('Available developers:', availableDevelopers);\n        // If team filter is active, filter available developers\n        if (this.applyTeamFilter && this.filteredTeamMembers.length > 0) {\n          const filteredNames = this.filteredTeamMembers.map(m => m.displayName.toLowerCase());\n          availableDevelopers = availableDevelopers.filter(dev => filteredNames.includes(dev.toLowerCase()));\n          console.log(`Applied team filter to available developers, filtered to ${availableDevelopers.length} developers`);\n        }\n        // Now we have all 3 data sources:\n        // 1. teamMemberTaskCounts - Current workload for each team member\n        // 2. developerExpertise - Expertise data from past 3 months\n        // 3. availableDevelopers - Developers who have recently completed tasks\n        this.assignPreviewSuggestions = {};\n        // For each task, find the best developer to assign it to\n        allDevNewTasks.forEach(task => {\n          let assignedDeveloper = '';\n          let assignmentReason = '';\n          // Check if there's a developer with expertise for this type of task\n          if (developerExpertise && developerExpertise.taskTypeExpertise) {\n            const taskType = task.type || 'Unknown';\n            const experts = developerExpertise.taskTypeExpertise[taskType];\n            if (experts && experts.length > 0) {\n              // Filter experts to match team filter if active\n              let filteredExperts = [...experts];\n              if (this.applyTeamFilter && this.filteredTeamMembers.length > 0) {\n                const filteredNames = this.filteredTeamMembers.map(m => m.displayName.toLowerCase());\n                filteredExperts = filteredExperts.filter(expert => filteredNames.includes(expert.toLowerCase()));\n                console.log(`Applied team filter to ${taskType} experts, filtered from ${experts.length} to ${filteredExperts.length}`);\n              }\n              // If we still have experts after filtering\n              if (filteredExperts.length > 0) {\n                // Find the expert with the lowest current workload\n                const expertWithLeastTasks = filteredExperts.sort((a, b) => (teamMemberTaskCounts[a] || 0) - (teamMemberTaskCounts[b] || 0))[0];\n                if (expertWithLeastTasks) {\n                  assignedDeveloper = expertWithLeastTasks;\n                  assignmentReason = `past expertise in ${taskType} tasks`;\n                }\n              }\n            }\n          }\n          // If no expert found, check if there are developers who have recently completed tasks\n          if (!assignedDeveloper && availableDevelopers.length > 0) {\n            // Find the available developer with the lowest workload\n            const availableWithLeastTasks = availableDevelopers.sort((a, b) => (teamMemberTaskCounts[a] || 0) - (teamMemberTaskCounts[b] || 0))[0];\n            if (availableWithLeastTasks) {\n              assignedDeveloper = availableWithLeastTasks;\n              assignmentReason = 'recently completed other tasks';\n            }\n          }\n          // If still no assignment, use the team member with the lowest current task count\n          if (!assignedDeveloper) {\n            // Get team members respecting the team filter\n            let teamMembers = Object.keys(teamMemberTaskCounts);\n            if (this.applyTeamFilter && this.filteredTeamMembers.length > 0) {\n              const filteredNames = this.filteredTeamMembers.map(m => m.displayName.toLowerCase());\n              teamMembers = teamMembers.filter(member => filteredNames.includes(member.toLowerCase()));\n              console.log(`Applied team filter to workload check, filtered to ${teamMembers.length} team members`);\n            }\n            if (teamMembers.length > 0) {\n              const memberWithLeastTasks = teamMembers.sort((a, b) => (teamMemberTaskCounts[a] || 0) - (teamMemberTaskCounts[b] || 0))[0];\n              if (memberWithLeastTasks) {\n                assignedDeveloper = memberWithLeastTasks;\n                assignmentReason = 'lowest current workload';\n              }\n            }\n          }\n          // Final fallback: If all else fails, just assign to any team member\n          if (!assignedDeveloper) {\n            // Try to get from filtered team members based on team filter setting\n            let eligibleMembers = this.applyTeamFilter ? this.filteredTeamMembers : this.teamMembers;\n            if (eligibleMembers.length > 0) {\n              // Use the first team member as a fallback\n              const fallbackMember = eligibleMembers[0];\n              assignedDeveloper = fallbackMember.displayName;\n              assignmentReason = 'default assignment (no criteria met)';\n              console.log(`Using fallback assignment for task ${task.id} to ${assignedDeveloper}`);\n            } else if (this.teamMembers.length > 0) {\n              // If no filtered members, try using any available team member\n              const fallbackMember = this.teamMembers[0];\n              assignedDeveloper = fallbackMember.displayName;\n              assignmentReason = 'default assignment (no criteria met)';\n              console.log(`Using fallback assignment for task ${task.id} to ${assignedDeveloper}`);\n            } else {\n              // Absolute last resort - use a hardcoded name\n              assignedDeveloper = 'Unassigned Task';\n              assignmentReason = 'could not determine assignee';\n              console.warn(`No team members available to assign task ${task.id}`);\n            }\n          }\n          // Store the suggestion with the reason\n          if (assignedDeveloper) {\n            this.assignPreviewSuggestions[task.id] = `${assignedDeveloper} (${assignmentReason})`;\n          }\n        });\n        // Filter tasks to only include those we have suggestions for\n        this.assignPreviewTasks = allDevNewTasks.filter(task => this.assignPreviewSuggestions[task.id]);\n        console.log('Intelligent auto-assign suggestions:', this.assignPreviewSuggestions);\n        console.log('Tasks to be assigned:', this.assignPreviewTasks);\n        // Check if we have valid suggestions\n        if (this.assignPreviewTasks.length === 0) {\n          this.error.preview = 'No suitable tasks found for assignment. Check if there are unassigned Dev-New tasks.';\n        }\n        this.loading.preview = false;\n        this.loading.taskCounts = false;\n      },\n      error: err => {\n        console.error('Error loading data for intelligent assignment:', err);\n        // Fallback to basic assignment if data loading fails\n        this.fallbackToBasicAssignment(allDevNewTasks);\n      }\n    });\n  }\n  /**\r\n   * Basic fallback assignment method if intelligent assignment fails\r\n   */\n  fallbackToBasicAssignment(allDevNewTasks) {\n    console.log('Falling back to basic assignment logic');\n    // Always ensure we have tasks to assign\n    if (allDevNewTasks.length === 0) {\n      this.error.preview = 'No Dev-New tasks found for assignment.';\n      this.loading.preview = false;\n      return;\n    }\n    this.taskService.getAutoAssignSuggestions(this.currentIterationPath).subscribe({\n      next: suggestions => {\n        console.log('Got standard suggestions (basic fallback):', suggestions);\n        // Check if we have any suggestions from the API\n        if (Object.keys(suggestions).length > 0) {\n          this.assignPreviewSuggestions = suggestions;\n          // Filter tasks to only include those in the suggestions\n          const suggestedTaskIds = Object.keys(suggestions).map(id => parseInt(id));\n          this.assignPreviewTasks = allDevNewTasks.filter(task => suggestedTaskIds.includes(task.id));\n        }\n        // If we still don't have tasks to assign, use ALL Dev-New tasks\n        if (this.assignPreviewTasks.length === 0) {\n          console.log('No task suggestions matched. Using all Dev-New tasks for assignment.');\n          // Include all Dev-New tasks, prioritizing unassigned ones\n          this.assignPreviewTasks = [...allDevNewTasks];\n          // Create simple suggestions for all tasks\n          if (this.assignPreviewTasks.length > 0) {\n            this.assignPreviewSuggestions = {};\n            // Get available team members\n            let availableMembers = this.filteredTeamMembers.map(m => m.displayName).filter(Boolean);\n            // If no filtered members, use unfiltered members\n            if (availableMembers.length === 0 && this.teamMembers.length > 0) {\n              availableMembers = this.teamMembers.filter(m => typeof m === 'object').map(m => m.displayName).filter(Boolean);\n            }\n            // Fallback if still no members\n            if (availableMembers.length === 0) {\n              availableMembers = ['Default Assignee'];\n            }\n            // Assign members to tasks in a round-robin fashion\n            this.assignPreviewTasks.forEach((task, index) => {\n              const memberIndex = index % availableMembers.length;\n              const member = availableMembers[memberIndex];\n              this.assignPreviewSuggestions[task.id] = `${member} (basic fallback assignment)`;\n            });\n          }\n        }\n        // Final validation\n        if (this.assignPreviewTasks.length === 0) {\n          this.error.preview = 'No tasks available for assignment. Check if there are Dev-New tasks in the current iteration.';\n        }\n        this.loading.preview = false;\n      },\n      error: err => {\n        // If API call fails, still try to assign tasks based on team members\n        console.error('Failed to load auto-assign suggestions:', err);\n        // Use all Dev-New tasks\n        this.assignPreviewTasks = [...allDevNewTasks];\n        this.assignPreviewSuggestions = {};\n        // Get team members to use for assignment\n        let availableMembers = this.filteredTeamMembers.map(m => m.displayName).filter(Boolean);\n        if (availableMembers.length === 0 && this.teamMembers.length > 0) {\n          availableMembers = this.teamMembers.filter(m => typeof m === 'object').map(m => m.displayName).filter(Boolean);\n        }\n        if (availableMembers.length === 0) {\n          availableMembers = ['Default Assignee'];\n        }\n        // Assign all tasks\n        this.assignPreviewTasks.forEach((task, index) => {\n          const memberIndex = index % availableMembers.length;\n          const member = availableMembers[memberIndex];\n          this.assignPreviewSuggestions[task.id] = `${member} (error recovery assignment)`;\n        });\n        this.loading.preview = false;\n      }\n    });\n  }\n  /**\r\n   * Check if there are valid assignment suggestions\r\n   */\n  hasAssignmentSuggestions() {\n    return this.assignPreviewSuggestions && Object.keys(this.assignPreviewSuggestions).length > 0;\n  }\n  /**\r\n   * Cancel auto-assign preview and close the modal\r\n   */\n  cancelAutoAssignPreview() {\n    this.showingPreview = false;\n    this.assignPreviewTasks = [];\n    this.assignPreviewSuggestions = {};\n    this.error.preview = null;\n  }\n  /**\r\n   * Confirm and perform the auto-assignments\r\n   */\n  confirmAutoAssign() {\n    this.loading.autoAssign = true;\n    this.error.autoAssign = null;\n    // Normalize the path for consistent handling\n    const normalizedPath = this.currentIterationPath.replace(/\\\\\\\\/g, '\\\\');\n    const assignmentPromises = [];\n    let assignmentCount = 0;\n    // For each task with a suggestion, create an assignment\n    for (const task of this.assignPreviewTasks) {\n      if (this.assignPreviewSuggestions[task.id]) {\n        const developerName = this.extractDeveloperName(this.assignPreviewSuggestions[task.id]);\n        console.log(`Assigning task #${task.id} (${task.title}) to ${developerName}`);\n        assignmentPromises.push(this.taskService.assignTask(task.id, developerName));\n        assignmentCount++;\n      }\n    }\n    // If we have assignments to make, execute them all in parallel\n    if (assignmentPromises.length > 0) {\n      forkJoin(assignmentPromises).subscribe({\n        next: () => {\n          // Hide the preview after successful assignment\n          this.showingPreview = false;\n          // Refresh the task list with normalized path\n          this.loadTasks();\n          // Also refresh the task counts to show updated workload\n          this.loadTeamMemberTaskCounts();\n          // Show success message\n          this.showSuccessMessage(`Successfully assigned ${assignmentCount} tasks.`);\n          this.loading.autoAssign = false;\n        },\n        error: err => {\n          this.error.autoAssign = `Error assigning tasks: ${err.message}`;\n          this.loading.autoAssign = false;\n        }\n      });\n    } else {\n      this.loading.autoAssign = false;\n      this.error.preview = \"No tasks available for assignment.\";\n    }\n  }\n  /**\r\n   * Extract only the developer name from a suggestion string\r\n   * Example: \"John Doe (past expertise)\" -> \"John Doe\"\r\n   */\n  extractDeveloperName(suggestion) {\n    if (!suggestion) return '';\n    // Match everything before the opening parenthesis\n    const match = suggestion.match(/^(.+?)\\s*\\(/);\n    if (match && match[1]) {\n      return match[1].trim();\n    }\n    // If no parenthesis found, return the whole string\n    return suggestion.trim();\n  }\n  /**\r\n   * Extract just the explanation part from a suggestion string\r\n   * Example: \"John Doe (past expertise in Bug tasks)\" -> \"past expertise in Bug tasks\"\r\n   */\n  extractLogicExplanation(suggestion) {\n    if (!suggestion) return '';\n    // Match everything between parentheses\n    const match = suggestion.match(/\\(([^)]+)\\)/);\n    if (match && match[1]) {\n      return match[1].trim();\n    }\n    return '';\n  }\n  /**\r\n   * Count assignments by specific reason keyword\r\n   * @param reasonType The type of reason to count ('expertise', 'completed', 'workload', or 'default')\r\n   * @returns The number of assignments made with that reason\r\n   */\n  getAssignmentsByReason(reasonType) {\n    if (!this.assignPreviewSuggestions) return 0;\n    const suggestions = Object.values(this.assignPreviewSuggestions);\n    // Map reason types to keywords that might appear in the explanation\n    const reasonKeywords = {\n      'expertise': ['expertise', 'expert'],\n      'completed': ['completed', 'recently completed'],\n      'workload': ['workload', 'least assigned', 'lowest'],\n      'default': ['default assignment', 'could not determine']\n    };\n    // Get the keywords for the requested reason type\n    const keywords = reasonKeywords[reasonType] || [];\n    // Count suggestions containing any of the keywords\n    return suggestions.filter(suggestion => {\n      const explanation = this.extractLogicExplanation(suggestion).toLowerCase();\n      return keywords.some(keyword => explanation.includes(keyword.toLowerCase()));\n    }).length;\n  }\n  /**\r\n   * Original auto-assign tasks method - replaced with preview workflow\r\n   */\n  autoAssignTasks() {\n    this.loading.autoAssign = true;\n    this.error.autoAssign = null;\n    this.taskService.autoAssignTasks(this.currentIterationPath).subscribe({\n      next: () => {\n        // Reload tasks and task counts to reflect changes\n        this.loadTasks();\n        this.loadTeamMemberTaskCounts();\n        this.loading.autoAssign = false;\n      },\n      error: err => {\n        this.error.autoAssign = `Failed to auto-assign tasks: ${err.message}`;\n        this.loading.autoAssign = false;\n      }\n    });\n  }\n  openAssignModal(taskId) {\n    this.selectedTask = taskId;\n    this.selectedMember = '';\n    this.error.assign = null;\n    // Get the iteration path for this specific task - first try filtered tasks\n    let task = this.filteredTasks.find(t => t.id === taskId);\n    // If not found, check all tasks (in case this is accessing a non-filtered task)\n    if (!task) {\n      task = this.tasks.find(t => t.id === taskId);\n    }\n    if (task && task.iterationPath) {\n      // Fetch R&D team members specifically for this task's iteration path\n      this.loading.members = true;\n      this.teamService.getTeamMembersByTeam('RND', task.iterationPath).subscribe({\n        next: members => {\n          this.teamMembers = members;\n          this.loading.members = false;\n          // Filter to R&D team members\n          this.filterRnDTeamMembers();\n          // Load task counts after team members are loaded\n          if (task && task.iterationPath) {\n            this.loadTeamMemberTaskCountsForModal(task.iterationPath);\n          }\n        },\n        error: err => {\n          console.error(`Error loading R&D team members for iteration path ${task?.iterationPath ?? 'unknown'}:`, err);\n          this.error.members = `Failed to load team members: ${err.message}`;\n          this.loading.members = false;\n          // Fallback to regular team members if R&D team fetch fails\n          if (task && task.iterationPath) {\n            this.taskService.getTeamMembers(task.iterationPath).subscribe({\n              next: response => {\n                if (Array.isArray(response) && response.length > 0) {\n                  if (typeof response[0] === 'string') {\n                    // String array response\n                    const names = response;\n                    this.teamMembers = names.map((name, index) => ({\n                      id: `member-${index}`,\n                      displayName: name,\n                      uniqueName: '',\n                      currentWorkload: 0,\n                      isActive: true,\n                      email: '',\n                      team: this.applyTeamFilter ? this.teamName : ''\n                    }));\n                  } else {\n                    // TeamMember array response\n                    this.teamMembers = response;\n                  }\n                } else {\n                  this.teamMembers = [];\n                }\n                this.loading.members = false;\n                // Filter to R&D team members even with fallback response\n                this.filterRnDTeamMembers();\n                if (task && task.iterationPath) {\n                  this.loadTeamMemberTaskCountsForModal(task.iterationPath);\n                }\n              },\n              error: fallbackErr => {\n                console.error(`Error loading fallback team members:`, fallbackErr);\n                this.error.members = `Failed to load team members: ${fallbackErr.message}`;\n                this.loading.members = false;\n              }\n            });\n          } else {\n            console.error('Cannot load team members: task or iterationPath is undefined');\n            this.loading.members = false;\n          }\n        }\n      });\n    } else {\n      // Ensure we have team members loaded before showing the modal\n      if (this.filteredTeamMembers.length === 0 && !this.loading.members) {\n        this.loadTeamMembers();\n      }\n      // Make sure we have task counts loaded\n      if (Object.keys(this.teamMemberTaskCounts).length === 0) {\n        this.loadTeamMemberTaskCounts();\n      }\n    }\n  }\n  /**\r\n   * Load task counts specifically for the modal dialogue\r\n   * This ensures counts are up-to-date when assigning tasks\r\n   */\n  loadTeamMemberTaskCountsForModal(iterationPath) {\n    this.loading.taskCounts = true;\n    // Normalize the iteration path\n    const normalizedPath = iterationPath.replace(/\\\\\\\\/g, '\\\\');\n    this.taskService.getTeamMemberTaskCounts(normalizedPath).subscribe({\n      next: counts => {\n        this.teamMemberTaskCounts = counts;\n        this.loading.taskCounts = false;\n        console.log('Loaded team member task counts for modal:', this.teamMemberTaskCounts);\n      },\n      error: err => {\n        console.error('Error loading team member task counts for modal:', err);\n        this.loading.taskCounts = false;\n      }\n    });\n  }\n  cancelAssign() {\n    this.selectedTask = null;\n    this.selectedMember = '';\n    this.error.assign = null;\n    this.loading.assign = false;\n  }\n  /**\r\n   * Get CSS class for priority badge\r\n   * @param priority Priority value (number or string)\r\n   * @returns CSS class name\r\n   */\n  getPriorityClass(priority) {\n    // Convert priority to number if it's a string\n    const priorityNum = typeof priority === 'string' ? parseInt(priority, 10) : priority;\n    if (isNaN(priorityNum)) {\n      return 'bg-secondary'; // Default for invalid priority\n    }\n\n    switch (priorityNum) {\n      case 1:\n        return 'bg-danger';\n      case 2:\n        return 'bg-warning text-dark';\n      case 3:\n        return 'bg-info text-dark';\n      case 4:\n        return 'bg-success';\n      default:\n        return 'bg-secondary';\n    }\n  }\n  /**\r\n   * Get CSS class for status badge\r\n   * @param status Status string or undefined\r\n   * @returns CSS class name\r\n   */\n  getStatusClass(status) {\n    if (!status) {\n      return 'status-to-do'; // Default for undefined status\n    }\n\n    const statusLower = status.toLowerCase();\n    // Return the appropriate custom status class based on requested colors\n    if (statusLower === 'active') {\n      return 'status-active'; // Yellow\n    } else if (statusLower === 'completed' || statusLower === 'done' || statusLower === 'closed' || statusLower === 'dev complete') {\n      return 'status-dev-complete'; // Green\n    } else if (statusLower === 'blocked') {\n      return 'status-blocked'; // Red\n    } else if (statusLower === 'dev-new' || statusLower === 'dev new') {\n      return 'status-dev-new'; // Blue\n    } else if (statusLower === 'code review') {\n      return 'status-code-review'; // Purple\n    } else if (statusLower === 'proposed') {\n      return 'status-proposed'; // Gray\n    } else if (statusLower === 'planned') {\n      return 'status-planned'; // Orange\n    } else if (statusLower === 'resolved') {\n      return 'status-resolved'; // Teal\n    } else if (statusLower.includes('progress')) {\n      return 'status-in-progress'; // Cyan\n    } else if (statusLower === 'to do' || statusLower === 'new') {\n      return 'status-to-do'; // Gray\n    } else {\n      return 'status-to-do'; // Default for any other status\n    }\n  }\n  /**\r\n   * Get CSS class for team member workload indicator\r\n   * @param workload Current workload value\r\n   * @returns CSS class name\r\n   */\n  getTeamMemberWorkloadClass(workload) {\n    if (workload === 0) {\n      return 'bg-secondary';\n    } else if (workload < 3) {\n      return 'bg-success';\n    } else if (workload < 7) {\n      return 'bg-warning text-dark';\n    } else {\n      return 'bg-danger';\n    }\n  }\n  /**\r\n   * Get the progress bar class based on workload\r\n   * @param workload Current workload\r\n   * @returns Bootstrap progress bar class\r\n   */\n  getProgressBarClass(workload) {\n    if (workload === 0) {\n      return 'bg-secondary';\n    } else if (workload < 3) {\n      return 'bg-success';\n    } else if (workload < 7) {\n      return 'bg-warning';\n    } else {\n      return 'bg-danger';\n    }\n  }\n  /**\r\n   * Calculate workload as a percentage (for progress bar width)\r\n   * @param workload Current workload\r\n   * @returns Percentage value (0-100)\r\n   */\n  getWorkloadPercentage(workload) {\n    // Using 10 as maximum reasonable workload\n    const maxWorkload = 10;\n    return Math.min(100, workload / maxWorkload * 100);\n  }\n  /**\r\n   * Handle changing the iteration path\r\n   * @param iterationPath The new iteration path\r\n   */\n  changeIterationPath(iterationPath) {\n    console.log(`Changing iteration path to: ${iterationPath}`);\n    if (this.currentIterationPath === iterationPath) {\n      console.log('Iteration path unchanged, skipping reload');\n      return;\n    }\n    // Update both the current and manual iteration paths\n    this.currentIterationPath = iterationPath;\n    this.manualIterationPath = iterationPath;\n    // For backward compatibility, trigger the search (load data)\n    this.searchClicked();\n  }\n  /**\r\n   * Get the title of the currently selected task\r\n   * @returns The task title or a fallback message\r\n   */\n  getSelectedTaskTitle() {\n    if (this.selectedTask === null) {\n      return 'No task selected';\n    }\n    const selectedTaskId = this.selectedTask;\n    // First try to find in filtered tasks\n    let task = this.filteredTasks.find(t => t.id === selectedTaskId);\n    // If not found (could be a non-R&D task), look in all tasks\n    if (!task) {\n      task = this.tasks.find(t => t.id === selectedTaskId);\n    }\n    return task ? task.title : 'Unknown Task';\n  }\n  /**\r\n   * Get the task count for a specific team member\r\n   * @param memberName The name of the team member\r\n   * @returns The number of tasks assigned to that member\r\n   */\n  getTaskCount(memberName) {\n    if (!memberName) {\n      console.warn('Called getTaskCount with empty memberName');\n      return 0;\n    }\n    // First check if we have task counts from the API\n    if (Object.keys(this.teamMemberTaskCounts).length > 0) {\n      // Look for an exact match\n      if (this.teamMemberTaskCounts[memberName] !== undefined) {\n        return this.teamMemberTaskCounts[memberName];\n      }\n      // Try case-insensitive match\n      const key = Object.keys(this.teamMemberTaskCounts).find(k => k && k.toLowerCase() === memberName.toLowerCase());\n      if (key) {\n        return this.teamMemberTaskCounts[key];\n      }\n    }\n    // Fall back to the currentWorkload from team members\n    const member = this.teamMembers.find(m => typeof m === 'object' && m.displayName && m.displayName.toLowerCase() === memberName.toLowerCase());\n    return member && typeof member === 'object' ? member.currentWorkload : 0;\n  }\n  /**\r\n   * Get a list of all tasks with Dev-New status\r\n   * @returns List of Dev-New tasks\r\n   */\n  getDevNewTasks() {\n    return this.filteredTasks.filter(task => {\n      if (!task.status) return false;\n      // Normalize status by removing spaces, hyphens, and converting to lowercase\n      const normalizedStatus = task.status.toLowerCase().replace(/[\\s\\-]/g, '');\n      // Use the same broad matching criteria as in showAutoAssignPreview\n      return normalizedStatus === 'devnew' || normalizedStatus === 'newdev' || normalizedStatus.includes('devnew') || normalizedStatus.includes('newdev') || normalizedStatus.includes('developmentnew') || normalizedStatus.includes('newdevelopment');\n    });\n  }\n  /**\r\n   * Get a list of unassigned Dev-New tasks\r\n   * @returns List of unassigned Dev-New tasks\r\n   */\n  getUnassignedDevNewTasks() {\n    // Use our improved getDevNewTasks method and filter for unassigned\n    return this.getDevNewTasks().filter(task => !task.assignedTo);\n  }\n  /**\r\n   * Get a summary of task status distribution\r\n   * @returns Array of status counts\r\n   */\n  getStatusDistribution() {\n    const statusCounts = {};\n    this.filteredTasks.forEach(task => {\n      const status = task.status || 'Unknown';\n      statusCounts[status] = (statusCounts[status] || 0) + 1;\n    });\n    return Object.entries(statusCounts).map(([status, count]) => ({\n      status,\n      count\n    })).sort((a, b) => b.count - a.count);\n  }\n  /**\r\n   * Filter tasks to only show those assigned to R&D team members\r\n   */\n  filterTasksByRnDTeamMembers() {\n    // If team filter is not applied, show all tasks\n    if (!this.applyTeamFilter) {\n      this.filteredTasks = this.tasks;\n      console.log(`Team filter disabled. Showing all ${this.tasks.length} tasks.`);\n      return;\n    }\n    // First ensure we have filtered team members\n    if (this.filteredTeamMembers.length === 0) {\n      this.filterRnDTeamMembers();\n    }\n    // Get a list of display names of filtered R&D team members\n    const rndMemberNames = this.filteredTeamMembers.map(member => member.displayName.toLowerCase());\n    console.log('R&D team member names for task filtering:', rndMemberNames);\n    // Filter tasks to only include those assigned to R&D members and unassigned tasks\n    this.filteredTasks = this.tasks.filter(task => {\n      // Always include unassigned tasks\n      if (!task.assignedTo) {\n        return true;\n      }\n      // Check if task is assigned to an R&D team member\n      return rndMemberNames.includes(task.assignedTo.toLowerCase());\n    });\n    console.log(`Filtered ${this.tasks.length} tasks down to ${this.filteredTasks.length} tasks assigned to R&D members or unassigned`);\n  }\n  /**\r\n   * Generates an Azure DevOps URL for a specific work item ID\r\n   * @param taskId The ID of the work item to link to\r\n   * @returns A URL to the work item in Azure DevOps\r\n   */\n  getAzureDevOpsTaskUrl(taskId) {\n    return `${this.azureDevOpsUrl}/${this.organization}/${this.project}/_workitems/edit/${taskId}/`;\n  }\n  /**\r\n   * Open task in Azure DevOps in a new tab\r\n   * @param taskId The ID of the task to open\r\n   * @param event The click event\r\n   */\n  openTaskInAzureDevOps(taskId, event) {\n    // Prevent default behavior to avoid interference with other actions\n    event.preventDefault();\n    event.stopPropagation();\n    // Open task in new tab\n    const url = this.getAzureDevOpsTaskUrl(taskId);\n    window.open(url, '_blank');\n    console.log(`Opening task ${taskId} in Azure DevOps`);\n  }\n  /**\r\n   * Show popup with tasks for a specific team member\r\n   * @param event Click event\r\n   * @param memberName Name of the team member\r\n   */\n  showMemberTasks(event, memberName) {\n    // Prevent event propagation to avoid immediate closing\n    event.preventDefault();\n    event.stopPropagation();\n    console.log(`Showing tasks for ${memberName}, fetching from ${this.tasks.length} total tasks`);\n    // Get tasks for this member - search in all tasks, not just filtered tasks\n    this.selectedMemberTasks = this.tasks.filter(task => task.assignedTo && task.assignedTo.toLowerCase() === memberName.toLowerCase());\n    this.selectedMemberName = memberName;\n    // Calculate popup position - position it near the clicked element but ensure it's visible\n    const clickedElement = event.currentTarget;\n    const rect = clickedElement.getBoundingClientRect();\n    // Adjust position to ensure popup is visible within viewport\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const popupWidth = 400; // Same as in CSS\n    const popupHeight = Math.min(300, this.selectedMemberTasks.length * 50 + 100); // Rough estimate\n    // Position popup below the badge, but adjust if near viewport edges\n    let left = rect.left;\n    if (left + popupWidth > viewportWidth) {\n      left = Math.max(10, viewportWidth - popupWidth - 10);\n    }\n    let top = rect.bottom + window.scrollY;\n    if (top + popupHeight > viewportHeight + window.scrollY) {\n      // Position above if not enough space below\n      top = Math.max(10 + window.scrollY, rect.top + window.scrollY - popupHeight);\n    }\n    this.popupPosition = {\n      top,\n      left\n    };\n    // Make sure popup is shown\n    this.showTaskPopup = true;\n    console.log(`Showing tasks popup for ${memberName}: ${this.selectedMemberTasks.length} tasks at position:`, this.popupPosition);\n  }\n  /**\r\n   * Close the task popup when clicking outside\r\n   */\n  closePopup(event) {\n    if (!event) return;\n    // Don't close if this is the initial click that opened the popup or modal\n    if (event.target && (event.target.closest('.task-count-badge') || event.target.closest('.member-name-link'))) {\n      return;\n    }\n    // Close task popup if it's open and click is outside\n    if (this.showTaskPopup && !event.target.closest('.task-popup')) {\n      this.showTaskPopup = false;\n    }\n    // Close member modal if it's open and click is outside\n    if (this.showMemberModal && !event.target.closest('.member-modal-content')) {\n      this.closeMemberModal();\n    }\n  }\n  /**\r\n   * Prevent popup from closing when clicking inside it\r\n   * @param event Click event\r\n   */\n  keepPopupOpen(event) {\n    event.stopPropagation();\n  }\n  /**\r\n   * Show modal with tasks for a specific team member\r\n   * @param event Click event\r\n   * @param memberName Name of the team member\r\n   */\n  showMemberTasksModal(event, memberName) {\n    // Prevent default behavior\n    event.preventDefault();\n    // Store the last focused element for when we close the modal\n    this.lastFocusedElement = document.activeElement;\n    console.log(`Showing modal for ${memberName}, fetching from ${this.tasks.length} total tasks`);\n    // Set loading state\n    this.loading.memberTasks = true;\n    this.error.memberTasks = null;\n    // Clear previous data\n    this.selectedModalMemberTasks = [];\n    this.selectedModalMemberName = memberName;\n    // Show the modal\n    this.showMemberModal = true;\n    // Get tasks for this member - search in all tasks, not just filtered tasks\n    // We'll simulate an async call to match requirements\n    setTimeout(() => {\n      this.selectedModalMemberTasks = this.tasks.filter(task => task.assignedTo && task.assignedTo.toLowerCase() === memberName.toLowerCase());\n      this.loading.memberTasks = false;\n      // Focus the close button in the modal for accessibility\n      setTimeout(() => {\n        const closeButton = document.querySelector('.member-modal-close');\n        if (closeButton) {\n          closeButton.focus();\n        }\n      }, 100);\n      console.log(`Loaded ${this.selectedModalMemberTasks.length} tasks for ${memberName} in modal`);\n    }, 500); // Simulate network delay\n  }\n  /**\r\n   * Close the member tasks modal\r\n   */\n  closeMemberModal() {\n    this.showMemberModal = false;\n    // Return focus to the last focused element\n    setTimeout(() => {\n      if (this.lastFocusedElement) {\n        this.lastFocusedElement.focus();\n      }\n    }, 100);\n  }\n  /**\r\n   * Handle keyboard interaction in the modal for accessibility\r\n   * @param event Keyboard event\r\n   */\n  handleModalKeydown(event) {\n    // Close modal on Escape key\n    if (event.key === 'Escape') {\n      this.closeMemberModal();\n    }\n    // Trap focus inside the modal for accessibility\n    if (event.key === 'Tab') {\n      const modal = document.querySelector('.member-modal');\n      if (!modal) return;\n      const focusableElements = modal.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n      if (focusableElements.length === 0) return;\n      const firstElement = focusableElements[0];\n      const lastElement = focusableElements[focusableElements.length - 1];\n      if (event.shiftKey && document.activeElement === firstElement) {\n        // If shift+tab and focus is on first element, move to last element\n        event.preventDefault();\n        lastElement.focus();\n      } else if (!event.shiftKey && document.activeElement === lastElement) {\n        // If tab and focus is on last element, move to first element\n        event.preventDefault();\n        firstElement.focus();\n      }\n    }\n  }\n  static {\n    this.ɵfac = function TaskDistributionComponent_Factory(t) {\n      return new (t || TaskDistributionComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.TeamService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskDistributionComponent,\n      selectors: [[\"app-task-distribution\"]],\n      hostBindings: function TaskDistributionComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_click_HostBindingHandler($event) {\n            return ctx.closePopup($event);\n          }, false, i0.ɵɵresolveDocument);\n        }\n      },\n      decls: 124,\n      vars: 54,\n      consts: [[1, \"container-fluid\", \"p-4\"], [1, \"row\", \"mb-4\"], [1, \"col-12\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mb-0\"], [1, \"search-section\"], [1, \"input-group-container\"], [1, \"filter-checkbox\"], [\"type\", \"checkbox\", \"id\", \"applyTeamFilter\", 1, \"form-check-input\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"for\", \"applyTeamFilter\", 1, \"form-check-label\"], [1, \"search-input\", \"team-input\"], [\"type\", \"text\", \"placeholder\", \"Team Name\", 1, \"form-control\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [1, \"text-muted\"], [1, \"search-input\"], [\"type\", \"text\", \"placeholder\", \"Iteration Path\", \"list\", \"iterationPathsList\", 1, \"form-control\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"id\", \"iterationPathsList\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", \"search-btn\", 3, \"disabled\", \"click\"], [1, \"bi\", \"bi-search\", \"me-1\"], [4, \"ngIf\"], [1, \"action-buttons\"], [1, \"btn\", \"btn-primary\", \"auto-assign-btn\", 3, \"disabled\", \"click\"], [1, \"bi\", \"bi-magic\"], [1, \"text-muted\", \"mt-2\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"id\", \"taskTabs\", \"role\", \"tablist\", 1, \"nav\", \"nav-tabs\", \"mb-4\"], [\"role\", \"presentation\", 1, \"nav-item\"], [\"id\", \"task-distribution-tab\", \"data-bs-toggle\", \"tab\", \"data-bs-target\", \"#task-distribution\", \"type\", \"button\", \"role\", \"tab\", \"aria-controls\", \"task-distribution\", \"aria-selected\", \"true\", 1, \"nav-link\", \"active\", 3, \"click\"], [1, \"bi\", \"bi-list-task\", \"me-2\"], [\"id\", \"task-workload-tab\", \"data-bs-toggle\", \"tab\", \"data-bs-target\", \"#task-workload\", \"type\", \"button\", \"role\", \"tab\", \"aria-controls\", \"task-workload\", \"aria-selected\", \"false\", 1, \"nav-link\", 3, \"click\"], [1, \"bi\", \"bi-bar-chart-line\", \"me-2\"], [\"id\", \"taskTabsContent\", 1, \"tab-content\"], [\"id\", \"task-distribution\", \"role\", \"tabpanel\", \"aria-labelledby\", \"task-distribution-tab\", 1, \"tab-pane\", \"fade\", \"show\", \"active\"], [1, \"row\"], [1, \"card\"], [1, \"card-body\"], [\"class\", \"text-center py-4\", 4, \"ngIf\"], [\"class\", \"table-responsive\", 4, \"ngIf\"], [\"id\", \"task-workload\", \"role\", \"tabpanel\", \"aria-labelledby\", \"task-workload-tab\", 1, \"tab-pane\", \"fade\"], [1, \"card-header\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"btn\", \"btn-outline-primary\", \"btn-sm\", 3, \"click\"], [1, \"bi\", \"bi-arrow-clockwise\", \"me-1\"], [\"class\", \"row\", 4, \"ngIf\"], [\"tabindex\", \"-1\", 1, \"modal\", 3, \"ngClass\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", 1, \"btn-close\", 3, \"click\"], [1, \"modal-body\"], [\"class\", \"alert alert-danger mb-3\", 4, \"ngIf\"], [1, \"mb-4\"], [\"for\", \"teamMemberSelect\", 1, \"form-label\", \"fw-bold\", \"mb-2\"], [1, \"team-member-options\"], [\"class\", \"form-check mb-2 border p-2 rounded\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"class\", \"modal-backdrop fade show\", 4, \"ngIf\"], [1, \"modal-dialog\", \"modal-lg\"], [1, \"modal-header\", \"bg-primary\", \"text-white\"], [1, \"bi\", \"bi-magic\", \"me-2\"], [\"type\", \"button\", 1, \"btn-close\", \"btn-close-white\", 3, \"click\"], [1, \"alert\", \"alert-primary\", \"mb-3\"], [1, \"bi\", \"bi-info-circle\", \"me-2\"], [\"class\", \"alert alert-info\", 4, \"ngIf\"], [\"class\", \"mt-3\", 4, \"ngIf\"], [\"class\", \"task-popup\", 3, \"top\", \"left\", \"click\", 4, \"ngIf\"], [\"class\", \"member-modal-backdrop\", 3, \"click\", 4, \"ngIf\"], [3, \"value\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-warning\"], [1, \"text-center\", \"py-4\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 1, \"task-id-link\", 3, \"click\"], [1, \"badge\", \"rounded-pill\", 3, \"ngClass\"], [1, \"d-flex\", \"align-items-center\"], [\"class\", \"me-2\", 4, \"ngIf\"], [\"class\", \"text-muted me-2\", 4, \"ngIf\"], [\"class\", \"ms-1 suggestion-box\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"click\"], [1, \"bi\", \"bi-person-plus\"], [1, \"me-2\"], [1, \"text-muted\", \"me-2\"], [1, \"ms-1\", \"suggestion-box\"], [1, \"text-primary\"], [1, \"bi\", \"bi-lightbulb-fill\"], [\"class\", \"col-md-3 col-sm-6 mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\", \"col-sm-6\", \"mb-3\"], [1, \"card\", \"team-member-card\", \"h-100\", 3, \"ngClass\"], [1, \"card-title\"], [\"href\", \"#\", 1, \"member-name-link\", 3, \"click\"], [1, \"workload-stats\", \"mt-2\"], [1, \"badge\", \"rounded-pill\", \"task-count-badge\", 2, \"cursor\", \"pointer\", 3, \"ngClass\", \"click\"], [1, \"progress\", \"mt-2\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"10\", 1, \"progress-bar\", 3, \"ngClass\"], [\"class\", \"text-muted mt-2 small\", 4, \"ngIf\"], [1, \"text-muted\", \"mt-2\", \"small\"], [1, \"bi\", \"bi-envelope\"], [1, \"alert\", \"alert-danger\", \"mb-3\"], [1, \"mb-3\"], [1, \"form-label\", \"fw-bold\"], [1, \"py-2\", \"px-3\", \"bg-light\", \"rounded\"], [1, \"form-check\", \"mb-2\", \"border\", \"p-2\", \"rounded\"], [\"type\", \"radio\", \"name\", \"teamMemberRadio\", 1, \"form-check-input\", 3, \"id\", \"value\", \"ngModel\", \"ngModelChange\"], [1, \"form-check-label\", \"w-100\"], [1, \"member-name\"], [1, \"modal-backdrop\", \"fade\", \"show\"], [1, \"mt-2\"], [1, \"alert\", \"alert-info\"], [1, \"mt-3\"], [\"id\", \"debugAccordion\", 1, \"accordion\"], [1, \"accordion-item\"], [\"id\", \"headingOne\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseOne\", \"aria-expanded\", \"false\", \"aria-controls\", \"collapseOne\", 1, \"accordion-button\", \"collapsed\"], [1, \"bi\", \"bi-bug\", \"me-2\"], [\"id\", \"collapseOne\", \"aria-labelledby\", \"headingOne\", \"data-bs-parent\", \"#debugAccordion\", 1, \"accordion-collapse\", \"collapse\"], [1, \"accordion-body\"], [1, \"table\", \"table-sm\", \"table-bordered\"], [1, \"mt-4\"], [1, \"list-unstyled\", \"row\"], [1, \"col-md-6\", \"mb-2\"], [1, \"bi\", \"bi-trophy\", \"text-warning\", \"me-2\"], [1, \"bi\", \"bi-check-circle\", \"text-success\", \"me-2\"], [1, \"bi\", \"bi-speedometer2\", \"text-info\", \"me-2\"], [1, \"bi\", \"bi-person\", \"text-secondary\", \"me-2\"], [1, \"mt-3\", \"p-3\", \"bg-light\", \"rounded\"], [1, \"col-md-3\"], [1, \"d-flex\", \"align-items-center\", \"mb-2\"], [1, \"badge\", \"bg-info\", \"text-dark\"], [1, \"badge\", \"bg-secondary\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [\"class\", \"badge bg-warning text-dark\", 4, \"ngIf\"], [\"class\", \"text-muted small\", 4, \"ngIf\"], [1, \"badge\", \"bg-warning\", \"text-dark\"], [1, \"badge\", \"bg-success\", \"me-2\"], [\"class\", \"ms-2 badge bg-warning text-dark\", 4, \"ngIf\"], [1, \"ms-2\", \"badge\", \"bg-warning\", \"text-dark\"], [1, \"text-muted\", \"small\"], [1, \"task-popup\", 3, \"click\"], [1, \"task-popup-header\"], [1, \"task-popup-body\"], [\"class\", \"text-center py-3\", 4, \"ngIf\"], [\"class\", \"task-list\", 4, \"ngIf\"], [1, \"text-center\", \"py-3\"], [1, \"text-muted\", \"mb-0\"], [1, \"task-list\"], [\"class\", \"task-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"task-item\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-start\"], [1, \"ms-2\"], [1, \"status-badge\", 3, \"ngClass\"], [1, \"member-modal-backdrop\", 3, \"click\"], [\"role\", \"dialog\", \"aria-modal\", \"true\", \"tabindex\", \"-1\", 1, \"member-modal\", 3, \"click\", \"keydown\"], [1, \"member-modal-content\"], [1, \"member-modal-header\"], [\"id\", \"memberModalTitle\", 1, \"member-modal-title\"], [1, \"bi\", \"bi-person-badge\", \"me-2\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"member-modal-close\", 3, \"click\"], [1, \"bi\", \"bi-x\", 2, \"font-size\", \"1.5rem\"], [\"class\", \"member-modal-loading\", 4, \"ngIf\"], [\"class\", \"member-modal-error\", 4, \"ngIf\"], [\"class\", \"px-4 py-3\", 4, \"ngIf\"], [1, \"member-modal-footer\"], [\"type\", \"button\", 1, \"member-modal-btn\", \"primary\", 3, \"click\"], [1, \"member-modal-loading\"], [\"role\", \"status\", 1, \"spinner\"], [1, \"loading-text\"], [1, \"member-modal-error\"], [1, \"bi\", \"bi-exclamation-circle\", \"me-2\"], [1, \"px-4\", \"py-3\"], [\"class\", \"member-task-list\", 4, \"ngIf\"], [1, \"bi\", \"bi-inbox\", \"text-muted\", 2, \"font-size\", \"3rem\"], [1, \"mt-3\", \"text-muted\"], [1, \"member-task-list\"], [1, \"task-header\"], [\"href\", \"#\", 1, \"task-id\", 3, \"click\"], [1, \"task-status\", 3, \"ngClass\"], [1, \"task-title\"]],\n      template: function TaskDistributionComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\", 4);\n          i0.ɵɵtext(5, \"Task Distribution\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\")(7, \"div\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"input\", 8);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskDistributionComponent_Template_input_ngModelChange_10_listener($event) {\n            return ctx.applyTeamFilter = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"label\", 9);\n          i0.ɵɵtext(12, \"Apply Team Filter\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 10)(14, \"input\", 11);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskDistributionComponent_Template_input_ngModelChange_14_listener($event) {\n            return ctx.teamName = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"small\", 12);\n          i0.ɵɵtext(16, \"TeamName\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 13)(18, \"input\", 14);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskDistributionComponent_Template_input_ngModelChange_18_listener($event) {\n            return ctx.manualIterationPath = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"small\", 12);\n          i0.ɵɵtext(20, \"IterationPath\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"datalist\", 15);\n          i0.ɵɵtemplate(22, TaskDistributionComponent_option_22_Template, 1, 1, \"option\", 16);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"button\", 17);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_23_listener() {\n            return ctx.searchClicked();\n          });\n          i0.ɵɵelement(24, \"i\", 18);\n          i0.ɵɵtemplate(25, TaskDistributionComponent_span_25_Template, 2, 0, \"span\", 19);\n          i0.ɵɵtemplate(26, TaskDistributionComponent_span_26_Template, 3, 0, \"span\", 19);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"div\", 20)(28, \"button\", 21);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_28_listener() {\n            return ctx.showAutoAssignPreview();\n          });\n          i0.ɵɵelement(29, \"i\", 22);\n          i0.ɵɵtemplate(30, TaskDistributionComponent_span_30_Template, 2, 0, \"span\", 19);\n          i0.ɵɵtemplate(31, TaskDistributionComponent_span_31_Template, 3, 0, \"span\", 19);\n          i0.ɵɵtemplate(32, TaskDistributionComponent_span_32_Template, 3, 0, \"span\", 19);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(33, \"p\", 23);\n          i0.ɵɵtext(34, \"Manage and assign tasks for the current sprint\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(35, TaskDistributionComponent_div_35_Template, 2, 1, \"div\", 24);\n          i0.ɵɵtemplate(36, TaskDistributionComponent_div_36_Template, 2, 1, \"div\", 25);\n          i0.ɵɵtemplate(37, TaskDistributionComponent_div_37_Template, 2, 1, \"div\", 24);\n          i0.ɵɵtemplate(38, TaskDistributionComponent_div_38_Template, 2, 1, \"div\", 24);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(39, \"ul\", 26)(40, \"li\", 27)(41, \"button\", 28);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_41_listener() {\n            return ctx.onTabChange(\"distribution\");\n          });\n          i0.ɵɵelement(42, \"i\", 29);\n          i0.ɵɵtext(43, \"Task Distribution \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(44, \"li\", 27)(45, \"button\", 30);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_45_listener() {\n            return ctx.onTabChange(\"workload\");\n          });\n          i0.ɵɵelement(46, \"i\", 31);\n          i0.ɵɵtext(47, \"Task Workload \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(48, \"div\", 32)(49, \"div\", 33)(50, \"div\", 34)(51, \"div\", 2)(52, \"div\", 35)(53, \"div\", 36);\n          i0.ɵɵtemplate(54, TaskDistributionComponent_div_54_Template, 4, 0, \"div\", 37);\n          i0.ɵɵtemplate(55, TaskDistributionComponent_div_55_Template, 2, 1, \"div\", 24);\n          i0.ɵɵtemplate(56, TaskDistributionComponent_div_56_Template, 3, 0, \"div\", 37);\n          i0.ɵɵtemplate(57, TaskDistributionComponent_div_57_Template, 16, 1, \"div\", 38);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(58, \"div\", 39)(59, \"div\", 34)(60, \"div\", 2)(61, \"div\", 35)(62, \"div\", 40)(63, \"h4\", 4);\n          i0.ɵɵtext(64, \"Team Workload\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(65, \"button\", 41);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_65_listener() {\n            ctx.loadTeamMembers();\n            return ctx.loadTeamMemberTaskCounts();\n          });\n          i0.ɵɵelement(66, \"i\", 42);\n          i0.ɵɵtext(67, \" Refresh Data \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(68, \"div\", 36);\n          i0.ɵɵtemplate(69, TaskDistributionComponent_div_69_Template, 4, 0, \"div\", 37);\n          i0.ɵɵtemplate(70, TaskDistributionComponent_div_70_Template, 2, 1, \"div\", 24);\n          i0.ɵɵtemplate(71, TaskDistributionComponent_div_71_Template, 3, 0, \"div\", 37);\n          i0.ɵɵtemplate(72, TaskDistributionComponent_div_72_Template, 2, 1, \"div\", 43);\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(73, \"div\", 44)(74, \"div\", 45)(75, \"div\", 46)(76, \"div\", 47)(77, \"h5\", 48);\n          i0.ɵɵtext(78, \"Assign Task\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(79, \"button\", 49);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_79_listener() {\n            return ctx.cancelAssign();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(80, \"div\", 50);\n          i0.ɵɵtemplate(81, TaskDistributionComponent_div_81_Template, 2, 1, \"div\", 51);\n          i0.ɵɵtemplate(82, TaskDistributionComponent_div_82_Template, 11, 2, \"div\", 19);\n          i0.ɵɵelementStart(83, \"div\", 52)(84, \"label\", 53);\n          i0.ɵɵtext(85, \"Select Team Member\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(86, \"div\", 54);\n          i0.ɵɵtemplate(87, TaskDistributionComponent_div_87_Template, 8, 7, \"div\", 55);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(88, \"div\", 56)(89, \"button\", 57);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_89_listener() {\n            return ctx.cancelAssign();\n          });\n          i0.ɵɵtext(90, \"Cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(91, \"button\", 58);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_91_listener() {\n            return ctx.assignTask();\n          });\n          i0.ɵɵtemplate(92, TaskDistributionComponent_span_92_Template, 2, 0, \"span\", 19);\n          i0.ɵɵtemplate(93, TaskDistributionComponent_span_93_Template, 3, 0, \"span\", 19);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵtemplate(94, TaskDistributionComponent_div_94_Template, 1, 0, \"div\", 59);\n          i0.ɵɵelementStart(95, \"div\", 44)(96, \"div\", 60)(97, \"div\", 46)(98, \"div\", 61)(99, \"h5\", 48);\n          i0.ɵɵelement(100, \"i\", 62);\n          i0.ɵɵtext(101, \" Auto-Assign Preview \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(102, \"button\", 63);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_102_listener() {\n            return ctx.cancelAutoAssignPreview();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(103, \"div\", 50);\n          i0.ɵɵtemplate(104, TaskDistributionComponent_div_104_Template, 2, 1, \"div\", 51);\n          i0.ɵɵelementStart(105, \"div\", 64);\n          i0.ɵɵelement(106, \"i\", 65);\n          i0.ɵɵelementStart(107, \"strong\");\n          i0.ɵɵtext(108, \"Preview Mode:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(109, \" Review AI-suggested assignments before confirming. No changes will be made until you click \\\"Confirm & Assign\\\". \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(110, TaskDistributionComponent_div_110_Template, 6, 0, \"div\", 37);\n          i0.ɵɵtemplate(111, TaskDistributionComponent_div_111_Template, 3, 0, \"div\", 66);\n          i0.ɵɵtemplate(112, TaskDistributionComponent_div_112_Template, 14, 4, \"div\", 67);\n          i0.ɵɵtemplate(113, TaskDistributionComponent_div_113_Template, 73, 5, \"div\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(114, \"div\", 56)(115, \"button\", 57);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_115_listener() {\n            return ctx.cancelAutoAssignPreview();\n          });\n          i0.ɵɵtext(116, \"Cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(117, \"button\", 58);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_117_listener() {\n            return ctx.confirmAutoAssign();\n          });\n          i0.ɵɵelement(118, \"i\", 62);\n          i0.ɵɵtemplate(119, TaskDistributionComponent_span_119_Template, 2, 0, \"span\", 19);\n          i0.ɵɵtemplate(120, TaskDistributionComponent_span_120_Template, 3, 0, \"span\", 19);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵtemplate(121, TaskDistributionComponent_div_121_Template, 1, 0, \"div\", 59);\n          i0.ɵɵtemplate(122, TaskDistributionComponent_div_122_Template, 8, 7, \"div\", 68);\n          i0.ɵɵtemplate(123, TaskDistributionComponent_div_123_Template, 15, 5, \"div\", 69);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngModel\", ctx.applyTeamFilter)(\"disabled\", ctx.loading.tasks || ctx.loading.members);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.teamName)(\"disabled\", ctx.loading.tasks || ctx.loading.members);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.manualIterationPath)(\"disabled\", ctx.loading.tasks || ctx.loading.members);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.iterationPaths);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.loading.tasks || ctx.loading.members);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.tasks && !ctx.loading.members);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.tasks || ctx.loading.members);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading.autoAssign || ctx.loading.preview);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.autoAssign && !ctx.loading.preview);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.preview);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.autoAssign);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.autoAssign);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.iterationPaths);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.tasks);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.members);\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.tasks);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.tasks);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.tasks && !ctx.error.tasks && ctx.tasks.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.tasks && !ctx.error.tasks && ctx.tasks.length > 0);\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.members);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.members);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.members && !ctx.error.members && ctx.filteredTeamMembers.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.members && !ctx.error.members && ctx.filteredTeamMembers.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleProp(\"display\", ctx.selectedTask !== null ? \"block\" : \"none\");\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(50, _c1, ctx.selectedTask !== null));\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.assign);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedTask !== null);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredTeamMembers);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.loading.assign || !ctx.selectedMember);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.assign);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.assign);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedTask !== null);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleProp(\"display\", ctx.showingPreview ? \"block\" : \"none\");\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(52, _c1, ctx.showingPreview));\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.preview);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.preview);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.preview && ctx.assignPreviewTasks.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.preview && ctx.assignPreviewTasks.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.preview && ctx.assignPreviewTasks.length > 0);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.loading.autoAssign || !ctx.assignPreviewTasks || ctx.assignPreviewTasks.length === 0 || !ctx.hasAssignmentSuggestions());\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.autoAssign);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.autoAssign);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showingPreview);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showTaskPopup);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showMemberModal);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n      styles: [\"[_nghost-%COMP%] {\\n  display: block;\\n  background-color: #e8eaf6;\\n}\\n\\n.container-fluid[_ngcontent-%COMP%], .container[_ngcontent-%COMP%] {\\n  background-color: #e8eaf6;\\n  padding-top: 1.5rem;\\n  padding-bottom: 1.5rem;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  margin-bottom: 1.5rem;\\n  color: #2c3e50;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  border-radius: 8px;\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n  transition: all 0.3s ease;\\n  background-color: #f5f7ff;\\n  margin-bottom: 20px;\\n}\\n.card[_ngcontent-%COMP%]:hover {\\n  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);\\n}\\n.card[_ngcontent-%COMP%]   .card-header[_ngcontent-%COMP%] {\\n  background-color: #c5cae9;\\n  color: #3949ab;\\n  font-weight: 600;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\\n  padding: 12px 16px;\\n}\\n.card[_ngcontent-%COMP%]   .card-body[_ngcontent-%COMP%] {\\n  background-color: #f5f7ff;\\n}\\n\\n@keyframes _ngcontent-%COMP%_fadeIn {\\n  from {\\n    opacity: 0;\\n    transform: translateY(10px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n.alert[_ngcontent-%COMP%], .card[_ngcontent-%COMP%] {\\n  animation: _ngcontent-%COMP%_fadeIn 0.3s ease-out;\\n}\\n\\n\\n.nav-tabs[_ngcontent-%COMP%] {\\n  border-bottom: 1px solid #c5cae9;\\n}\\n\\n.nav-tabs[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%] {\\n  border: none;\\n  color: #3949ab;\\n  font-weight: 500;\\n  padding: 10px 16px;\\n  margin-right: 4px;\\n  border-radius: 4px 4px 0 0;\\n  transition: all 0.2s ease;\\n}\\n\\n.nav-tabs[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover {\\n  background-color: rgba(57, 73, 171, 0.05);\\n  border-color: transparent;\\n}\\n\\n.nav-tabs[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%] {\\n  color: #3949ab;\\n  background-color: #fff;\\n  border-bottom: 3px solid #3949ab;\\n  font-weight: 600;\\n}\\n\\n.tab-content[_ngcontent-%COMP%] {\\n  padding: 20px 0;\\n}\\n\\n\\n.table-responsive[_ngcontent-%COMP%] {\\n  max-height: 450px;\\n  overflow-y: auto;\\n  background-color: #eef2ff;\\n  border-radius: 0.375rem;\\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);\\n}\\n\\n.table[_ngcontent-%COMP%] {\\n  font-size: 0.9rem;\\n  background-color: #eef2ff;\\n  margin-bottom: 0;\\n}\\n.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%] {\\n  position: sticky;\\n  top: 0;\\n  background-color: #c5cae9;\\n  z-index: 1;\\n}\\n.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  color: #3949ab;\\n  text-transform: uppercase;\\n  font-size: 0.75rem;\\n  letter-spacing: 0.5px;\\n  padding-top: 12px;\\n  padding-bottom: 12px;\\n  border-top: none;\\n  border-bottom: 2px solid #9fa8da;\\n}\\n.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%] {\\n  transition: background-color 0.2s;\\n  background-color: #e8eaf6;\\n}\\n.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even) {\\n  background-color: #d1d9ff;\\n}\\n.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover {\\n  background-color: #c5cae9;\\n}\\n.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr.table-primary[_ngcontent-%COMP%] {\\n  background-color: #bbdefb;\\n}\\n.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr.table-primary[_ngcontent-%COMP%]:hover {\\n  background-color: #90caf9;\\n}\\n.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  vertical-align: middle;\\n  padding: 0.75rem;\\n  border-color: #c5cae9;\\n}\\n\\n.suggestion-box[_ngcontent-%COMP%] {\\n  background-color: rgba(57, 73, 171, 0.05);\\n  padding: 8px 12px;\\n  border-radius: 4px;\\n  border-left: 3px solid #3949ab;\\n  font-size: 0.9rem;\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n\\n.team-member-card[_ngcontent-%COMP%] {\\n  transition: all 0.3s ease;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n  background-color: #f5f7ff;\\n}\\n.team-member-card[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-5px);\\n  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);\\n}\\n.team-member-card[_ngcontent-%COMP%]   .card-title[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  margin-bottom: 0.5rem;\\n  color: #3949ab;\\n}\\n\\n\\n.workload-indicator[_ngcontent-%COMP%] {\\n  position: relative;\\n  height: 24px;\\n  border-radius: 12px;\\n  background-color: #e8eaf6;\\n  overflow: hidden;\\n  margin-top: 10px;\\n}\\n\\n.workload-bar[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  z-index: 1;\\n}\\n\\n.workload-label[_ngcontent-%COMP%] {\\n  position: relative;\\n  z-index: 2;\\n  display: block;\\n  text-align: center;\\n  line-height: 24px;\\n  font-size: 0.8rem;\\n  font-weight: 600;\\n  color: #333;\\n}\\n\\n.low-workload[_ngcontent-%COMP%]   .workload-bar[_ngcontent-%COMP%] {\\n  background-color: #28a745;\\n}\\n\\n.medium-workload[_ngcontent-%COMP%]   .workload-bar[_ngcontent-%COMP%] {\\n  background-color: #ffc107;\\n}\\n\\n.high-workload[_ngcontent-%COMP%]   .workload-bar[_ngcontent-%COMP%] {\\n  background-color: #dc3545;\\n}\\n\\n.workload-stats[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-start;\\n  margin-bottom: 0.5rem;\\n}\\n.workload-stats[_ngcontent-%COMP%]   .badge[_ngcontent-%COMP%] {\\n  font-size: 0.8rem;\\n  padding: 5px 10px;\\n}\\n\\n.progress[_ngcontent-%COMP%] {\\n  height: 8px;\\n  background-color: #e8eaf6;\\n}\\n\\n\\n.modal-backdrop[_ngcontent-%COMP%] {\\n  opacity: 0.5;\\n}\\n\\n.modal-content[_ngcontent-%COMP%] {\\n  border-radius: 8px;\\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\\n  background-color: #f5f7ff;\\n}\\n\\n.modal-header[_ngcontent-%COMP%] {\\n  background-color: #c5cae9;\\n  color: #3949ab;\\n  border-bottom: 1px solid #9fa8da;\\n}\\n\\n.modal-footer[_ngcontent-%COMP%] {\\n  background-color: #f5f7ff;\\n  border-top: 1px solid #c5cae9;\\n}\\n\\n\\n.form-select[_ngcontent-%COMP%], .form-control[_ngcontent-%COMP%] {\\n  background-color: #f5f7ff;\\n  border-color: #c5cae9;\\n}\\n.form-select[_ngcontent-%COMP%]:focus, .form-control[_ngcontent-%COMP%]:focus {\\n  border-color: #3949ab;\\n  box-shadow: 0 0 0 0.25rem rgba(57, 73, 171, 0.25);\\n}\\n.form-select.ng-touched.ng-valid[_ngcontent-%COMP%], .form-control.ng-touched.ng-valid[_ngcontent-%COMP%] {\\n  border-color: #28a745;\\n}\\n\\n\\n#teamMemberSelect[_ngcontent-%COMP%] {\\n  max-height: 300px;\\n  width: 100%;\\n}\\n\\n#teamMemberSelect[_ngcontent-%COMP%]   option[_ngcontent-%COMP%] {\\n  padding: 8px 12px;\\n  cursor: pointer;\\n}\\n\\n#teamMemberSelect[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]:hover, #teamMemberSelect[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]:focus {\\n  background-color: #e9ecef;\\n}\\n\\n\\nselect.form-select[_ngcontent-%COMP%] {\\n  height: auto !important;\\n}\\n\\nselect.form-select[_ngcontent-%COMP%]   option[_ngcontent-%COMP%] {\\n  display: block;\\n  font-size: 16px;\\n  line-height: 1.5;\\n  padding: 8px 12px;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_pulse {\\n  0% {\\n    box-shadow: 0 0 0 0 rgba(13, 110, 253, 0.4);\\n  }\\n  70% {\\n    box-shadow: 0 0 0 10px rgba(13, 110, 253, 0);\\n  }\\n  100% {\\n    box-shadow: 0 0 0 0 rgba(13, 110, 253, 0);\\n  }\\n}\\n\\n.team-member-options[_ngcontent-%COMP%] {\\n  max-height: 300px;\\n  overflow-y: auto;\\n}\\n\\n.team-member-options[_ngcontent-%COMP%]   .form-check[_ngcontent-%COMP%] {\\n  transition: all 0.2s ease;\\n  cursor: pointer;\\n  border: 1px solid #dee2e6 !important;\\n}\\n\\n.team-member-options[_ngcontent-%COMP%]   .form-check[_ngcontent-%COMP%]:hover {\\n  background-color: #f8f9fa;\\n  transform: translateY(-2px);\\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\\n}\\n\\n.team-member-options[_ngcontent-%COMP%]   .form-check-input[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n\\n.team-member-options[_ngcontent-%COMP%]   .form-check-label[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  padding: 4px 0;\\n}\\n\\n.team-member-options[_ngcontent-%COMP%]   .member-name[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n}\\n\\n\\n.team-member-options[_ngcontent-%COMP%]   .form-check-input[_ngcontent-%COMP%]:checked    + .form-check-label[_ngcontent-%COMP%] {\\n  color: #0d6efd;\\n}\\n\\n.team-member-options[_ngcontent-%COMP%]   .form-check-input[_ngcontent-%COMP%]:checked    + .form-check-label[_ngcontent-%COMP%]   .member-name[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n}\\n\\n.team-member-options[_ngcontent-%COMP%]   .form-check[_ngcontent-%COMP%]:has(.form-check-input:checked) {\\n  background-color: rgba(13, 110, 253, 0.05);\\n  border-color: #0d6efd !important;\\n}\\n\\n\\n.search-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 12px;\\n  flex-wrap: nowrap;\\n  margin-bottom: 1rem;\\n}\\n\\n.input-group-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  background-color: #CCEBFF;\\n  border: 1px solid #A8D8F0;\\n  border-radius: 4px;\\n  padding: 8px 12px;\\n  gap: 12px;\\n  flex-grow: 1;\\n  color: #333;\\n}\\n.input-group-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::placeholder {\\n  color: #6c757d;\\n}\\n.input-group-container[_ngcontent-%COMP%]   small.text-muted[_ngcontent-%COMP%] {\\n  color: #6c757d !important;\\n}\\n.input-group-container[_ngcontent-%COMP%]   .form-check-input[_ngcontent-%COMP%] {\\n  background-color: white;\\n  border-color: #a8d8f0;\\n}\\n.input-group-container[_ngcontent-%COMP%]   .form-check-label[_ngcontent-%COMP%] {\\n  color: #333;\\n}\\n.input-group-container[_ngcontent-%COMP%]   .search-btn[_ngcontent-%COMP%] {\\n  background-color: #0d6efd;\\n  color: white;\\n  border: none;\\n  font-weight: 500;\\n}\\n.input-group-container[_ngcontent-%COMP%]   .search-btn[_ngcontent-%COMP%]:hover {\\n  background-color: #0b5ed7;\\n  color: white;\\n}\\n\\n.search-input[_ngcontent-%COMP%] {\\n  min-width: 180px;\\n  margin-bottom: 0;\\n}\\n\\n\\n.search-input[_ngcontent-%COMP%]   input[disabled][_ngcontent-%COMP%] {\\n  background-color: #e9ecef;\\n  opacity: 0.65;\\n}\\n\\n.filter-checkbox[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  white-space: nowrap;\\n  margin-right: 8px;\\n}\\n\\n.filter-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%] {\\n  transform: scale(1.2);\\n  margin-right: 6px;\\n  cursor: pointer;\\n}\\n\\n.filter-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:checked {\\n  background-color: #0d6efd;\\n  border-color: #0d6efd;\\n}\\n\\n.filter-checkbox[_ngcontent-%COMP%]   .form-check-label[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  cursor: pointer;\\n}\\n\\n.action-buttons[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 8px;\\n  white-space: nowrap;\\n}\\n\\n.search-btn[_ngcontent-%COMP%], .auto-assign-btn[_ngcontent-%COMP%] {\\n  white-space: nowrap;\\n}\\n\\n\\n@media (max-width: 1200px) {\\n  .search-section[_ngcontent-%COMP%] {\\n    flex-wrap: wrap;\\n  }\\n  .input-group-container[_ngcontent-%COMP%] {\\n    width: 100%;\\n    margin-bottom: 10px;\\n  }\\n  .action-buttons[_ngcontent-%COMP%] {\\n    margin-left: auto;\\n  }\\n}\\n@media (max-width: 992px) {\\n  .input-group-container[_ngcontent-%COMP%] {\\n    flex-wrap: wrap;\\n  }\\n  .filter-checkbox[_ngcontent-%COMP%] {\\n    width: 100%;\\n    margin-bottom: 8px;\\n  }\\n  .search-input[_ngcontent-%COMP%] {\\n    min-width: 160px;\\n  }\\n  .action-buttons[_ngcontent-%COMP%] {\\n    display: flex;\\n    gap: 8px;\\n    margin-left: 0;\\n    width: 100%;\\n  }\\n  .search-btn[_ngcontent-%COMP%], .auto-assign-btn[_ngcontent-%COMP%] {\\n    flex: 1;\\n  }\\n}\\n@media (max-width: 768px) {\\n  .search-section[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    align-items: stretch;\\n  }\\n  .search-input[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n}\\n.team-input[_ngcontent-%COMP%] {\\n  margin-left: 8px;\\n}\\n\\n\\n.filter-checkbox[_ngcontent-%COMP%]:hover   .form-check-input[_ngcontent-%COMP%] {\\n  border-color: #0d6efd;\\n}\\n\\n\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge[_ngcontent-%COMP%] {\\n  padding: 0.5em 0.85em;\\n  border-radius: 30px;\\n  font-size: 0.8rem;\\n  font-weight: 500;\\n  display: inline-block;\\n  text-align: center;\\n  min-width: 100px;\\n  border: none;\\n}\\n\\n\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-dev-new[_ngcontent-%COMP%] {\\n  background-color: #1976d2 !important; \\n  color: white !important;\\n}\\n\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-dev-complete[_ngcontent-%COMP%] {\\n  background-color: #4CAF50 !important; \\n  color: white !important;\\n}\\n\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-planned[_ngcontent-%COMP%] {\\n  background-color: #FF9800 !important; \\n  color: white !important;\\n}\\n\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-proposed[_ngcontent-%COMP%] {\\n  background-color: #9E9E9E !important; \\n  color: white !important;\\n}\\n\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-resolved[_ngcontent-%COMP%] {\\n  background-color: #009688 !important; \\n  color: white !important;\\n}\\n\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-code-review[_ngcontent-%COMP%] {\\n  background-color: #9C27B0 !important; \\n  color: white !important;\\n}\\n\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-in-progress[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-dev-in-progress[_ngcontent-%COMP%] {\\n  background-color: #00BCD4 !important; \\n  color: white !important;\\n}\\n\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-active[_ngcontent-%COMP%] {\\n  background-color: #FFC107 !important; \\n  color: black !important; \\n}\\n\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-blocked[_ngcontent-%COMP%] {\\n  background-color: #F44336 !important; \\n  color: white !important;\\n}\\n\\n\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-completed[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-done[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-closed[_ngcontent-%COMP%] {\\n  background-color: #4CAF50 !important; \\n  color: white !important;\\n}\\n\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-to-do[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .status-badge.status-new[_ngcontent-%COMP%] {\\n  background-color: #9E9E9E !important; \\n  color: white !important;\\n}\\n\\n\\n.task-id-link[_ngcontent-%COMP%] {\\n  color: #0078d4;\\n  text-decoration: none;\\n  font-weight: 600;\\n}\\n.task-id-link[_ngcontent-%COMP%]:hover {\\n  text-decoration: underline;\\n  color: #005a9e;\\n}\\n.task-id-link[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  text-decoration: underline;\\n}\\n\\n\\n.task-popup[_ngcontent-%COMP%] {\\n  position: absolute;\\n  background-color: white;\\n  border-radius: 8px;\\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);\\n  width: 400px;\\n  max-width: 90vw;\\n  z-index: 1050;\\n  overflow: hidden;\\n  animation: _ngcontent-%COMP%_fadeIn 0.2s ease-in-out;\\n}\\n\\n.task-popup-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 12px 16px;\\n  background-color: #f8f9fa;\\n  border-bottom: 1px solid #dee2e6;\\n}\\n\\n.task-popup-header[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-size: 1rem;\\n  font-weight: 600;\\n  color: #333;\\n}\\n\\n.task-popup-body[_ngcontent-%COMP%] {\\n  padding: 16px;\\n  max-height: 300px;\\n  overflow-y: auto;\\n}\\n\\n.task-list[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.task-item[_ngcontent-%COMP%] {\\n  padding: 8px 12px;\\n  border-bottom: 1px solid #eee;\\n  margin-bottom: 8px;\\n}\\n.task-item[_ngcontent-%COMP%]:last-child {\\n  border-bottom: none;\\n  margin-bottom: 0;\\n}\\n.task-item[_ngcontent-%COMP%]:hover {\\n  background-color: #f8f9fa;\\n}\\n.task-item[_ngcontent-%COMP%]   .task-id-link[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n}\\n\\n\\n.member-name-link[_ngcontent-%COMP%] {\\n  color: #0078d4;\\n  text-decoration: none;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n}\\n.member-name-link[_ngcontent-%COMP%]:hover, .member-name-link[_ngcontent-%COMP%]:focus {\\n  color: #005a9e;\\n  text-decoration: underline;\\n}\\n.member-name-link[_ngcontent-%COMP%]:focus {\\n  outline: 2px solid #0078d4;\\n  outline-offset: 2px;\\n}\\n\\n\\n.member-modal-backdrop[_ngcontent-%COMP%] {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(0, 0, 0, 0.5);\\n  -webkit-backdrop-filter: blur(4px);\\n          backdrop-filter: blur(4px);\\n  z-index: 1060;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  animation: _ngcontent-%COMP%_fadeIn 0.2s ease-in-out;\\n}\\n\\n.member-modal[_ngcontent-%COMP%] {\\n  width: 90%;\\n  max-width: 700px;\\n  max-height: 90vh;\\n  background-color: white;\\n  border-radius: 0.5rem;\\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n  animation: _ngcontent-%COMP%_slideIn 0.3s ease-in-out;\\n  position: relative;\\n}\\n\\n.member-modal-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 1rem 1.5rem;\\n  background-color: #f8f9fa;\\n  border-bottom: 1px solid #e2e8f0;\\n}\\n\\n.member-modal-title[_ngcontent-%COMP%] {\\n  font-size: 1.25rem;\\n  font-weight: 600;\\n  color: #1a202c;\\n  margin: 0;\\n}\\n\\n.member-modal-close[_ngcontent-%COMP%] {\\n  background: transparent;\\n  border: none;\\n  cursor: pointer;\\n  padding: 0.5rem;\\n  border-radius: 0.375rem;\\n  transition: all 0.2s;\\n}\\n.member-modal-close[_ngcontent-%COMP%]:hover {\\n  background-color: #f1f5f9;\\n}\\n.member-modal-close[_ngcontent-%COMP%]:focus {\\n  outline: 2px solid #3b82f6;\\n  outline-offset: 2px;\\n}\\n\\n.member-modal-content[_ngcontent-%COMP%] {\\n  padding: 1.5rem;\\n  overflow-y: auto;\\n  flex: 1;\\n}\\n\\n.member-modal-loading[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 2rem;\\n}\\n.member-modal-loading[_ngcontent-%COMP%]   .spinner[_ngcontent-%COMP%] {\\n  width: 2.5rem;\\n  height: 2.5rem;\\n  border: 3px solid #e2e8f0;\\n  border-top-color: #3b82f6;\\n  border-radius: 50%;\\n  animation: _ngcontent-%COMP%_spin 1s linear infinite;\\n}\\n.member-modal-loading[_ngcontent-%COMP%]   .loading-text[_ngcontent-%COMP%] {\\n  margin-top: 1rem;\\n  color: #4b5563;\\n}\\n\\n.member-modal-error[_ngcontent-%COMP%] {\\n  background-color: #fee2e2;\\n  border-left: 4px solid #ef4444;\\n  color: #b91c1c;\\n  padding: 1rem;\\n  border-radius: 0.375rem;\\n  margin-bottom: 1rem;\\n}\\n\\n.member-task-list[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n.member-task-list[_ngcontent-%COMP%]   .task-item[_ngcontent-%COMP%] {\\n  padding: 1rem;\\n  border-radius: 0.375rem;\\n  margin-bottom: 0.75rem;\\n  background-color: #f8fafc;\\n  border-left: 4px solid #e2e8f0;\\n  transition: all 0.2s;\\n}\\n.member-task-list[_ngcontent-%COMP%]   .task-item[_ngcontent-%COMP%]:hover {\\n  background-color: #f1f5f9;\\n  transform: translateY(-2px);\\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\\n}\\n.member-task-list[_ngcontent-%COMP%]   .task-item[_ngcontent-%COMP%]   .task-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 0.5rem;\\n}\\n.member-task-list[_ngcontent-%COMP%]   .task-item[_ngcontent-%COMP%]   .task-title[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  color: #1e293b;\\n  margin-top: 0.5rem;\\n}\\n.member-task-list[_ngcontent-%COMP%]   .task-item[_ngcontent-%COMP%]   .task-id[_ngcontent-%COMP%] {\\n  font-family: monospace;\\n  font-weight: 600;\\n  color: #0078d4;\\n  text-decoration: none;\\n}\\n.member-task-list[_ngcontent-%COMP%]   .task-item[_ngcontent-%COMP%]   .task-id[_ngcontent-%COMP%]:hover {\\n  text-decoration: underline;\\n}\\n.member-task-list[_ngcontent-%COMP%]   .task-item[_ngcontent-%COMP%]   .task-status[_ngcontent-%COMP%] {\\n  display: inline-flex;\\n  align-items: center;\\n  padding: 0.25rem 0.75rem;\\n  border-radius: 9999px;\\n  font-size: 0.75rem;\\n  font-weight: 500;\\n}\\n\\n.member-modal-footer[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-end;\\n  padding: 1rem 1.5rem;\\n  background-color: #f8f9fa;\\n  border-top: 1px solid #e2e8f0;\\n}\\n\\n.member-modal-btn[_ngcontent-%COMP%] {\\n  padding: 0.5rem 1rem;\\n  border-radius: 0.375rem;\\n  font-weight: 500;\\n  cursor: pointer;\\n  transition: all 0.2s;\\n}\\n.member-modal-btn.primary[_ngcontent-%COMP%] {\\n  background-color: #3b82f6;\\n  color: white;\\n  border: none;\\n}\\n.member-modal-btn.primary[_ngcontent-%COMP%]:hover {\\n  background-color: #2563eb;\\n}\\n.member-modal-btn.primary[_ngcontent-%COMP%]:focus {\\n  outline: 2px solid #3b82f6;\\n  outline-offset: 2px;\\n}\\n\\n@keyframes _ngcontent-%COMP%_fadeIn {\\n  from {\\n    opacity: 0;\\n    transform: translateY(-10px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n@keyframes _ngcontent-%COMP%_slideIn {\\n  from {\\n    opacity: 0;\\n    transform: scale(0.95);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: scale(1);\\n  }\\n}\\n@keyframes _ngcontent-%COMP%_spin {\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["forkJoin","environment","tap","switchMap","i0","$event","TaskDistributionComponent","constructor","taskService","teamService","tasks","members","assign","autoAssign","iterationPaths","taskCounts","preview","memberTasks","azureDevOpsUrl","organization","project","top","left","ngOnInit","loadIterationPaths","onTabChange","tabId","console","log","activeTab","loadTeamMembers","loadTeamMemberTaskCounts","filteredTasks","length","loading","loadTasks","ngAfterViewInit","initializeBootstrapTabs","window","bootstrap","Tab","tabElements","document","querySelectorAll","forEach","tabEl","tab","addEventListener","event","targetId","target","getAttribute","filteredTeamMembers","warn","error","getIterationPaths","subscribe","next","paths","currentIterationPath","manualIterationPath","err","message","searchClicked","normalizedPath","replace","applyTeamFilter","getTasks","teamMembers","updateTeamWorkload","filterTasksByRnDTeamMembers","getTeamMembersByTeam","teamName","filterRnDTeamMembers","loadAllTeamMembers","getTeamMembers","response","Array","isArray","map","name","index","id","displayName","uniqueName","currentWorkload","isActive","email","team","memberErr","member","filter","toLowerCase","includes","getTeamMemberTaskCounts","counts","teamMemberTaskCounts","indexOf","Object","keys","entries","find","_","task","assignedTo","normalizedAssignedTo","trim","matchedMember","isPartOfCurrentIterationTeam","assignTask","selectedTask","selectedMember","cancelAssign","showSuccessMessage","alertDiv","createElement","className","textContent","style","zIndex","body","appendChild","setTimeout","remove","showAutoAssignPreview","showingPreview","assignPreviewTasks","assignPreviewSuggestions","allDevNewTasks","status","normalizedStatus","isDevNew","getStandardAutoAssignSuggestions","developerExpertise","availableDevelopers","pipe","filteredNames","m","getDeveloperExpertise","expertise","getAvailableDevelopers","available","dev","assignedDeveloper","assignmentReason","taskTypeExpertise","taskType","type","experts","filteredExperts","expert","expertWithLeastTasks","sort","a","b","availableWithLeastTasks","memberWithLeastTasks","eligibleMembers","fallbackMember","fallbackToBasicAssignment","getAutoAssignSuggestions","suggestions","suggestedTaskIds","parseInt","availableMembers","Boolean","memberIndex","hasAssignmentSuggestions","cancelAutoAssignPreview","confirmAutoAssign","assignmentPromises","assignmentCount","developerName","extractDeveloperName","title","push","suggestion","match","extractLogicExplanation","getAssignmentsByReason","reasonType","values","reasonKeywords","keywords","explanation","some","keyword","autoAssignTasks","openAssignModal","taskId","t","iterationPath","loadTeamMemberTaskCountsForModal","names","fallbackErr","getPriorityClass","priority","priorityNum","isNaN","getStatusClass","statusLower","getTeamMemberWorkloadClass","workload","getProgressBarClass","getWorkloadPercentage","maxWorkload","Math","min","changeIterationPath","getSelectedTaskTitle","selectedTaskId","getTaskCount","memberName","undefined","key","k","getDevNewTasks","getUnassignedDevNewTasks","getStatusDistribution","statusCounts","count","rndMemberNames","getAzureDevOpsTaskUrl","openTaskInAzureDevOps","preventDefault","stopPropagation","url","open","showMemberTasks","selectedMemberTasks","selectedMemberName","clickedElement","currentTarget","rect","getBoundingClientRect","viewportWidth","innerWidth","viewportHeight","innerHeight","popupWidth","popupHeight","max","bottom","scrollY","popupPosition","showTaskPopup","closePopup","closest","showMemberModal","closeMemberModal","keepPopupOpen","showMemberTasksModal","lastFocusedElement","activeElement","selectedModalMemberTasks","selectedModalMemberName","closeButton","querySelector","focus","handleModalKeydown","modal","focusableElements","firstElement","lastElement","shiftKey","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\task-distribution\\task-distribution.component.ts","E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\task-distribution\\task-distribution.component.html"],"sourcesContent":["import { Component, OnInit, AfterViewInit, HostListener } from '@angular/core';\nimport { TaskService } from '../../services/task.service';\nimport { TeamService } from '../../services/team.service';\nimport { WorkItem, TeamMember } from '../../models/task.model';\nimport { forkJoin } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { tap, switchMap } from 'rxjs/operators';\n\n// Declare the global bootstrap variable for TypeScript\ndeclare global {\n  interface Window {\n    bootstrap: any;\n  }\n}\n\n@Component({\n  selector: 'app-task-distribution',\n  templateUrl: './task-distribution.component.html',\n  styleUrls: ['./task-distribution.component.scss']\n})\nexport class TaskDistributionComponent implements OnInit, AfterViewInit {\n  tasks: WorkItem[] = [];\n  filteredTasks: WorkItem[] = [];\n  teamMembers: TeamMember[] = [];\n  filteredTeamMembers: TeamMember[] = []; // New property for filtered team members\n  selectedTaskId: number | null = null;\n  selectedTeamMemberId: string = '';\n  selectedTask: number | null = null; // Added for modal display\n  selectedMember: string = ''; // Added for member selection in modal\n  currentIterationPath: string = 'Techoil\\\\2.3.23'; // Default value\n  manualIterationPath: string = ''; // For manual input\n  teamName: string = 'RND'; // Default team name\n  iterationPaths: string[] = []; // Will be loaded from API\n  teamMemberTaskCounts: Record<string, number> = {}; // Added for task counts\n  applyTeamFilter: boolean = true; // Whether to apply team name filter\n  \n  // Auto-assign preview properties\n  showingPreview: boolean = false;\n  assignPreviewTasks: WorkItem[] = [];\n  assignPreviewSuggestions: Record<string, string> = {};\n  \n  // Track the active tab\n  activeTab: string = 'distribution';\n  \n  // Convert simple boolean to object with specific loading states\n  loading: { \n    tasks: boolean; \n    members: boolean; \n    assign: boolean; \n    autoAssign: boolean;\n    iterationPaths: boolean;\n    taskCounts: boolean; // Added for task counts loading\n    preview: boolean; // Added for auto-assign preview loading\n    memberTasks: boolean; // Added for loading member tasks in the modal\n  } = {\n    tasks: false,\n    members: false,\n    assign: false,\n    autoAssign: false,\n    iterationPaths: false,\n    taskCounts: false, // Added for task counts loading\n    preview: false, // Added for auto-assign preview loading\n    memberTasks: false // Added for loading member tasks in the modal\n  };\n  \n  // Convert simple string to object with specific error states\n  error: { \n    tasks: string | null; \n    members: string | null; \n    assign: string | null; \n    autoAssign: string | null;\n    iterationPaths: string | null;\n    taskCounts: string | null; // Added for task counts errors\n    preview: string | null; // Added for auto-assign preview errors\n    memberTasks: string | null; // Added for member tasks errors\n  } = {\n    tasks: null,\n    members: null,\n    assign: null,\n    autoAssign: null,\n    iterationPaths: null,\n    taskCounts: null, // Added for task counts errors\n    preview: null, // Added for auto-assign preview errors\n    memberTasks: null // Added for member tasks errors\n  };\n\n  // Azure DevOps URL components from environment\n  private azureDevOpsUrl: string = environment.azureDevOpsUrl;\n  private organization: string = environment.organization;\n  private project: string = environment.project;\n\n  // Task popup properties\n  showTaskPopup: boolean = false;\n  popupPosition = { top: 0, left: 0 };\n  selectedMemberTasks: WorkItem[] = [];\n  selectedMemberName: string = '';\n  \n  // Member modal properties\n  showMemberModal: boolean = false;\n  selectedModalMemberName: string = '';\n  selectedModalMemberTasks: WorkItem[] = [];\n  lastFocusedElement: HTMLElement | null = null;\n\n  constructor(\n    private taskService: TaskService,\n    private teamService: TeamService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadIterationPaths();\n  }\n\n  /**\n   * Handle tab change events\n   * @param tabId The ID of the selected tab\n   */\n  onTabChange(tabId: string): void {\n    console.log(`Tab changed to: ${tabId}`);\n    this.activeTab = tabId;\n    \n    // Load specific data based on the selected tab\n    if (tabId === 'workload') {\n      // Force refresh team members and workload data\n      this.loadTeamMembers();\n      this.loadTeamMemberTaskCounts();\n      console.log('Refreshing team workload data');\n    } else if (tabId === 'distribution') {\n      // Refresh tasks if needed\n      if (this.filteredTasks.length === 0 && !this.loading.tasks) {\n        this.loadTasks();\n        console.log('Refreshing task distribution data');\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // Initialize Bootstrap tabs\n    this.initializeBootstrapTabs();\n  }\n\n  /**\n   * Initialize Bootstrap tabs programmatically\n   */\n  private initializeBootstrapTabs(): void {\n    try {\n      // Check if Bootstrap's Tab class is available globally\n      if (typeof window.bootstrap !== 'undefined' && window.bootstrap.Tab) {\n        // Initialize all tabs\n        const tabElements = document.querySelectorAll('[data-bs-toggle=\"tab\"]');\n        tabElements.forEach(tabEl => {\n          // Create tab instance\n          const tab = new window.bootstrap.Tab(tabEl);\n          \n          // Add event listener for tab shown event\n          tabEl.addEventListener('shown.bs.tab', (event: any) => {\n            // Extract tab ID from the target\n            const targetId = event.target.getAttribute('data-bs-target');\n            const tabId = targetId === '#task-distribution' ? 'distribution' : 'workload';\n            console.log(`Tab shown event: ${tabId}`);\n            \n            // Update active tab and ensure data is loaded\n            this.activeTab = tabId;\n            \n            // Ensure tab content is loaded/refreshed\n            if (tabId === 'workload' && this.filteredTeamMembers.length === 0 && !this.loading.members) {\n              this.loadTeamMembers();\n              this.loadTeamMemberTaskCounts();\n            }\n          });\n        });\n        \n        console.log('Bootstrap tabs initialized successfully with event listeners');\n      } else {\n        console.warn('Bootstrap JavaScript not found. Tabs may not function properly.');\n      }\n    } catch (error) {\n      console.error('Error initializing Bootstrap tabs:', error);\n    }\n  }\n\n  loadIterationPaths(): void {\n    this.loading.iterationPaths = true;\n    this.error.iterationPaths = null;\n\n    this.taskService.getIterationPaths().subscribe({\n      next: (paths) => {\n        this.iterationPaths = paths;\n        this.loading.iterationPaths = false;\n        \n        if (paths.length > 0) {\n          // Use the first path as default if available\n          this.currentIterationPath = paths[0];\n          this.manualIterationPath = paths[0];\n        }\n        \n        // We no longer automatically load data after loading iteration paths\n        // Data will be loaded when the search button is clicked\n      },\n      error: (err) => {\n        console.error('Error loading iteration paths:', err);\n        this.error.iterationPaths = `Failed to load iteration paths: ${err.message}`;\n        this.loading.iterationPaths = false;\n        \n        // Add fallback iteration paths if API call fails\n        this.iterationPaths = [\n          'Techoil\\\\2.3.23',\n          'Techoil\\\\2.3.24',\n          'Techoil\\\\2.3.25',\n          'Techoil\\\\2.3.26'\n        ];\n        console.log('Using fallback iteration paths:', this.iterationPaths);\n        \n        // We no longer automatically load data after loading iteration paths\n        // Data will be loaded when the search button is clicked\n      }\n    });\n  }\n\n  /**\n   * Search button handler - loads data based on manual inputs\n   */\n  searchClicked(): void {\n    // Normalize the manual input iteration path\n    const normalizedPath = this.manualIterationPath.replace(/\\\\\\\\/g, '\\\\');\n    \n    // Update the current iteration path with the normalized manual input\n    this.currentIterationPath = normalizedPath;\n    this.manualIterationPath = normalizedPath; // Update the displayed value too\n    \n    // Clear previous errors\n    this.error.tasks = null;\n    this.error.members = null;\n    \n    console.log(`Searching with team filter ${this.applyTeamFilter ? 'enabled' : 'disabled'}`);\n    console.log(`Using normalized iteration path: ${normalizedPath}`);\n    \n    // Load data based on the manual inputs\n    this.loadTasks();\n    this.loadTeamMembers();\n  }\n\n  loadTasks(): void {\n    this.loading.tasks = true;\n    this.error.tasks = null;\n    \n    // Normalize the iteration path to handle any double backslashes\n    const normalizedPath = this.currentIterationPath.replace(/\\\\\\\\/g, '\\\\');\n    \n    console.log(`Loading tasks for iteration path: ${normalizedPath}`);\n    \n    this.taskService.getTasks(normalizedPath).subscribe({\n      next: (tasks) => {\n        this.tasks = tasks;\n        this.loading.tasks = false;\n        console.log(`Loaded ${tasks.length} tasks for iteration path ${normalizedPath}`);\n        \n        // After loading tasks, update team workload and filter tasks\n        if (this.teamMembers.length > 0) {\n          this.updateTeamWorkload();\n          this.filterTasksByRnDTeamMembers();\n        }\n      },\n      error: (err) => {\n        console.error(`Error loading tasks for iteration path ${normalizedPath}:`, err);\n        this.error.tasks = `Failed to load tasks: ${err.message}`;\n        this.loading.tasks = false;\n      }\n    });\n  }\n\n  loadTeamMembers(): void {\n    this.loading.members = true;\n    this.error.members = null;\n\n    // Normalize the iteration path to handle any double backslashes\n    const normalizedPath = this.currentIterationPath.replace(/\\\\\\\\/g, '\\\\');\n\n    // Use the teamService directly to get team members by team name if filter is applied\n    // Otherwise, just get all team members\n    if (this.applyTeamFilter) {\n      this.teamService.getTeamMembersByTeam(this.teamName, normalizedPath).subscribe({\n        next: (teamMembers) => {\n          this.teamMembers = teamMembers;\n          console.log(`Loaded ${this.teamName} team members:`, this.teamMembers);\n          this.loading.members = false;\n          \n          // Filter out non-R&D team members\n          this.filterRnDTeamMembers();\n          \n          // Load team member task counts after loading team members\n          this.loadTeamMemberTaskCounts();\n          \n          // If tasks are already loaded, update workload\n          if (this.tasks.length > 0) {\n            this.updateTeamWorkload();\n          } else {\n            // If no tasks are loaded yet, still show the team members\n            console.log('No tasks loaded yet, showing filtered team members');\n          }\n        },\n        error: (err) => {\n          console.error(`Error loading ${this.teamName} team members:`, err);\n          \n          // Fallback to regular team members if team-specific call fails\n          this.loadAllTeamMembers(normalizedPath);\n        }\n      });\n    } else {\n      // If team filter is not applied, load all team members\n      this.loadAllTeamMembers(normalizedPath);\n    }\n  }\n\n  /**\n   * Helper method to load all team members without team filter\n   */\n  private loadAllTeamMembers(normalizedPath: string): void {\n    this.taskService.getTeamMembers(normalizedPath).subscribe({\n      next: (response) => {\n        // Process the response as an array of TeamMember objects\n        if (Array.isArray(response)) {\n          // Handle string array response - convert strings to TeamMember objects\n          if (response.length > 0 && typeof response[0] === 'string') {\n            this.teamMembers = (response as string[]).map((name, index) => ({\n              id: `member-${index}`,\n              displayName: name,\n              uniqueName: '',\n              currentWorkload: 0,\n              isActive: true,\n              email: '',\n              team: this.applyTeamFilter ? this.teamName : ''\n            }));\n          } else {\n            // It's already an array of TeamMember objects\n            this.teamMembers = response as TeamMember[];\n          }\n          \n          // If team filter is applied, still filter out non-R&D team members\n          if (this.applyTeamFilter) {\n            this.filterRnDTeamMembers();\n          } else {\n            // If not applying team filter, all team members are filtered\n            this.filteredTeamMembers = this.teamMembers;\n          }\n          \n          // If tasks are already loaded, update team workload data\n          if (this.tasks.length > 0) {\n            this.updateTeamWorkload();\n          }\n        } else {\n          console.error('Unexpected response format from getTeamMembers:', response);\n          this.error.members = 'Failed to load team members: Invalid response format';\n        }\n        \n        this.loading.members = false;\n      },\n      error: (memberErr) => {\n        console.error(`Error loading team members for iteration path ${normalizedPath}:`, memberErr);\n        this.error.members = `Failed to load team members: ${memberErr.message}`;\n        this.loading.members = false;\n      }\n    });\n  }\n\n  /**\n   * Filter team members to only include R&D team members\n   */\n  filterRnDTeamMembers(): void {\n    // Convert any string team members to objects first\n    this.teamMembers = this.teamMembers.map((member, index) => {\n      if (typeof member === 'string') {\n        return {\n          id: `member-${index}`,\n          displayName: member,\n          uniqueName: '',\n          currentWorkload: 0,\n          isActive: true,\n          email: '',\n          team: this.applyTeamFilter ? this.teamName : ''\n        };\n      }\n      return member;\n    });\n    \n    // Filter out members that don't have an R&D-related team property\n    this.filteredTeamMembers = this.teamMembers.filter(member => {\n      // Ensure member is an object\n      if (typeof member !== 'object') {\n        console.warn(`Unexpected member type in filterRnDTeamMembers: ${typeof member}`);\n        return false;\n      }\n      \n      // If member has a team property and it contains R&D-related terms\n      if (member.team) {\n        return member.team.toLowerCase().includes('r&d') || \n               member.team.toLowerCase().includes('rnd') || \n               member.team.toLowerCase().includes('research');\n      }\n      \n      // Log members without team info\n      console.log(`Team member without team info: ${member.displayName}`);\n      \n      // If no team property, default to including the member (backend should have already filtered)\n      return true;\n    });\n    \n    // Log the results\n    console.log(`Filtered ${this.teamMembers.length} team members down to ${this.filteredTeamMembers.length} R&D members`);\n  }\n\n  /**\n   * Load task counts for each team member from the API\n   */\n  loadTeamMemberTaskCounts(): void {\n    this.loading.taskCounts = true;\n    this.error.taskCounts = null;\n    \n    // Normalize the iteration path\n    const normalizedPath = this.currentIterationPath.replace(/\\\\\\\\/g, '\\\\');\n    \n    this.taskService.getTeamMemberTaskCounts(normalizedPath).subscribe({\n      next: (counts) => {\n        this.teamMemberTaskCounts = counts;\n        this.loading.taskCounts = false;\n        console.log('Loaded team member task counts:', this.teamMemberTaskCounts);\n        \n        // Update the team members with their task counts\n        this.updateTeamWorkload();\n      },\n      error: (err) => {\n        console.error('Error loading team member task counts:', err);\n        this.error.taskCounts = `Failed to load task counts: ${err.message}`;\n        this.loading.taskCounts = false;\n        \n        // Fall back to counting tasks manually\n        this.updateTeamWorkload();\n      }\n    });\n  }\n\n  /**\n   * Calculate and update team members' workload based on task assignments\n   */\n  updateTeamWorkload(): void {\n    console.log('Updating team workload');\n    \n    // Reset all workloads to 0 for all team members\n    this.teamMembers.forEach(member => {\n      // Ensure member is a TeamMember object and not a string\n      if (typeof member === 'string') {\n        console.warn(`Found string member instead of object: ${member}`);\n        // Convert string to TeamMember object if needed\n        const index = this.teamMembers.indexOf(member);\n        if (index >= 0) {\n          this.teamMembers[index] = {\n            id: `member-${index}`,\n            displayName: member,\n            uniqueName: '',\n            currentWorkload: 0,\n            isActive: true,\n            email: '',\n            team: this.applyTeamFilter ? this.teamName : ''\n          };\n        }\n      } else {\n        // Reset workload for object\n        member.currentWorkload = 0;\n      }\n    });\n    \n    // If we have task counts from the API, use those\n    if (Object.keys(this.teamMemberTaskCounts).length > 0) {\n      this.teamMembers.forEach(member => {\n        // Skip if member is not an object\n        if (typeof member === 'string') return;\n        \n        // Try to find this member in the task counts\n        const counts = Object.entries(this.teamMemberTaskCounts).find(\n          ([name, _]) => name.toLowerCase() === member.displayName.toLowerCase()\n        );\n        \n        if (counts) {\n          member.currentWorkload = counts[1]; // Set the count from the API\n        }\n      });\n    } else {\n      // Fall back to counting from tasks array\n      this.tasks.forEach(task => {\n        if (task.assignedTo) {\n          // Normalize the assignedTo value\n          const normalizedAssignedTo = task.assignedTo.trim().toLowerCase();\n          \n          // Find matching team member\n          const matchedMember = this.teamMembers.find(member => \n            typeof member === 'object' && member.displayName.toLowerCase() === normalizedAssignedTo\n          );\n          \n          if (matchedMember) {\n            matchedMember.currentWorkload++;\n          }\n        }\n      });\n    }\n    \n    // Only filter for R&D team members if team filter is applied\n    if (this.applyTeamFilter) {\n      // Re-apply R&D filter to ensure we only show R&D team members\n      this.filterRnDTeamMembers();\n    } else {\n      // If filter not applied, use all team members\n      this.filteredTeamMembers = this.teamMembers;\n    }\n    \n    // Also filter tasks to match team members or show all if filter not applied\n    this.filterTasksByRnDTeamMembers();\n    \n    console.log('Updated team workload for filtered members:', this.filteredTeamMembers);\n  }\n\n  /**\n   * Check if a team member is part of the current iteration team\n   * This is a placeholder - you may need to implement actual logic based on your data model\n   */\n  isPartOfCurrentIterationTeam(member: TeamMember): boolean {\n    // By default, include all team members\n    // You might want to enhance this with actual iteration team membership logic\n    return true;\n  }\n\n  assignTask(): void {\n    if (!this.selectedTask) {\n      this.error.assign = 'Error: No task selected for assignment';\n      return;\n    }\n    \n    if (!this.selectedMember) {\n      this.error.assign = 'Please select a team member for assignment';\n      return;\n    }\n\n    this.loading.assign = true;\n    this.error.assign = null;\n    \n    // Use the selected member name directly for the API call\n    console.log(`Assigning task ${this.selectedTask} to member ${this.selectedMember}`);\n    \n    this.taskService.assignTask(this.selectedTask, this.selectedMember).subscribe({\n      next: (response) => {\n        console.log('Task assignment successful:', response);\n        // Close the modal\n        this.cancelAssign();\n        // Show success message (could be implemented with a toast/snackbar service)\n        this.showSuccessMessage('Task assigned successfully');\n        // Reload tasks and task counts to reflect changes\n        this.loadTasks();\n        this.loadTeamMemberTaskCounts();\n      },\n      error: (err) => {\n        console.error('Error assigning task:', err);\n        this.error.assign = `Failed to assign task: ${err.message}`;\n        this.loading.assign = false;\n      }\n    });\n  }\n\n  // Helper method to show success message (placeholder for toast/snackbar)\n  showSuccessMessage(message: string): void {\n    console.log('SUCCESS:', message);\n    // In a real implementation, you would use a toast/snackbar service\n    // Example: this.toastService.show(message, { classname: 'bg-success' });\n    \n    // For now, create a simple alert element that disappears after a few seconds\n    const alertDiv = document.createElement('div');\n    alertDiv.className = 'alert alert-success position-fixed top-0 end-0 m-3';\n    alertDiv.textContent = message;\n    alertDiv.style.zIndex = '9999';\n    document.body.appendChild(alertDiv);\n    \n    // Remove after 3 seconds\n    setTimeout(() => {\n      alertDiv.remove();\n    }, 3000);\n  }\n\n  /**\n   * Show preview of auto-assign suggestions before performing the assignment\n   */\n  showAutoAssignPreview(): void {\n    this.loading.preview = true;\n    this.error.preview = null;\n    this.showingPreview = true;\n    this.assignPreviewTasks = [];\n    this.assignPreviewSuggestions = {};\n    \n    // Normalize the iteration path to handle any double backslashes\n    const normalizedPath = this.currentIterationPath.replace(/\\\\\\\\/g, '\\\\');\n    console.log('Using normalized iteration path for auto-assign preview:', normalizedPath);\n    \n    // First, get all Dev-New tasks for the current iteration\n    this.taskService.getTasks(normalizedPath).subscribe({\n      next: (tasks) => {\n        // Enhanced filtering for Dev-New tasks with broader matching criteria\n        const allDevNewTasks = tasks.filter(task => {\n          // Skip tasks without status\n          if (!task.status) return false;\n          \n          // Normalize status by removing spaces, hyphens, and converting to lowercase\n          const normalizedStatus = task.status.toLowerCase()\n            .replace(/[\\s\\-]/g, ''); // Remove spaces and hyphens\n          \n          // Match against various formats of \"Dev-New\"\n          const isDevNew = normalizedStatus === 'devnew' || \n                 normalizedStatus === 'newdev' ||\n                 normalizedStatus.includes('devnew') ||\n                 normalizedStatus.includes('newdev') ||\n                 normalizedStatus.includes('developmentnew') ||\n                 normalizedStatus.includes('newdevelopment');\n                 \n          return isDevNew;\n        });\n        \n        console.log(`Found ${allDevNewTasks.length} Dev-New tasks for auto-assign preview out of ${tasks.length} total tasks`);\n        console.log('Dev-New tasks:', allDevNewTasks);\n        \n        if (allDevNewTasks.length === 0) {\n          this.error.preview = 'No Dev-New tasks found in the current iteration. Auto-assign requires tasks with Dev-New status.';\n          this.loading.preview = false;\n          return;\n        }\n        \n        // Force using our default intelligent assignment logic even if there are no team-specific suggestions\n        // This ensures tasks are always assigned regardless of API response\n        this.getStandardAutoAssignSuggestions(allDevNewTasks, normalizedPath);\n      },\n      error: (err) => {\n        this.error.preview = `Failed to load tasks: ${err.message}`;\n        this.loading.preview = false;\n      }\n    });\n  }\n  \n  /**\n   * Fallback method to get standard auto-assign suggestions if RnD-specific fails\n   */\n  private getStandardAutoAssignSuggestions(allDevNewTasks: WorkItem[], normalizedPath: string): void {\n    console.log('Getting standard auto-assign suggestions with path:', normalizedPath);\n    console.log('Dev-New tasks available for assignment:', allDevNewTasks);\n    \n    // Step 1: Get team members with their current task counts\n    this.loading.taskCounts = true;\n    \n    // Prepare to hold our different data sources\n    let developerExpertise: any = {};\n    let availableDevelopers: string[] = [];\n    let teamMemberTaskCounts: Record<string, number> = {};\n    \n    // First, get the team members with their task counts\n    this.taskService.getTeamMemberTaskCounts(normalizedPath).pipe(\n      tap(taskCounts => {\n        teamMemberTaskCounts = taskCounts;\n        console.log('Team member task counts:', teamMemberTaskCounts);\n      }),\n      // Then get developer expertise data from past 3 months\n      switchMap(() => {\n        // Apply team filter if needed\n        let teamMembers = Object.keys(teamMemberTaskCounts);\n        \n        // If team filter is active, filter by team members\n        if (this.applyTeamFilter && this.filteredTeamMembers.length > 0) {\n          const filteredNames = this.filteredTeamMembers.map(m => m.displayName.toLowerCase());\n          teamMembers = teamMembers.filter(member => \n            filteredNames.includes(member.toLowerCase())\n          );\n          console.log(`Applied team filter, filtered to ${teamMembers.length} team members`);\n        }\n        \n        return this.taskService.getDeveloperExpertise(teamMembers);\n      }),\n      // Then get developers who have recently completed tasks\n      switchMap(expertise => {\n        developerExpertise = expertise;\n        console.log('Developer expertise:', developerExpertise);\n        return this.taskService.getAvailableDevelopers(normalizedPath);\n      })\n    ).subscribe({\n      next: (available) => {\n        availableDevelopers = available;\n        console.log('Available developers:', availableDevelopers);\n        \n        // If team filter is active, filter available developers\n        if (this.applyTeamFilter && this.filteredTeamMembers.length > 0) {\n          const filteredNames = this.filteredTeamMembers.map(m => m.displayName.toLowerCase());\n          availableDevelopers = availableDevelopers.filter(dev => \n            filteredNames.includes(dev.toLowerCase())\n          );\n          console.log(`Applied team filter to available developers, filtered to ${availableDevelopers.length} developers`);\n        }\n        \n        // Now we have all 3 data sources:\n        // 1. teamMemberTaskCounts - Current workload for each team member\n        // 2. developerExpertise - Expertise data from past 3 months\n        // 3. availableDevelopers - Developers who have recently completed tasks\n        \n        this.assignPreviewSuggestions = {};\n        \n        // For each task, find the best developer to assign it to\n        allDevNewTasks.forEach(task => {\n          let assignedDeveloper = '';\n          let assignmentReason = '';\n          \n          // Check if there's a developer with expertise for this type of task\n          if (developerExpertise && developerExpertise.taskTypeExpertise) {\n            const taskType = task.type || 'Unknown';\n            const experts = developerExpertise.taskTypeExpertise[taskType];\n            \n            if (experts && experts.length > 0) {\n              // Filter experts to match team filter if active\n              let filteredExperts = [...experts];\n              if (this.applyTeamFilter && this.filteredTeamMembers.length > 0) {\n                const filteredNames = this.filteredTeamMembers.map(m => m.displayName.toLowerCase());\n                filteredExperts = filteredExperts.filter(expert => \n                  filteredNames.includes(expert.toLowerCase())\n                );\n                console.log(`Applied team filter to ${taskType} experts, filtered from ${experts.length} to ${filteredExperts.length}`);\n              }\n              \n              // If we still have experts after filtering\n              if (filteredExperts.length > 0) {\n                // Find the expert with the lowest current workload\n                const expertWithLeastTasks = filteredExperts.sort((a: string, b: string) => \n                  (teamMemberTaskCounts[a] || 0) - (teamMemberTaskCounts[b] || 0)\n                )[0];\n                \n                if (expertWithLeastTasks) {\n                  assignedDeveloper = expertWithLeastTasks;\n                  assignmentReason = `past expertise in ${taskType} tasks`;\n                }\n              }\n            }\n          }\n          \n          // If no expert found, check if there are developers who have recently completed tasks\n          if (!assignedDeveloper && availableDevelopers.length > 0) {\n            // Find the available developer with the lowest workload\n            const availableWithLeastTasks = availableDevelopers.sort((a, b) => \n              (teamMemberTaskCounts[a] || 0) - (teamMemberTaskCounts[b] || 0)\n            )[0];\n            \n            if (availableWithLeastTasks) {\n              assignedDeveloper = availableWithLeastTasks;\n              assignmentReason = 'recently completed other tasks';\n            }\n          }\n          \n          // If still no assignment, use the team member with the lowest current task count\n          if (!assignedDeveloper) {\n            // Get team members respecting the team filter\n            let teamMembers = Object.keys(teamMemberTaskCounts);\n            \n            if (this.applyTeamFilter && this.filteredTeamMembers.length > 0) {\n              const filteredNames = this.filteredTeamMembers.map(m => m.displayName.toLowerCase());\n              teamMembers = teamMembers.filter(member => \n                filteredNames.includes(member.toLowerCase())\n              );\n              console.log(`Applied team filter to workload check, filtered to ${teamMembers.length} team members`);\n            }\n            \n            if (teamMembers.length > 0) {\n              const memberWithLeastTasks = teamMembers.sort((a, b) => \n                (teamMemberTaskCounts[a] || 0) - (teamMemberTaskCounts[b] || 0)\n              )[0];\n              \n              if (memberWithLeastTasks) {\n                assignedDeveloper = memberWithLeastTasks;\n                assignmentReason = 'lowest current workload';\n              }\n            }\n          }\n          \n          // Final fallback: If all else fails, just assign to any team member\n          if (!assignedDeveloper) {\n            // Try to get from filtered team members based on team filter setting\n            let eligibleMembers = this.applyTeamFilter ? this.filteredTeamMembers : this.teamMembers;\n            \n            if (eligibleMembers.length > 0) {\n              // Use the first team member as a fallback\n              const fallbackMember = eligibleMembers[0];\n              assignedDeveloper = fallbackMember.displayName;\n              assignmentReason = 'default assignment (no criteria met)';\n              \n              console.log(`Using fallback assignment for task ${task.id} to ${assignedDeveloper}`);\n            } else if (this.teamMembers.length > 0) {\n              // If no filtered members, try using any available team member\n              const fallbackMember = this.teamMembers[0];\n              assignedDeveloper = fallbackMember.displayName;\n              assignmentReason = 'default assignment (no criteria met)';\n              \n              console.log(`Using fallback assignment for task ${task.id} to ${assignedDeveloper}`);\n            } else {\n              // Absolute last resort - use a hardcoded name\n              assignedDeveloper = 'Unassigned Task';\n              assignmentReason = 'could not determine assignee';\n              console.warn(`No team members available to assign task ${task.id}`);\n            }\n          }\n          \n          // Store the suggestion with the reason\n          if (assignedDeveloper) {\n            this.assignPreviewSuggestions[task.id] = `${assignedDeveloper} (${assignmentReason})`;\n          }\n        });\n        \n        // Filter tasks to only include those we have suggestions for\n        this.assignPreviewTasks = allDevNewTasks.filter(task => \n          this.assignPreviewSuggestions[task.id]\n        );\n        \n        console.log('Intelligent auto-assign suggestions:', this.assignPreviewSuggestions);\n        console.log('Tasks to be assigned:', this.assignPreviewTasks);\n        \n        // Check if we have valid suggestions\n        if (this.assignPreviewTasks.length === 0) {\n          this.error.preview = 'No suitable tasks found for assignment. Check if there are unassigned Dev-New tasks.';\n        }\n        \n        this.loading.preview = false;\n        this.loading.taskCounts = false;\n      },\n      error: (err) => {\n        console.error('Error loading data for intelligent assignment:', err);\n        \n        // Fallback to basic assignment if data loading fails\n        this.fallbackToBasicAssignment(allDevNewTasks);\n      }\n    });\n  }\n  \n  /**\n   * Basic fallback assignment method if intelligent assignment fails\n   */\n  private fallbackToBasicAssignment(allDevNewTasks: WorkItem[]): void {\n    console.log('Falling back to basic assignment logic');\n    \n    // Always ensure we have tasks to assign\n    if (allDevNewTasks.length === 0) {\n      this.error.preview = 'No Dev-New tasks found for assignment.';\n      this.loading.preview = false;\n      return;\n    }\n    \n    this.taskService.getAutoAssignSuggestions(this.currentIterationPath).subscribe({\n      next: (suggestions) => {\n        console.log('Got standard suggestions (basic fallback):', suggestions);\n        \n        // Check if we have any suggestions from the API\n        if (Object.keys(suggestions).length > 0) {\n          this.assignPreviewSuggestions = suggestions;\n          \n          // Filter tasks to only include those in the suggestions\n          const suggestedTaskIds = Object.keys(suggestions).map(id => parseInt(id));\n          this.assignPreviewTasks = allDevNewTasks.filter(task => \n            suggestedTaskIds.includes(task.id)\n          );\n        }\n        \n        // If we still don't have tasks to assign, use ALL Dev-New tasks\n        if (this.assignPreviewTasks.length === 0) {\n          console.log('No task suggestions matched. Using all Dev-New tasks for assignment.');\n          // Include all Dev-New tasks, prioritizing unassigned ones\n          this.assignPreviewTasks = [...allDevNewTasks];\n          \n          // Create simple suggestions for all tasks\n          if (this.assignPreviewTasks.length > 0) {\n            this.assignPreviewSuggestions = {};\n            \n            // Get available team members\n            let availableMembers = this.filteredTeamMembers\n              .map(m => m.displayName)\n              .filter(Boolean);\n            \n            // If no filtered members, use unfiltered members\n            if (availableMembers.length === 0 && this.teamMembers.length > 0) {\n              availableMembers = this.teamMembers\n                .filter(m => typeof m === 'object')\n                .map(m => m.displayName)\n                .filter(Boolean);\n            }\n            \n            // Fallback if still no members\n            if (availableMembers.length === 0) {\n              availableMembers = ['Default Assignee'];\n            }\n            \n            // Assign members to tasks in a round-robin fashion\n            this.assignPreviewTasks.forEach((task, index) => {\n              const memberIndex = index % availableMembers.length;\n              const member = availableMembers[memberIndex];\n              this.assignPreviewSuggestions[task.id] = `${member} (basic fallback assignment)`;\n            });\n          }\n        }\n        \n        // Final validation\n        if (this.assignPreviewTasks.length === 0) {\n          this.error.preview = 'No tasks available for assignment. Check if there are Dev-New tasks in the current iteration.';\n        }\n        \n        this.loading.preview = false;\n      },\n      error: (err) => {\n        // If API call fails, still try to assign tasks based on team members\n        console.error('Failed to load auto-assign suggestions:', err);\n        \n        // Use all Dev-New tasks\n        this.assignPreviewTasks = [...allDevNewTasks];\n        this.assignPreviewSuggestions = {};\n        \n        // Get team members to use for assignment\n        let availableMembers = this.filteredTeamMembers\n          .map(m => m.displayName)\n          .filter(Boolean);\n        \n        if (availableMembers.length === 0 && this.teamMembers.length > 0) {\n          availableMembers = this.teamMembers\n            .filter(m => typeof m === 'object')\n            .map(m => m.displayName)\n            .filter(Boolean);\n        }\n        \n        if (availableMembers.length === 0) {\n          availableMembers = ['Default Assignee'];\n        }\n        \n        // Assign all tasks\n        this.assignPreviewTasks.forEach((task, index) => {\n          const memberIndex = index % availableMembers.length;\n          const member = availableMembers[memberIndex];\n          this.assignPreviewSuggestions[task.id] = `${member} (error recovery assignment)`;\n        });\n        \n        this.loading.preview = false;\n      }\n    });\n  }\n  \n  /**\n   * Check if there are valid assignment suggestions\n   */\n  hasAssignmentSuggestions(): boolean {\n    return this.assignPreviewSuggestions && Object.keys(this.assignPreviewSuggestions).length > 0;\n  }\n  \n  /**\n   * Cancel auto-assign preview and close the modal\n   */\n  cancelAutoAssignPreview(): void {\n    this.showingPreview = false;\n    this.assignPreviewTasks = [];\n    this.assignPreviewSuggestions = {};\n    this.error.preview = null;\n  }\n  \n  /**\n   * Confirm and perform the auto-assignments\n   */\n  confirmAutoAssign(): void {\n    this.loading.autoAssign = true;\n    this.error.autoAssign = null;\n    \n    // Normalize the path for consistent handling\n    const normalizedPath = this.currentIterationPath.replace(/\\\\\\\\/g, '\\\\');\n    \n    const assignmentPromises = [];\n    let assignmentCount = 0;\n    \n    // For each task with a suggestion, create an assignment\n    for (const task of this.assignPreviewTasks) {\n      if (this.assignPreviewSuggestions[task.id]) {\n        const developerName = this.extractDeveloperName(this.assignPreviewSuggestions[task.id]);\n        \n        console.log(`Assigning task #${task.id} (${task.title}) to ${developerName}`);\n        \n        assignmentPromises.push(\n          this.taskService.assignTask(task.id, developerName)\n        );\n        assignmentCount++;\n      }\n    }\n    \n    // If we have assignments to make, execute them all in parallel\n    if (assignmentPromises.length > 0) {\n      forkJoin(assignmentPromises).subscribe({\n        next: () => {\n          // Hide the preview after successful assignment\n          this.showingPreview = false;\n          \n          // Refresh the task list with normalized path\n          this.loadTasks();\n          \n          // Also refresh the task counts to show updated workload\n          this.loadTeamMemberTaskCounts();\n          \n          // Show success message\n          this.showSuccessMessage(`Successfully assigned ${assignmentCount} tasks.`);\n          \n          this.loading.autoAssign = false;\n        },\n        error: (err) => {\n          this.error.autoAssign = `Error assigning tasks: ${err.message}`;\n          this.loading.autoAssign = false;\n        }\n      });\n    } else {\n      this.loading.autoAssign = false;\n      this.error.preview = \"No tasks available for assignment.\";\n    }\n  }\n  \n  /**\n   * Extract only the developer name from a suggestion string\n   * Example: \"John Doe (past expertise)\" -> \"John Doe\"\n   */\n  extractDeveloperName(suggestion: string): string {\n    if (!suggestion) return '';\n    \n    // Match everything before the opening parenthesis\n    const match = suggestion.match(/^(.+?)\\s*\\(/);\n    if (match && match[1]) {\n      return match[1].trim();\n    }\n    \n    // If no parenthesis found, return the whole string\n    return suggestion.trim();\n  }\n  \n  /**\n   * Extract just the explanation part from a suggestion string\n   * Example: \"John Doe (past expertise in Bug tasks)\" -> \"past expertise in Bug tasks\"\n   */\n  extractLogicExplanation(suggestion: string): string {\n    if (!suggestion) return '';\n    \n    // Match everything between parentheses\n    const match = suggestion.match(/\\(([^)]+)\\)/);\n    if (match && match[1]) {\n      return match[1].trim();\n    }\n    \n    return '';\n  }\n  \n  /**\n   * Count assignments by specific reason keyword\n   * @param reasonType The type of reason to count ('expertise', 'completed', 'workload', or 'default')\n   * @returns The number of assignments made with that reason\n   */\n  getAssignmentsByReason(reasonType: string): number {\n    if (!this.assignPreviewSuggestions) return 0;\n    \n    const suggestions = Object.values(this.assignPreviewSuggestions);\n    \n    // Map reason types to keywords that might appear in the explanation\n    const reasonKeywords: Record<string, string[]> = {\n      'expertise': ['expertise', 'expert'],\n      'completed': ['completed', 'recently completed'],\n      'workload': ['workload', 'least assigned', 'lowest'],\n      'default': ['default assignment', 'could not determine']\n    };\n    \n    // Get the keywords for the requested reason type\n    const keywords = reasonKeywords[reasonType] || [];\n    \n    // Count suggestions containing any of the keywords\n    return suggestions.filter(suggestion => {\n      const explanation = this.extractLogicExplanation(suggestion).toLowerCase();\n      return keywords.some(keyword => explanation.includes(keyword.toLowerCase()));\n    }).length;\n  }\n\n  /**\n   * Original auto-assign tasks method - replaced with preview workflow\n   */\n  autoAssignTasks(): void {\n    this.loading.autoAssign = true;\n    this.error.autoAssign = null;\n    \n    this.taskService.autoAssignTasks(this.currentIterationPath).subscribe({\n      next: () => {\n        // Reload tasks and task counts to reflect changes\n        this.loadTasks();\n        this.loadTeamMemberTaskCounts();\n        this.loading.autoAssign = false;\n      },\n      error: (err) => {\n        this.error.autoAssign = `Failed to auto-assign tasks: ${err.message}`;\n        this.loading.autoAssign = false;\n      }\n    });\n  }\n\n  openAssignModal(taskId: number): void {\n    this.selectedTask = taskId;\n    this.selectedMember = '';\n    this.error.assign = null;\n\n    // Get the iteration path for this specific task - first try filtered tasks\n    let task = this.filteredTasks.find(t => t.id === taskId);\n    \n    // If not found, check all tasks (in case this is accessing a non-filtered task)\n    if (!task) {\n      task = this.tasks.find(t => t.id === taskId);\n    }\n    \n    if (task && task.iterationPath) {\n      // Fetch R&D team members specifically for this task's iteration path\n      this.loading.members = true;\n      \n      this.teamService.getTeamMembersByTeam('RND', task.iterationPath).subscribe({\n        next: (members) => {\n          this.teamMembers = members;\n          this.loading.members = false;\n          \n          // Filter to R&D team members\n          this.filterRnDTeamMembers();\n          \n          // Load task counts after team members are loaded\n          if (task && task.iterationPath) {\n            this.loadTeamMemberTaskCountsForModal(task.iterationPath);\n          }\n        },\n        error: (err) => {\n          console.error(`Error loading R&D team members for iteration path ${task?.iterationPath ?? 'unknown'}:`, err);\n          this.error.members = `Failed to load team members: ${err.message}`;\n          this.loading.members = false;\n          \n          // Fallback to regular team members if R&D team fetch fails\n          if (task && task.iterationPath) {\n            this.taskService.getTeamMembers(task.iterationPath).subscribe({\n              next: (response) => {\n                if (Array.isArray(response) && response.length > 0) {\n                  if (typeof response[0] === 'string') {\n                    // String array response\n                    const names = response as string[];\n                    this.teamMembers = names.map((name, index) => ({\n                      id: `member-${index}`,\n                      displayName: name,\n                      uniqueName: '',\n                      currentWorkload: 0,\n                      isActive: true,\n                      email: '',\n                      team: this.applyTeamFilter ? this.teamName : ''\n                    }));\n                  } else {\n                    // TeamMember array response\n                    this.teamMembers = response as TeamMember[];\n                  }\n                } else {\n                  this.teamMembers = [];\n                }\n                \n                this.loading.members = false;\n                \n                // Filter to R&D team members even with fallback response\n                this.filterRnDTeamMembers();\n                \n                if (task && task.iterationPath) {\n                  this.loadTeamMemberTaskCountsForModal(task.iterationPath);\n                }\n              },\n              error: (fallbackErr) => {\n                console.error(`Error loading fallback team members:`, fallbackErr);\n                this.error.members = `Failed to load team members: ${fallbackErr.message}`;\n                this.loading.members = false;\n              }\n            });\n          } else {\n            console.error('Cannot load team members: task or iterationPath is undefined');\n            this.loading.members = false;\n          }\n        }\n      });\n    } else {\n      // Ensure we have team members loaded before showing the modal\n      if (this.filteredTeamMembers.length === 0 && !this.loading.members) {\n        this.loadTeamMembers();\n      }\n      \n      // Make sure we have task counts loaded\n      if (Object.keys(this.teamMemberTaskCounts).length === 0) {\n        this.loadTeamMemberTaskCounts();\n      }\n    }\n  }\n\n  /**\n   * Load task counts specifically for the modal dialogue\n   * This ensures counts are up-to-date when assigning tasks\n   */\n  loadTeamMemberTaskCountsForModal(iterationPath: string): void {\n    this.loading.taskCounts = true;\n    \n    // Normalize the iteration path\n    const normalizedPath = iterationPath.replace(/\\\\\\\\/g, '\\\\');\n    \n    this.taskService.getTeamMemberTaskCounts(normalizedPath).subscribe({\n      next: (counts) => {\n        this.teamMemberTaskCounts = counts;\n        this.loading.taskCounts = false;\n        console.log('Loaded team member task counts for modal:', this.teamMemberTaskCounts);\n      },\n      error: (err) => {\n        console.error('Error loading team member task counts for modal:', err);\n        this.loading.taskCounts = false;\n      }\n    });\n  }\n\n  cancelAssign(): void {\n    this.selectedTask = null;\n    this.selectedMember = '';\n    this.error.assign = null;\n    this.loading.assign = false;\n  }\n\n  /**\n   * Get CSS class for priority badge\n   * @param priority Priority value (number or string)\n   * @returns CSS class name\n   */\n  getPriorityClass(priority: number | string): string {\n    // Convert priority to number if it's a string\n    const priorityNum = typeof priority === 'string' ? parseInt(priority, 10) : priority;\n    \n    if (isNaN(priorityNum)) {\n      return 'bg-secondary'; // Default for invalid priority\n    }\n    \n    switch (priorityNum) {\n      case 1:\n        return 'bg-danger';\n      case 2:\n        return 'bg-warning text-dark';\n      case 3:\n        return 'bg-info text-dark';\n      case 4:\n        return 'bg-success';\n      default:\n        return 'bg-secondary';\n    }\n  }\n\n  /**\n   * Get CSS class for status badge\n   * @param status Status string or undefined\n   * @returns CSS class name\n   */\n  getStatusClass(status: string | undefined): string {\n    if (!status) {\n      return 'status-to-do'; // Default for undefined status\n    }\n    \n    const statusLower = status.toLowerCase();\n    \n    // Return the appropriate custom status class based on requested colors\n    if (statusLower === 'active') {\n      return 'status-active'; // Yellow\n    } else if (statusLower === 'completed' || statusLower === 'done' || statusLower === 'closed' || statusLower === 'dev complete') {\n      return 'status-dev-complete'; // Green\n    } else if (statusLower === 'blocked') {\n      return 'status-blocked'; // Red\n    } else if (statusLower === 'dev-new' || statusLower === 'dev new') {\n      return 'status-dev-new'; // Blue\n    } else if (statusLower === 'code review') {\n      return 'status-code-review'; // Purple\n    } else if (statusLower === 'proposed') {\n      return 'status-proposed'; // Gray\n    } else if (statusLower === 'planned') {\n      return 'status-planned'; // Orange\n    } else if (statusLower === 'resolved') {\n      return 'status-resolved'; // Teal\n    } else if (statusLower.includes('progress')) {\n      return 'status-in-progress'; // Cyan\n    } else if (statusLower === 'to do' || statusLower === 'new') {\n      return 'status-to-do'; // Gray\n    } else {\n      return 'status-to-do'; // Default for any other status\n    }\n  }\n\n  /**\n   * Get CSS class for team member workload indicator\n   * @param workload Current workload value\n   * @returns CSS class name\n   */\n  getTeamMemberWorkloadClass(workload: number): string {\n    if (workload === 0) {\n      return 'bg-secondary';\n    } else if (workload < 3) {\n      return 'bg-success';\n    } else if (workload < 7) {\n      return 'bg-warning text-dark';\n    } else {\n      return 'bg-danger';\n    }\n  }\n\n  /**\n   * Get the progress bar class based on workload\n   * @param workload Current workload\n   * @returns Bootstrap progress bar class\n   */\n  getProgressBarClass(workload: number): string {\n    if (workload === 0) {\n      return 'bg-secondary';\n    } else if (workload < 3) {\n      return 'bg-success';\n    } else if (workload < 7) {\n      return 'bg-warning';\n    } else {\n      return 'bg-danger';\n    }\n  }\n\n  /**\n   * Calculate workload as a percentage (for progress bar width)\n   * @param workload Current workload\n   * @returns Percentage value (0-100)\n   */\n  getWorkloadPercentage(workload: number): number {\n    // Using 10 as maximum reasonable workload\n    const maxWorkload = 10;\n    return Math.min(100, (workload / maxWorkload) * 100);\n  }\n\n  /**\n   * Handle changing the iteration path\n   * @param iterationPath The new iteration path\n   */\n  changeIterationPath(iterationPath: string): void {\n    console.log(`Changing iteration path to: ${iterationPath}`);\n    \n    if (this.currentIterationPath === iterationPath) {\n      console.log('Iteration path unchanged, skipping reload');\n      return;\n    }\n    \n    // Update both the current and manual iteration paths\n    this.currentIterationPath = iterationPath;\n    this.manualIterationPath = iterationPath;\n    \n    // For backward compatibility, trigger the search (load data)\n    this.searchClicked();\n  }\n\n  /**\n   * Get the title of the currently selected task\n   * @returns The task title or a fallback message\n   */\n  getSelectedTaskTitle(): string {\n    if (this.selectedTask === null) {\n      return 'No task selected';\n    }\n    \n    const selectedTaskId = this.selectedTask;\n    // First try to find in filtered tasks\n    let task = this.filteredTasks.find(t => t.id === selectedTaskId);\n    \n    // If not found (could be a non-R&D task), look in all tasks\n    if (!task) {\n      task = this.tasks.find(t => t.id === selectedTaskId);\n    }\n    \n    return task ? task.title : 'Unknown Task';\n  }\n\n  /**\n   * Get the task count for a specific team member\n   * @param memberName The name of the team member\n   * @returns The number of tasks assigned to that member\n   */\n  getTaskCount(memberName: string): number {\n    if (!memberName) {\n      console.warn('Called getTaskCount with empty memberName');\n      return 0;\n    }\n    \n    // First check if we have task counts from the API\n    if (Object.keys(this.teamMemberTaskCounts).length > 0) {\n      // Look for an exact match\n      if (this.teamMemberTaskCounts[memberName] !== undefined) {\n        return this.teamMemberTaskCounts[memberName];\n      }\n      \n      // Try case-insensitive match\n      const key = Object.keys(this.teamMemberTaskCounts).find(\n        k => k && k.toLowerCase() === memberName.toLowerCase()\n      );\n      \n      if (key) {\n        return this.teamMemberTaskCounts[key];\n      }\n    }\n    \n    // Fall back to the currentWorkload from team members\n    const member = this.teamMembers.find(\n      m => typeof m === 'object' && m.displayName && m.displayName.toLowerCase() === memberName.toLowerCase()\n    );\n    \n    return member && typeof member === 'object' ? member.currentWorkload : 0;\n  }\n\n  /**\n   * Get a list of all tasks with Dev-New status\n   * @returns List of Dev-New tasks\n   */\n  getDevNewTasks(): WorkItem[] {\n    return this.filteredTasks.filter(task => {\n      if (!task.status) return false;\n      \n      // Normalize status by removing spaces, hyphens, and converting to lowercase\n      const normalizedStatus = task.status.toLowerCase().replace(/[\\s\\-]/g, '');\n      \n      // Use the same broad matching criteria as in showAutoAssignPreview\n      return normalizedStatus === 'devnew' || \n             normalizedStatus === 'newdev' ||\n             normalizedStatus.includes('devnew') ||\n             normalizedStatus.includes('newdev') ||\n             normalizedStatus.includes('developmentnew') ||\n             normalizedStatus.includes('newdevelopment');\n    });\n  }\n\n  /**\n   * Get a list of unassigned Dev-New tasks\n   * @returns List of unassigned Dev-New tasks\n   */\n  getUnassignedDevNewTasks(): WorkItem[] {\n    // Use our improved getDevNewTasks method and filter for unassigned\n    return this.getDevNewTasks().filter(task => !task.assignedTo);\n  }\n  \n  /**\n   * Get a summary of task status distribution\n   * @returns Array of status counts\n   */\n  getStatusDistribution(): {status: string, count: number}[] {\n    const statusCounts: {[key: string]: number} = {};\n    \n    this.filteredTasks.forEach(task => {\n      const status = task.status || 'Unknown';\n      statusCounts[status] = (statusCounts[status] || 0) + 1;\n    });\n    \n    return Object.entries(statusCounts).map(([status, count]) => ({\n      status, \n      count\n    })).sort((a, b) => b.count - a.count);\n  }\n\n  /**\n   * Filter tasks to only show those assigned to R&D team members\n   */\n  filterTasksByRnDTeamMembers(): void {\n    // If team filter is not applied, show all tasks\n    if (!this.applyTeamFilter) {\n      this.filteredTasks = this.tasks;\n      console.log(`Team filter disabled. Showing all ${this.tasks.length} tasks.`);\n      return;\n    }\n    \n    // First ensure we have filtered team members\n    if (this.filteredTeamMembers.length === 0) {\n      this.filterRnDTeamMembers();\n    }\n    \n    // Get a list of display names of filtered R&D team members\n    const rndMemberNames = this.filteredTeamMembers.map(member => \n      member.displayName.toLowerCase()\n    );\n    \n    console.log('R&D team member names for task filtering:', rndMemberNames);\n    \n    // Filter tasks to only include those assigned to R&D members and unassigned tasks\n    this.filteredTasks = this.tasks.filter(task => {\n      // Always include unassigned tasks\n      if (!task.assignedTo) {\n        return true;\n      }\n      \n      // Check if task is assigned to an R&D team member\n      return rndMemberNames.includes(task.assignedTo.toLowerCase());\n    });\n    \n    console.log(`Filtered ${this.tasks.length} tasks down to ${this.filteredTasks.length} tasks assigned to R&D members or unassigned`);\n  }\n\n  /**\n   * Generates an Azure DevOps URL for a specific work item ID\n   * @param taskId The ID of the work item to link to\n   * @returns A URL to the work item in Azure DevOps\n   */\n  getAzureDevOpsTaskUrl(taskId: number): string {\n    return `${this.azureDevOpsUrl}/${this.organization}/${this.project}/_workitems/edit/${taskId}/`;\n  }\n\n  /**\n   * Open task in Azure DevOps in a new tab\n   * @param taskId The ID of the task to open\n   * @param event The click event\n   */\n  openTaskInAzureDevOps(taskId: number, event: Event): void {\n    // Prevent default behavior to avoid interference with other actions\n    event.preventDefault();\n    event.stopPropagation();\n    \n    // Open task in new tab\n    const url = this.getAzureDevOpsTaskUrl(taskId);\n    window.open(url, '_blank');\n    \n    console.log(`Opening task ${taskId} in Azure DevOps`);\n  }\n\n  /**\n   * Show popup with tasks for a specific team member\n   * @param event Click event\n   * @param memberName Name of the team member\n   */\n  showMemberTasks(event: MouseEvent, memberName: string): void {\n    // Prevent event propagation to avoid immediate closing\n    event.preventDefault();\n    event.stopPropagation();\n    \n    console.log(`Showing tasks for ${memberName}, fetching from ${this.tasks.length} total tasks`);\n    \n    // Get tasks for this member - search in all tasks, not just filtered tasks\n    this.selectedMemberTasks = this.tasks.filter(\n      task => task.assignedTo && task.assignedTo.toLowerCase() === memberName.toLowerCase()\n    );\n    \n    this.selectedMemberName = memberName;\n    \n    // Calculate popup position - position it near the clicked element but ensure it's visible\n    const clickedElement = event.currentTarget as HTMLElement;\n    const rect = clickedElement.getBoundingClientRect();\n    \n    // Adjust position to ensure popup is visible within viewport\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const popupWidth = 400; // Same as in CSS\n    const popupHeight = Math.min(300, this.selectedMemberTasks.length * 50 + 100); // Rough estimate\n    \n    // Position popup below the badge, but adjust if near viewport edges\n    let left = rect.left;\n    if (left + popupWidth > viewportWidth) {\n      left = Math.max(10, viewportWidth - popupWidth - 10);\n    }\n    \n    let top = rect.bottom + window.scrollY;\n    if (top + popupHeight > viewportHeight + window.scrollY) {\n      // Position above if not enough space below\n      top = Math.max(10 + window.scrollY, rect.top + window.scrollY - popupHeight);\n    }\n    \n    this.popupPosition = { top, left };\n    \n    // Make sure popup is shown\n    this.showTaskPopup = true;\n    \n    console.log(`Showing tasks popup for ${memberName}: ${this.selectedMemberTasks.length} tasks at position:`, this.popupPosition);\n  }\n  \n  /**\n   * Close the task popup when clicking outside\n   */\n  @HostListener('document:click', ['$event'])\n  closePopup(event?: MouseEvent): void {\n    if (!event) return;\n    \n    // Don't close if this is the initial click that opened the popup or modal\n    if (event.target && (\n        (event.target as HTMLElement).closest('.task-count-badge') ||\n        (event.target as HTMLElement).closest('.member-name-link')\n      )) {\n      return;\n    }\n    \n    // Close task popup if it's open and click is outside\n    if (this.showTaskPopup && !(event.target as HTMLElement).closest('.task-popup')) {\n      this.showTaskPopup = false;\n    }\n    \n    // Close member modal if it's open and click is outside\n    if (this.showMemberModal && !(event.target as HTMLElement).closest('.member-modal-content')) {\n      this.closeMemberModal();\n    }\n  }\n  \n  /**\n   * Prevent popup from closing when clicking inside it\n   * @param event Click event\n   */\n  keepPopupOpen(event: Event): void {\n    event.stopPropagation();\n  }\n\n  /**\n   * Show modal with tasks for a specific team member\n   * @param event Click event \n   * @param memberName Name of the team member\n   */\n  showMemberTasksModal(event: MouseEvent | KeyboardEvent, memberName: string): void {\n    // Prevent default behavior\n    event.preventDefault();\n    \n    // Store the last focused element for when we close the modal\n    this.lastFocusedElement = document.activeElement as HTMLElement;\n    \n    console.log(`Showing modal for ${memberName}, fetching from ${this.tasks.length} total tasks`);\n    \n    // Set loading state\n    this.loading.memberTasks = true;\n    this.error.memberTasks = null;\n    \n    // Clear previous data\n    this.selectedModalMemberTasks = [];\n    this.selectedModalMemberName = memberName;\n    \n    // Show the modal\n    this.showMemberModal = true;\n    \n    // Get tasks for this member - search in all tasks, not just filtered tasks\n    // We'll simulate an async call to match requirements\n    setTimeout(() => {\n      this.selectedModalMemberTasks = this.tasks.filter(\n        task => task.assignedTo && task.assignedTo.toLowerCase() === memberName.toLowerCase()\n      );\n      \n      this.loading.memberTasks = false;\n      \n      // Focus the close button in the modal for accessibility\n      setTimeout(() => {\n        const closeButton = document.querySelector('.member-modal-close') as HTMLElement;\n        if (closeButton) {\n          closeButton.focus();\n        }\n      }, 100);\n      \n      console.log(`Loaded ${this.selectedModalMemberTasks.length} tasks for ${memberName} in modal`);\n    }, 500); // Simulate network delay\n  }\n  \n  /**\n   * Close the member tasks modal\n   */\n  closeMemberModal(): void {\n    this.showMemberModal = false;\n    \n    // Return focus to the last focused element\n    setTimeout(() => {\n      if (this.lastFocusedElement) {\n        this.lastFocusedElement.focus();\n      }\n    }, 100);\n  }\n  \n  /**\n   * Handle keyboard interaction in the modal for accessibility\n   * @param event Keyboard event\n   */\n  handleModalKeydown(event: KeyboardEvent): void {\n    // Close modal on Escape key\n    if (event.key === 'Escape') {\n      this.closeMemberModal();\n    }\n    \n    // Trap focus inside the modal for accessibility\n    if (event.key === 'Tab') {\n      const modal = document.querySelector('.member-modal') as HTMLElement;\n      if (!modal) return;\n      \n      const focusableElements = modal.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n      \n      if (focusableElements.length === 0) return;\n      \n      const firstElement = focusableElements[0] as HTMLElement;\n      const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n      \n      if (event.shiftKey && document.activeElement === firstElement) {\n        // If shift+tab and focus is on first element, move to last element\n        event.preventDefault();\n        lastElement.focus();\n      } else if (!event.shiftKey && document.activeElement === lastElement) {\n        // If tab and focus is on last element, move to first element\n        event.preventDefault();\n        firstElement.focus();\n      }\n    }\n  }\n}","<div class=\"container-fluid p-4\">\n  <div class=\"row mb-4\">\n    <div class=\"col-12\">\n      <div class=\"d-flex justify-content-between align-items-center\">\n        <h2 class=\"mb-0\">Task Distribution</h2>\n        <div>\n          <!-- Manual Input Form -->\n          <div class=\"search-section\">\n            <!-- Grouped inputs with blue background -->\n            <div class=\"input-group-container\">\n              <!-- Team Filter Checkbox and Label -->\n              <div class=\"filter-checkbox\">\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"applyTeamFilter\" [(ngModel)]=\"applyTeamFilter\"\n                  [disabled]=\"loading.tasks || loading.members\">\n                <label class=\"form-check-label\" for=\"applyTeamFilter\">Apply Team Filter</label>\n              </div>\n              \n              <!-- Team Name Input -->\n              <div class=\"search-input team-input\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Team Name\" [(ngModel)]=\"teamName\" \n                  [disabled]=\"loading.tasks || loading.members\">\n                <small class=\"text-muted\">TeamName</small>\n              </div>\n              \n              <!-- Iteration Path Input -->\n              <div class=\"search-input\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Iteration Path\" [(ngModel)]=\"manualIterationPath\" \n                  [disabled]=\"loading.tasks || loading.members\" list=\"iterationPathsList\">\n                <small class=\"text-muted\">IterationPath</small>\n                \n                <!-- Datalist for iteration path suggestions -->\n                <datalist id=\"iterationPathsList\">\n                  <option *ngFor=\"let path of iterationPaths\" [value]=\"path\"></option>\n                </datalist>\n              </div>\n              \n              <!-- Search Button -->\n              <button class=\"btn btn-primary search-btn\" (click)=\"searchClicked()\" [disabled]=\"loading.tasks || loading.members\">\n                <i class=\"bi bi-search me-1\"></i>\n                <span *ngIf=\"!loading.tasks && !loading.members\">Search</span>\n                <span *ngIf=\"loading.tasks || loading.members\">\n                  <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                  Loading...\n                </span>\n              </button>\n            </div>\n            \n            <!-- Action Buttons -->\n            <div class=\"action-buttons\">\n              <!-- Auto Assign Button -->\n              <button class=\"btn btn-primary auto-assign-btn\" (click)=\"showAutoAssignPreview()\" [disabled]=\"loading.autoAssign || loading.preview\">\n                <i class=\"bi bi-magic\"></i> \n                <span *ngIf=\"!loading.autoAssign && !loading.preview\">Auto-Assign Tasks</span>\n                <span *ngIf=\"loading.preview\">\n                  <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                  Loading Preview...\n                </span>\n                <span *ngIf=\"loading.autoAssign\">\n                  <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                  Assigning...\n                </span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <p class=\"text-muted mt-2\">Manage and assign tasks for the current sprint</p>\n      <div *ngIf=\"error.autoAssign\" class=\"alert alert-danger\">{{ error.autoAssign }}</div>\n      <div *ngIf=\"error.iterationPaths\" class=\"alert alert-warning\">{{ error.iterationPaths }}</div>\n      <div *ngIf=\"error.tasks\" class=\"alert alert-danger\">{{ error.tasks }}</div>\n      <div *ngIf=\"error.members\" class=\"alert alert-danger\">{{ error.members }}</div>\n    </div>\n  </div>\n\n  <!-- Tab Navigation -->\n  <ul class=\"nav nav-tabs mb-4\" id=\"taskTabs\" role=\"tablist\">\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link active\" id=\"task-distribution-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#task-distribution\" type=\"button\" role=\"tab\" aria-controls=\"task-distribution\" aria-selected=\"true\" (click)=\"onTabChange('distribution')\">\n        <i class=\"bi bi-list-task me-2\"></i>Task Distribution\n      </button>\n    </li>\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link\" id=\"task-workload-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#task-workload\" type=\"button\" role=\"tab\" aria-controls=\"task-workload\" aria-selected=\"false\" (click)=\"onTabChange('workload')\">\n        <i class=\"bi bi-bar-chart-line me-2\"></i>Task Workload\n      </button>\n    </li>\n  </ul>\n\n  <!-- Tab Content -->\n  <div class=\"tab-content\" id=\"taskTabsContent\">\n    <!-- Task Distribution Tab -->\n    <div class=\"tab-pane fade show active\" id=\"task-distribution\" role=\"tabpanel\" aria-labelledby=\"task-distribution-tab\">\n      <!-- Tasks Table -->\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div *ngIf=\"loading.tasks\" class=\"text-center py-4\">\n                <div class=\"spinner-border text-primary\" role=\"status\">\n                  <span class=\"visually-hidden\">Loading tasks...</span>\n                </div>\n              </div>\n\n              <div *ngIf=\"error.tasks\" class=\"alert alert-danger\">{{ error.tasks }}</div>\n\n              <div *ngIf=\"!loading.tasks && !error.tasks && tasks.length === 0\" class=\"text-center py-4\">\n                <p class=\"text-muted\">No tasks found for the current iteration path.</p>\n              </div>\n\n              <div *ngIf=\"!loading.tasks && !error.tasks && tasks.length > 0\" class=\"table-responsive\">\n                <table class=\"table table-hover\">\n                  <thead>\n                    <tr>\n                      <th>ID</th>\n                      <th>Title</th>\n                      <th>Priority</th>\n                      <th>Assigned To</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr *ngFor=\"let task of filteredTasks\">\n                      <td>\n                        <a href=\"#\" (click)=\"openTaskInAzureDevOps(task.id, $event)\" class=\"task-id-link\">{{ task.id }}</a>\n                      </td>\n                      <td>{{ task.title }}</td>\n                      <td>\n                        <span class=\"badge rounded-pill\" [ngClass]=\"getPriorityClass(task.priority)\">\n                          {{ task.priority }}\n                        </span>\n                      </td>\n                      <td>\n                        <div class=\"d-flex align-items-center\">\n                          <span *ngIf=\"task.assignedTo\" class=\"me-2\">{{ task.assignedTo }}</span>\n                          <span *ngIf=\"!task.assignedTo\" class=\"text-muted me-2\">Unassigned</span>\n                          <div *ngIf=\"task.autoAssignSuggestion\" class=\"ms-1 suggestion-box\">\n                            <small class=\"text-primary\">\n                              <i class=\"bi bi-lightbulb-fill\"></i> \n                              Suggest: {{ task.autoAssignSuggestion }}\n                            </small>\n                          </div>\n                        </div>\n                      </td>\n\n                      <td>\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"openAssignModal(task.id)\">\n                          <i class=\"bi bi-person-plus\"></i> Assign\n                        </button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Task Workload Tab -->\n    <div class=\"tab-pane fade\" id=\"task-workload\" role=\"tabpanel\" aria-labelledby=\"task-workload-tab\">\n      <!-- Team Workload Overview -->\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header d-flex justify-content-between align-items-center\">\n              <h4 class=\"mb-0\">Team Workload</h4>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"loadTeamMembers(); loadTeamMemberTaskCounts()\">\n                <i class=\"bi bi-arrow-clockwise me-1\"></i> Refresh Data\n              </button>\n            </div>\n            <div class=\"card-body\">\n              <div *ngIf=\"loading.members\" class=\"text-center py-4\">\n                <div class=\"spinner-border text-primary\" role=\"status\">\n                  <span class=\"visually-hidden\">Loading team members...</span>\n                </div>\n              </div>\n\n              <div *ngIf=\"error.members\" class=\"alert alert-danger\">{{ error.members }}</div>\n\n              <div *ngIf=\"!loading.members && !error.members && filteredTeamMembers.length === 0\" class=\"text-center py-4\">\n                <p class=\"text-muted\">No team members found for the current iteration path.</p>\n              </div>\n\n              <div *ngIf=\"!loading.members && !error.members && filteredTeamMembers.length > 0\" class=\"row\">\n                <div *ngFor=\"let member of filteredTeamMembers\" class=\"col-md-3 col-sm-6 mb-3\">\n                  <div class=\"card team-member-card h-100\" [ngClass]=\"{'bg-light': getTaskCount(member.displayName) === 0}\">\n                    <div class=\"card-body\">\n                      <h5 class=\"card-title\">\n                        <a href=\"#\" class=\"member-name-link\" (click)=\"showMemberTasksModal($event, member.displayName)\" \n                           [attr.aria-label]=\"'View ' + member.displayName + '\\'s tasks'\">\n                          {{ member.displayName }}\n                        </a>\n                      </h5>\n                      <div class=\"workload-stats mt-2\">\n                        <span class=\"badge rounded-pill task-count-badge\" \n                              [ngClass]=\"getTeamMemberWorkloadClass(getTaskCount(member.displayName))\"\n                              (click)=\"showMemberTasks($event, member.displayName)\"\n                              style=\"cursor: pointer;\">\n                          {{ getTaskCount(member.displayName) }} Tasks\n                        </span>\n                      </div>\n                      <div class=\"progress mt-2\">\n                        <div class=\"progress-bar\" \n                            [ngClass]=\"getProgressBarClass(getTaskCount(member.displayName))\"\n                            [style.width.%]=\"getWorkloadPercentage(getTaskCount(member.displayName))\" \n                            role=\"progressbar\" \n                            [attr.aria-valuenow]=\"getTaskCount(member.displayName)\" \n                            aria-valuemin=\"0\" \n                            aria-valuemax=\"10\">\n                        </div>\n                      </div>\n                      <div *ngIf=\"member.email\" class=\"text-muted mt-2 small\">\n                        <i class=\"bi bi-envelope\"></i> {{ member.email }}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Assign Task Modal -->\n  <div class=\"modal\" [ngClass]=\"{'show': selectedTask !== null}\" [style.display]=\"selectedTask !== null ? 'block' : 'none'\" tabindex=\"-1\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\">Assign Task</h5>\n          <button type=\"button\" class=\"btn-close\" (click)=\"cancelAssign()\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <div *ngIf=\"error.assign\" class=\"alert alert-danger mb-3\">{{ error.assign }}</div>\n          \n          <div *ngIf=\"selectedTask !== null\">\n            <div class=\"mb-3\">\n              <label class=\"form-label fw-bold\">Task ID</label>\n              <div class=\"py-2 px-3 bg-light rounded\">{{ selectedTask }}</div>\n            </div>\n            \n            <div class=\"mb-3\">\n              <label class=\"form-label fw-bold\">Task Title</label>\n              <div class=\"py-2 px-3 bg-light rounded\">\n                {{ getSelectedTaskTitle() }}\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"mb-4\">\n            <label for=\"teamMemberSelect\" class=\"form-label fw-bold mb-2\">Select Team Member</label>\n            \n            <!-- Team Member Selection List -->\n            <div class=\"team-member-options\">\n              <div class=\"form-check mb-2 border p-2 rounded\" *ngFor=\"let member of filteredTeamMembers\">\n                <input \n                  class=\"form-check-input\" \n                  type=\"radio\" \n                  [id]=\"'member-' + member.id\" \n                  [value]=\"member.displayName\" \n                  [(ngModel)]=\"selectedMember\" \n                  name=\"teamMemberRadio\">\n                <label class=\"form-check-label w-100\" [attr.for]=\"'member-' + member.id\">\n                  <div class=\"d-flex justify-content-between align-items-center\">\n                    <span class=\"member-name\">{{ member.displayName }}</span>\n                    <span class=\"badge rounded-pill\" [ngClass]=\"getTeamMemberWorkloadClass(getTaskCount(member.displayName))\">\n                      {{ getTaskCount(member.displayName) }} Tasks\n                    </span>\n                  </div>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cancelAssign()\">Cancel</button>\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"assignTask()\" [disabled]=\"loading.assign || !selectedMember\">\n            <span *ngIf=\"!loading.assign\">Assign</span>\n            <span *ngIf=\"loading.assign\">\n              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n              Assigning...\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-backdrop fade show\" *ngIf=\"selectedTask !== null\"></div>\n  \n  <!-- Auto-Assign Preview Modal -->\n  <div class=\"modal\" [ngClass]=\"{'show': showingPreview}\" [style.display]=\"showingPreview ? 'block' : 'none'\" tabindex=\"-1\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <h5 class=\"modal-title\">\n            <i class=\"bi bi-magic me-2\"></i> Auto-Assign Preview\n          </h5>\n          <button type=\"button\" class=\"btn-close btn-close-white\" (click)=\"cancelAutoAssignPreview()\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <div *ngIf=\"error.preview\" class=\"alert alert-danger mb-3\">{{ error.preview }}</div>\n          \n          <div class=\"alert alert-primary mb-3\">\n            <i class=\"bi bi-info-circle me-2\"></i>\n            <strong>Preview Mode:</strong> Review AI-suggested assignments before confirming. No changes will be made until you click \"Confirm & Assign\".\n          </div>\n          \n          <!-- Loading state -->\n          <div *ngIf=\"loading.preview\" class=\"text-center py-4\">\n            <div class=\"spinner-border text-primary\" role=\"status\">\n              <span class=\"visually-hidden\">Loading assignment suggestions...</span>\n            </div>\n            <p class=\"mt-2\">Analyzing tasks and developer performance...</p>\n          </div>\n          \n          <!-- No tasks to assign -->\n          <div *ngIf=\"!loading.preview && assignPreviewTasks.length === 0\" class=\"alert alert-info\">\n            <i class=\"bi bi-info-circle me-2\"></i>\n            No \"Dev-New\" tasks available for assignment.\n          </div>\n          \n          <!-- Debugging information -->\n          <div *ngIf=\"!loading.preview && assignPreviewTasks.length === 0\" class=\"mt-3\">\n            <div class=\"accordion\" id=\"debugAccordion\">\n              <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\" id=\"headingOne\">\n                  <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"false\" aria-controls=\"collapseOne\">\n                    <i class=\"bi bi-bug me-2\"></i> Debug Information\n                  </button>\n                </h2>\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#debugAccordion\">\n                  <div class=\"accordion-body\">\n                    <h6>Total Tasks: {{ tasks.length }}</h6>\n                    <h6>Total Tasks: {{ filteredTasks.length }} (filtered from {{ tasks.length }} total)</h6>\n                    <div *ngIf=\"filteredTasks.length > 0\">\n                      <h6>Status Distribution:</h6>\n                      <ul>\n                        <li *ngFor=\"let status of getStatusDistribution()\">\n                          {{ status.status }}: {{ status.count }}\n                        </li>\n                      </ul>\n                      \n                      <h6>Dev-New Tasks ({{ getDevNewTasks().length }}):</h6>\n                      <div class=\"table-responsive\" *ngIf=\"getDevNewTasks().length > 0\">\n                        <table class=\"table table-sm table-bordered\">\n                          <thead>\n                            <tr>\n                              <th>ID</th>\n                              <th>Title</th>\n                              <th>Status</th>\n                              <th>Assigned To</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let task of getDevNewTasks()\">\n                              <td>\n                                <a href=\"#\" (click)=\"openTaskInAzureDevOps(task.id, $event)\" class=\"task-id-link\">{{ task.id }}</a>\n                              </td>\n                              <td>{{ task.title }}</td>\n                              <td>{{ task.status }}</td>\n                              <td>{{ task.assignedTo || 'Unassigned' }}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      \n                      <div *ngIf=\"getDevNewTasks().length === 0\" class=\"alert alert-warning\">\n                        No tasks with 'Dev-New' status found in the data.\n                      </div>\n                      \n                      <div *ngIf=\"getUnassignedDevNewTasks().length === 0 && getDevNewTasks().length > 0\" class=\"alert alert-warning\">\n                        Found {{ getDevNewTasks().length }} Dev-New tasks, but all are already assigned.\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Preview table -->\n          <div *ngIf=\"!loading.preview && assignPreviewTasks.length > 0\">\n            <div class=\"table-responsive\">\n              <table class=\"table table-hover\">\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>Type</th>\n                    <th>Title</th>\n                    <th>Status</th>\n                    <th>Current Assignee</th>\n                    <th>Suggested Assignee</th>\n                    <th>Assignment Logic</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let task of assignPreviewTasks\">\n                    <td>\n                      <a href=\"#\" (click)=\"openTaskInAzureDevOps(task.id, $event)\" class=\"task-id-link\">{{ task.id }}</a>\n                    </td>\n                    <td>\n                      <span class=\"badge bg-info text-dark\">{{ task.type }}</span>\n                    </td>\n                    <td>{{ task.title }}</td>\n                    <td>\n                      <span class=\"badge bg-secondary\">{{ task.status }}</span>\n                    </td>\n                    <td>\n                      <span *ngIf=\"task.assignedTo\" class=\"text-muted\">{{ task.assignedTo }}</span>\n                      <span *ngIf=\"!task.assignedTo\" class=\"badge bg-warning text-dark\">Unassigned</span>\n                    </td>\n                    <td>\n                      <ng-container *ngIf=\"assignPreviewSuggestions[task.id]\">\n                        <div class=\"d-flex align-items-center\">\n                          <span class=\"badge bg-success me-2\">AI Pick</span>\n                          <strong>{{ extractDeveloperName(assignPreviewSuggestions[task.id]) }}</strong>\n                          <span *ngIf=\"extractDeveloperName(assignPreviewSuggestions[task.id]) !== task.assignedTo && task.assignedTo\" \n                                class=\"ms-2 badge bg-warning text-dark\">Reassignment</span>\n                        </div>\n                      </ng-container>\n                      <span *ngIf=\"!assignPreviewSuggestions[task.id]\" class=\"text-muted\">No suggestion available</span>\n                    </td>\n                    <td>\n                      <span *ngIf=\"assignPreviewSuggestions[task.id]\" class=\"text-muted small\">\n                        {{ extractLogicExplanation(assignPreviewSuggestions[task.id]) }}\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            \n            <!-- Assignment Logic Legend -->\n            <div class=\"mt-4\">\n              <h6>Assignment Logic Explanation:</h6>\n              <ul class=\"list-unstyled row\">\n                <li class=\"col-md-6 mb-2\">\n                  <i class=\"bi bi-trophy text-warning me-2\"></i>\n                  <small><strong>Past Expertise</strong> - Developer has completed similar tasks in the past 3 months</small>\n                </li>\n                <li class=\"col-md-6 mb-2\">\n                  <i class=\"bi bi-check-circle text-success me-2\"></i>\n                  <small><strong>Recently Completed</strong> - Developer has recently completed all assigned tasks</small>\n                </li>\n                <li class=\"col-md-6 mb-2\">\n                  <i class=\"bi bi-speedometer2 text-info me-2\"></i>\n                  <small><strong>Lowest Workload</strong> - Developer has the fewest assigned tasks</small>\n                </li>\n                <li class=\"col-md-6 mb-2\">\n                  <i class=\"bi bi-person text-secondary me-2\"></i>\n                  <small><strong>Default Assignment</strong> - Task assigned to available developer when no other criteria met</small>\n                </li>\n              </ul>\n            </div>\n            \n            <!-- Statistics -->\n            <div class=\"mt-3 p-3 bg-light rounded\">\n              <h6>Assignment Summary:</h6>\n              <div class=\"row\">\n                <div class=\"col-md-3\">\n                  <div class=\"d-flex align-items-center mb-2\">\n                    <i class=\"bi bi-trophy text-warning me-2\"></i>\n                    <span>{{ getAssignmentsByReason('expertise') }} task(s) by expertise</span>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <div class=\"d-flex align-items-center mb-2\">\n                    <i class=\"bi bi-check-circle text-success me-2\"></i>\n                    <span>{{ getAssignmentsByReason('completed') }} task(s) to recently available developers</span>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <div class=\"d-flex align-items-center mb-2\">\n                    <i class=\"bi bi-speedometer2 text-info me-2\"></i>\n                    <span>{{ getAssignmentsByReason('workload') }} task(s) by workload balancing</span>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <div class=\"d-flex align-items-center mb-2\">\n                    <i class=\"bi bi-person text-secondary me-2\"></i>\n                    <span>{{ getAssignmentsByReason('default') }} task(s) by default assignment</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cancelAutoAssignPreview()\">Cancel</button>\n          <button \n            type=\"button\" \n            class=\"btn btn-primary\" \n            (click)=\"confirmAutoAssign()\" \n            [disabled]=\"loading.autoAssign || !assignPreviewTasks || assignPreviewTasks.length === 0 || !hasAssignmentSuggestions()\">\n            <i class=\"bi bi-magic me-2\"></i>\n            <span *ngIf=\"!loading.autoAssign\">Confirm & Assign</span>\n            <span *ngIf=\"loading.autoAssign\">\n              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n              Assigning...\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-backdrop fade show\" *ngIf=\"showingPreview\"></div>\n  \n  <!-- Task List Popup -->\n  <div class=\"task-popup\" *ngIf=\"showTaskPopup\" \n       (click)=\"keepPopupOpen($event)\"\n       [style.top.px]=\"popupPosition.top\" \n       [style.left.px]=\"popupPosition.left\">\n    <div class=\"task-popup-header\">\n      <h5>{{ selectedMemberName }}'s Tasks</h5>\n      <button type=\"button\" class=\"btn-close\" (click)=\"closePopup()\"></button>\n    </div>\n    <div class=\"task-popup-body\">\n      <div *ngIf=\"selectedMemberTasks.length === 0\" class=\"text-center py-3\">\n        <p class=\"text-muted mb-0\">No tasks found for this team member.</p>\n      </div>\n      <ul class=\"task-list\" *ngIf=\"selectedMemberTasks.length > 0\">\n        <li *ngFor=\"let task of selectedMemberTasks\" class=\"task-item\">\n          <div class=\"d-flex justify-content-between align-items-start\">\n            <div>\n              <a href=\"#\" (click)=\"openTaskInAzureDevOps(task.id, $event)\" class=\"task-id-link\">{{ task.id }}</a>\n              <span class=\"ms-2\">{{ task.title }}</span>\n            </div>\n            <span class=\"status-badge\" [ngClass]=\"getStatusClass(task.status)\">\n              {{ task.status }}\n            </span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n  \n  <!-- Member Tasks Modal -->\n  <div class=\"member-modal-backdrop\" *ngIf=\"showMemberModal\" (click)=\"closeMemberModal()\">\n    <div class=\"member-modal\" (click)=\"$event.stopPropagation()\" (keydown)=\"handleModalKeydown($event)\" role=\"dialog\" aria-modal=\"true\" \n         [attr.aria-labelledby]=\"'memberModalTitle'\" tabindex=\"-1\">\n      <div class=\"member-modal-content\">\n        <div class=\"member-modal-header\">\n          <h2 class=\"member-modal-title\" id=\"memberModalTitle\">\n            <i class=\"bi bi-person-badge me-2\"></i>{{ selectedModalMemberName }}'s Tasks\n          </h2>\n          <button type=\"button\" class=\"member-modal-close\" aria-label=\"Close\" (click)=\"closeMemberModal()\">\n            <i class=\"bi bi-x\" style=\"font-size: 1.5rem;\"></i>\n          </button>\n        </div>\n        \n        <!-- Loading State -->\n        <div class=\"member-modal-loading\" *ngIf=\"loading.memberTasks\">\n          <div class=\"spinner\" role=\"status\"></div>\n          <p class=\"loading-text\">Loading tasks...</p>\n        </div>\n        \n        <!-- Error State -->\n        <div class=\"member-modal-error\" *ngIf=\"error.memberTasks\">\n          <i class=\"bi bi-exclamation-circle me-2\"></i>\n          {{ error.memberTasks }}\n        </div>\n        \n        <!-- Content -->\n        <div class=\"px-4 py-3\" *ngIf=\"!loading.memberTasks && !error.memberTasks\">\n          <!-- No Tasks Message -->\n          <div *ngIf=\"selectedModalMemberTasks.length === 0\" class=\"text-center py-4\">\n            <i class=\"bi bi-inbox text-muted\" style=\"font-size: 3rem;\"></i>\n            <p class=\"mt-3 text-muted\">No tasks assigned to {{ selectedModalMemberName }}</p>\n          </div>\n          \n          <!-- Task List -->\n          <ul class=\"member-task-list\" *ngIf=\"selectedModalMemberTasks.length > 0\">\n            <li *ngFor=\"let task of selectedModalMemberTasks\" class=\"task-item\">\n              <div class=\"task-header\">\n                <a href=\"#\" (click)=\"openTaskInAzureDevOps(task.id, $event)\" class=\"task-id\">#{{ task.id }}</a>\n                <span class=\"task-status\" [ngClass]=\"getStatusClass(task.status)\">{{ task.status }}</span>\n              </div>\n              <div class=\"task-title\">{{ task.title }}</div>\n            </li>\n          </ul>\n        </div>\n        \n        <div class=\"member-modal-footer\">\n          <button type=\"button\" class=\"member-modal-btn primary\" (click)=\"closeMemberModal()\">\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}