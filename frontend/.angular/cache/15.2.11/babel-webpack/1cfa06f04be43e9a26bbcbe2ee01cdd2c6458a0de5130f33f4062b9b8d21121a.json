{"ast":null,"code":"import { UserRole } from '../../models/settings.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../../services/settings.service\";\nexport class SettingsComponent {\n  constructor(authService, settingsService) {\n    this.authService = authService;\n    this.settingsService = settingsService;\n    this.loading = {\n      settings: false,\n      userRoles: false,\n      azureDevOps: false,\n      aiModel: false\n    };\n    this.error = {\n      settings: '',\n      userRoles: '',\n      azureDevOps: '',\n      aiModel: ''\n    };\n    // Role options for demo purposes\n    this.roleOptions = [{\n      value: UserRole.Admin,\n      label: 'Admin'\n    }, {\n      value: UserRole.ScrumMaster,\n      label: 'Scrum Master'\n    }, {\n      value: UserRole.Member,\n      label: 'Member'\n    }];\n    // For demo/testing - allow changing current user role\n    this.demoUserRole = UserRole.Admin;\n  }\n  ngOnInit() {\n    // Initialize with current user role\n    const currentUser = this.authService.currentUserValue;\n    if (currentUser) {\n      this.demoUserRole = currentUser.role;\n    }\n  }\n  // For demo purposes - change current user role\n  changeUserRole() {\n    this.authService.changeUserRole(this.demoUserRole);\n  }\n  static {\n    this.ɵfac = function SettingsComponent_Factory(t) {\n      return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.SettingsService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SettingsComponent,\n      selectors: [[\"app-settings\"]],\n      decls: 5,\n      vars: 0,\n      consts: [[1, \"container\"], [1, \"alert\", \"alert-info\"]],\n      template: function SettingsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Application Settings\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1);\n          i0.ɵɵtext(4, \" This feature is currently under development. Check back soon for application and integration configuration settings. \");\n          i0.ɵɵelementEnd()();\n        }\n      },\n      styles: [\"h2[_ngcontent-%COMP%] {\\n  margin-bottom: 1.5rem;\\n  color: #2c3e50;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  padding-top: 1.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbImgyIHtcclxuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XHJcbiAgY29sb3I6ICMyYzNlNTA7XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gIHBhZGRpbmctdG9wOiAxLjVyZW07XHJcbn0gIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AAGA,SAAsBA,QAAQ,QAAQ,6BAA6B;;;;AAOnE,OAAM,MAAOC,iBAAiB;EAyB5BC,YACSC,WAAwB,EACvBC,eAAgC;IADjC,gBAAW,GAAXD,WAAW;IACV,oBAAe,GAAfC,eAAe;IA1BzB,YAAO,GAAG;MACRC,QAAQ,EAAE,KAAK;MACfC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE,KAAK;MAClBC,OAAO,EAAE;KACV;IAED,UAAK,GAAG;MACNH,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE;KACV;IAED;IACA,gBAAW,GAAG,CACZ;MAAEC,KAAK,EAAET,QAAQ,CAACU,KAAK;MAAEC,KAAK,EAAE;IAAO,CAAE,EACzC;MAAEF,KAAK,EAAET,QAAQ,CAACY,WAAW;MAAED,KAAK,EAAE;IAAc,CAAE,EACtD;MAAEF,KAAK,EAAET,QAAQ,CAACa,MAAM;MAAEF,KAAK,EAAE;IAAQ,CAAE,CAC5C;IAED;IACA,iBAAY,GAAGX,QAAQ,CAACU,KAAK;EAKzB;EAEJI,QAAQ;IACN;IACA,MAAMC,WAAW,GAAG,IAAI,CAACZ,WAAW,CAACa,gBAAgB;IACrD,IAAID,WAAW,EAAE;MACf,IAAI,CAACE,YAAY,GAAGF,WAAW,CAACG,IAAI;;EAExC;EAEA;EACAC,cAAc;IACZ,IAAI,CAAChB,WAAW,CAACgB,cAAc,CAAC,IAAI,CAACF,YAAY,CAAC;EACpD;;;uBAzCWhB,iBAAiB;IAAA;EAAA;;;YAAjBA,iBAAiB;MAAAmB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCV9BC,8BAAuB;UACjBA,oCAAoB;UAAAA,iBAAK;UAC7BA,8BAA8B;UAC5BA,sIACF;UAAAA,iBAAM","names":["UserRole","SettingsComponent","constructor","authService","settingsService","settings","userRoles","azureDevOps","aiModel","value","Admin","label","ScrumMaster","Member","ngOnInit","currentUser","currentUserValue","demoUserRole","role","changeUserRole","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\settings\\settings.component.ts","E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\settings\\settings.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { SettingsService } from '../../services/settings.service';\r\nimport { SettingsDto, UserRole } from '../../models/settings.model';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  loading = {\r\n    settings: false,\r\n    userRoles: false,\r\n    azureDevOps: false,\r\n    aiModel: false\r\n  };\r\n  \r\n  error = {\r\n    settings: '',\r\n    userRoles: '',\r\n    azureDevOps: '',\r\n    aiModel: ''\r\n  };\r\n\r\n  // Role options for demo purposes\r\n  roleOptions = [\r\n    { value: UserRole.Admin, label: 'Admin' },\r\n    { value: UserRole.ScrumMaster, label: 'Scrum Master' },\r\n    { value: UserRole.Member, label: 'Member' }\r\n  ];\r\n\r\n  // For demo/testing - allow changing current user role\r\n  demoUserRole = UserRole.Admin;\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private settingsService: SettingsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize with current user role\r\n    const currentUser = this.authService.currentUserValue;\r\n    if (currentUser) {\r\n      this.demoUserRole = currentUser.role;\r\n    }\r\n  }\r\n\r\n  // For demo purposes - change current user role\r\n  changeUserRole(): void {\r\n    this.authService.changeUserRole(this.demoUserRole);\r\n  }\r\n} ","<div class=\"container\">\r\n  <h2>Application Settings</h2>\r\n  <div class=\"alert alert-info\">\r\n    This feature is currently under development. Check back soon for application and integration configuration settings.\r\n  </div>\r\n</div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}