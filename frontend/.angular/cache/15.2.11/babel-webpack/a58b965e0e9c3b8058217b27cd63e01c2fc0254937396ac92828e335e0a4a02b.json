{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/auth.service\";\nimport * as i2 from \"../../../services/settings.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction AiModelSettingsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AiModelSettingsComponent_div_5_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.error = \"\");\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction AiModelSettingsComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AiModelSettingsComponent_div_6_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.success = \"\");\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.success, \" \");\n  }\n}\nfunction AiModelSettingsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13)(2, \"span\", 14);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AiModelSettingsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelement(1, \"i\", 16);\n    i0.ɵɵtext(2, \" You do not have permission to view AI model settings. Contact an administrator. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"small\");\n    i0.ɵɵtext(2, \"Model provider is required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_20_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"API key is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtemplate(1, AiModelSettingsComponent_div_9_div_20_small_1_Template, 2, 0, \"small\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r10.aiModelForm.get(\"apiKey\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_21_div_4_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Endpoint URL is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_21_div_4_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Enter a valid URL\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_21_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtemplate(1, AiModelSettingsComponent_div_9_div_21_div_4_small_1_Template, 2, 0, \"small\", 8);\n    i0.ɵɵtemplate(2, AiModelSettingsComponent_div_9_div_21_div_4_small_2_Template, 2, 0, \"small\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r14.aiModelForm.get(\"endpoint\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r14.aiModelForm.get(\"endpoint\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"pattern\"]);\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"label\", 40);\n    i0.ɵɵtext(2, \"Endpoint URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 41);\n    i0.ɵɵtemplate(4, AiModelSettingsComponent_div_9_div_21_div_4_Template, 3, 2, \"div\", 24);\n    i0.ɵɵelementStart(5, \"small\", 35);\n    i0.ɵɵtext(6, \" For Azure OpenAI, use your deployment URL \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r11.aiModelForm.get(\"endpoint\")) == null ? null : tmp_0_0.invalid) && ((tmp_0_0 = ctx_r11.aiModelForm.get(\"endpoint\")) == null ? null : tmp_0_0.touched));\n  }\n}\nfunction AiModelSettingsComponent_div_9_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵelement(1, \"i\", 43);\n    i0.ɵɵtext(2, \" You can view AI model settings, but you need Admin or Scrum Master role to modify them. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AiModelSettingsComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 17);\n    i0.ɵɵlistener(\"ngSubmit\", function AiModelSettingsComponent_div_9_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.saveAiModelSettings());\n    });\n    i0.ɵɵelementStart(2, \"div\", 18)(3, \"label\", 19);\n    i0.ɵɵtext(4, \"AI Model Provider\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"select\", 20)(6, \"option\", 21);\n    i0.ɵɵtext(7, \"OpenAI\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"option\", 22);\n    i0.ɵɵtext(9, \"Azure OpenAI\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"option\", 23);\n    i0.ɵɵtext(11, \"Custom Model\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(12, AiModelSettingsComponent_div_9_div_12_Template, 3, 0, \"div\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 18)(14, \"label\", 25);\n    i0.ɵɵtext(15, \"API Key\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 26);\n    i0.ɵɵelement(17, \"input\", 27);\n    i0.ɵɵelementStart(18, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function AiModelSettingsComponent_div_9_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.toggleApiKeyVisibility());\n    });\n    i0.ɵɵelement(19, \"i\", 29);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(20, AiModelSettingsComponent_div_9_div_20_Template, 2, 1, \"div\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, AiModelSettingsComponent_div_9_div_21_Template, 7, 1, \"div\", 30);\n    i0.ɵɵelementStart(22, \"div\", 31)(23, \"div\", 32);\n    i0.ɵɵelement(24, \"input\", 33);\n    i0.ɵɵelementStart(25, \"label\", 34);\n    i0.ɵɵtext(26, \" Enable AI Recommendations \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"small\", 35);\n    i0.ɵɵtext(28, \" When enabled, the system will provide AI-powered recommendations for task estimation and assignment \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"button\", 36);\n    i0.ɵɵelement(30, \"i\", 37);\n    i0.ɵɵtext(31, \" Save AI Model Settings \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(32, AiModelSettingsComponent_div_9_div_32_Template, 3, 0, \"div\", 38);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r4.aiModelForm);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r4.aiModelForm.get(\"modelType\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r4.aiModelForm.get(\"modelType\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"type\", ctx_r4.showApiKey ? \"text\" : \"password\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r4.showApiKey ? \"bi-eye-slash\" : \"bi-eye\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r4.aiModelForm.get(\"apiKey\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx_r4.aiModelForm.get(\"apiKey\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r4.aiModelForm.get(\"modelType\")) == null ? null : tmp_5_0.value) === \"azureopenai\" || ((tmp_5_0 = ctx_r4.aiModelForm.get(\"modelType\")) == null ? null : tmp_5_0.value) === \"custom\");\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"disabled\", ctx_r4.aiModelForm.invalid || ctx_r4.loading || !ctx_r4.authService.canEditAiModelSettings());\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.authService.canEditAiModelSettings());\n  }\n}\nexport class AiModelSettingsComponent {\n  constructor(authService, settingsService, fb) {\n    this.authService = authService;\n    this.settingsService = settingsService;\n    this.fb = fb;\n    this.settings = null;\n    this.loading = false;\n    this.error = '';\n    this.success = '';\n  }\n  ngOnInit() {\n    this.loadSettings();\n  }\n  loadSettings() {\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n    this.settingsService.getAiModelSettings().subscribe({\n      next: settings => {\n        this.settings = settings;\n        this.loading = false;\n      },\n      error: err => {\n        this.error = err.message || 'Failed to load AI model settings';\n        this.loading = false;\n      }\n    });\n  }\n  toggleAutoUpdate() {\n    if (!this.authService.canEditAiModelSettings()) {\n      this.error = 'You do not have permission to update AI model settings';\n      return;\n    }\n    if (!this.settings) {\n      return;\n    }\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n    const newValue = !this.settings.enableAutoUpdate;\n    const request = {\n      enableAutoUpdate: newValue\n    };\n    this.settingsService.updateAiModelSettings(request).subscribe({\n      next: () => {\n        if (this.settings) {\n          this.settings.enableAutoUpdate = newValue;\n        }\n        this.success = `AI Model Auto-Update ${newValue ? 'enabled' : 'disabled'} successfully`;\n        this.loading = false;\n      },\n      error: err => {\n        this.error = err.message || 'Failed to update AI model settings';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function AiModelSettingsComponent_Factory(t) {\n      return new (t || AiModelSettingsComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.SettingsService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AiModelSettingsComponent,\n      selectors: [[\"app-ai-model-settings\"]],\n      decls: 10,\n      vars: 5,\n      consts: [[1, \"card\"], [1, \"card-header\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"alert alert-danger alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-success alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"d-flex justify-content-center mb-3\", 4, \"ngIf\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"alert-dismissible\", \"fade\", \"show\"], [\"type\", \"button\", 1, \"btn-close\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"alert-dismissible\", \"fade\", \"show\"], [1, \"d-flex\", \"justify-content-center\", \"mb-3\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"alert\", \"alert-warning\"], [1, \"bi\", \"bi-lock-fill\", \"me-2\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"modelType\", 1, \"form-label\"], [\"id\", \"modelType\", \"formControlName\", \"modelType\", 1, \"form-select\"], [\"value\", \"openai\"], [\"value\", \"azureopenai\"], [\"value\", \"custom\"], [\"class\", \"text-danger mt-1\", 4, \"ngIf\"], [\"for\", \"apiKey\", 1, \"form-label\"], [1, \"input-group\"], [\"id\", \"apiKey\", \"formControlName\", \"apiKey\", \"placeholder\", \"Enter your API key\", 1, \"form-control\", 3, \"type\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"bi\", 3, \"ngClass\"], [\"class\", \"mb-3\", 4, \"ngIf\"], [1, \"mb-4\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"id\", \"enableRecommendations\", \"formControlName\", \"enableRecommendations\", 1, \"form-check-input\"], [\"for\", \"enableRecommendations\", 1, \"form-check-label\"], [1, \"form-text\", \"text-muted\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"bi\", \"bi-check-circle\", \"me-1\"], [\"class\", \"alert alert-info mt-3\", 4, \"ngIf\"], [1, \"text-danger\", \"mt-1\"], [\"for\", \"endpoint\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"endpoint\", \"formControlName\", \"endpoint\", \"placeholder\", \"Enter the model endpoint URL\", 1, \"form-control\"], [1, \"alert\", \"alert-info\", \"mt-3\"], [1, \"bi\", \"bi-info-circle\", \"me-2\"]],\n      template: function AiModelSettingsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h5\", 2);\n          i0.ɵɵtext(3, \"AI Model Settings\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵtemplate(5, AiModelSettingsComponent_div_5_Template, 3, 1, \"div\", 4);\n          i0.ɵɵtemplate(6, AiModelSettingsComponent_div_6_Template, 3, 1, \"div\", 5);\n          i0.ɵɵtemplate(7, AiModelSettingsComponent_div_7_Template, 4, 0, \"div\", 6);\n          i0.ɵɵtemplate(8, AiModelSettingsComponent_div_8_Template, 3, 0, \"div\", 7);\n          i0.ɵɵtemplate(9, AiModelSettingsComponent_div_9_Template, 33, 8, \"div\", 8);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.success);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.authService.canViewAiModelSettings() && !ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.authService.canViewAiModelSettings() && !ctx.loading);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9haS1tb2RlbC1zZXR0aW5ncy9haS1tb2RlbC1zZXR0aW5ncy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1Q0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qIEFJIG1vZGVsIHNldHRpbmdzIGNvbXBvbmVudCBzdHlsZXMgKi8gIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;;;IAMIA,8BAAuF;IACrFA,YACA;IAAAA,kCAA6D;IAArBA;MAAAA;MAAA;MAAA,qCAAiB,EAAE;IAAA,EAAC;IAACA,iBAAS;;;;IADtEA,eACA;IADAA,6CACA;;;;;;IAGFA,+BAA0F;IACxFA,YACA;IAAAA,kCAA+D;IAAvBA;MAAAA;MAAA;MAAA,uCAAmB,EAAE;IAAA,EAAC;IAACA,iBAAS;;;;IADxEA,eACA;IADAA,+CACA;;;;;IAIFA,+BAAgE;IAE9BA,0BAAU;IAAAA,iBAAO;;;;;IAKnDA,+BAA2F;IACzFA,wBAAoC;IACpCA,iGACF;IAAAA,iBAAM;;;;;IAYAA,+BAAqH;IAC5GA,0CAA0B;IAAAA,iBAAQ;;;;;IAkBzCA,6BAA+D;IAAAA,mCAAmB;IAAAA,iBAAQ;;;;;IAD5FA,+BAA+G;IAC7GA,0FAA0F;IAC5FA,iBAAM;;;;;IADIA,eAAqD;IAArDA,gJAAqD;;;;;IAa7DA,6BAAiE;IAAAA,wCAAwB;IAAAA,iBAAQ;;;;;IACjGA,6BAAgE;IAAAA,iCAAiB;IAAAA,iBAAQ;;;;;IAF3FA,+BAAmH;IACjHA,gGAAiG;IACjGA,gGAAyF;IAC3FA,iBAAM;;;;;;IAFIA,eAAuD;IAAvDA,kJAAuD;IACvDA,eAAsD;IAAtDA,iJAAsD;;;;;IAVlEA,+BAAoI;IACzFA,4BAAY;IAAAA,iBAAQ;IAC7DA,4BAK6C;IAC7CA,uFAGM;IACNA,iCAAoC;IAClCA,2DACF;IAAAA,iBAAQ;;;;;IANFA,eAAkF;IAAlFA,+LAAkF;;;;;IA+B5FA,+BAAiF;IAC/EA,wBAAsC;IACtCA,yGACF;IAAAA,iBAAM;;;;;;IA1ERA,2BAA8D;IAC5BA;MAAAA;MAAA;MAAA,OAAYA,4CAAqB;IAAA,EAAC;IAChEA,+BAAkB;IAC0BA,iCAAiB;IAAAA,iBAAQ;IACnEA,kCAAuE;IAC9CA,sBAAM;IAAAA,iBAAS;IACtCA,kCAA4B;IAAAA,4BAAY;IAAAA,iBAAS;IACjDA,mCAAuB;IAAAA,6BAAY;IAAAA,iBAAS;IAE9CA,kFAEM;IACRA,iBAAM;IAENA,gCAAkB;IACuBA,wBAAO;IAAAA,iBAAQ;IACtDA,gCAAyB;IACvBA,6BAKmC;IACnCA,mCAA2F;IAAnCA;MAAAA;MAAA;MAAA,OAASA,+CAAwB;IAAA,EAAC;IACxFA,yBAAqE;IACvEA,iBAAS;IAEXA,kFAEM;IACRA,iBAAM;IAENA,kFAeM;IAENA,gCAAkB;IAEdA,6BAI0C;IAC1CA,kCAA4D;IAC1DA,4CACF;IAAAA,iBAAQ;IAEVA,kCAAoC;IAClCA,sHACF;IAAAA,iBAAQ;IAGVA,mCAAmI;IACjIA,yBAAuC;IAACA,yCAC1C;IAAAA,iBAAS;IAIXA,kFAGM;IACRA,iBAAM;;;;;;;IA1EEA,eAAyB;IAAzBA,8CAAyB;IAQrBA,gBAAoF;IAApFA,+LAAoF;IAStFA,eAAyC;IAAzCA,8DAAyC;IAM3BA,eAAkD;IAAlDA,uEAAkD;IAG9DA,eAA8E;IAA9EA,yLAA8E;IAKnEA,eAA+G;IAA/GA,0NAA+G;IAiCpFA,eAAoF;IAApFA,uHAAoF;IAM9HA,eAA2C;IAA3CA,mEAA2C;;;AC1FvD,OAAM,MAAOC,wBAAwB;EAMnCC,YACSC,WAAwB,EACvBC,eAAgC,EAChCC,EAAe;IAFhB,gBAAW,GAAXF,WAAW;IACV,oBAAe,GAAfC,eAAe;IACf,OAAE,GAAFC,EAAE;IARZ,aAAQ,GAA8B,IAAI;IAC1C,YAAO,GAAG,KAAK;IACf,UAAK,GAAG,EAAE;IACV,YAAO,GAAG,EAAE;EAMR;EAEJC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,OAAO,GAAG,EAAE;IAEjB,IAAI,CAACN,eAAe,CAACO,kBAAkB,EAAE,CAACC,SAAS,CAAC;MAClDC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;QACxB,IAAI,CAACN,OAAO,GAAG,KAAK;MACtB,CAAC;MACDC,KAAK,EAAGM,GAAG,IAAI;QACb,IAAI,CAACN,KAAK,GAAGM,GAAG,CAACC,OAAO,IAAI,kCAAkC;QAC9D,IAAI,CAACR,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;EAEAS,gBAAgB;IACd,IAAI,CAAC,IAAI,CAACd,WAAW,CAACe,sBAAsB,EAAE,EAAE;MAC9C,IAAI,CAACT,KAAK,GAAG,wDAAwD;MACrE;;IAGF,IAAI,CAAC,IAAI,CAACK,QAAQ,EAAE;MAClB;;IAGF,IAAI,CAACN,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,OAAO,GAAG,EAAE;IAEjB,MAAMS,QAAQ,GAAG,CAAC,IAAI,CAACL,QAAQ,CAACM,gBAAgB;IAEhD,MAAMC,OAAO,GAAiC;MAC5CD,gBAAgB,EAAED;KACnB;IAED,IAAI,CAACf,eAAe,CAACkB,qBAAqB,CAACD,OAAO,CAAC,CAACT,SAAS,CAAC;MAC5DC,IAAI,EAAE,MAAK;QACT,IAAI,IAAI,CAACC,QAAQ,EAAE;UACjB,IAAI,CAACA,QAAQ,CAACM,gBAAgB,GAAGD,QAAQ;;QAE3C,IAAI,CAACT,OAAO,GAAG,wBAAwBS,QAAQ,GAAG,SAAS,GAAG,UAAU,eAAe;QACvF,IAAI,CAACX,OAAO,GAAG,KAAK;MACtB,CAAC;MACDC,KAAK,EAAGM,GAAG,IAAI;QACb,IAAI,CAACN,KAAK,GAAGM,GAAG,CAACC,OAAO,IAAI,oCAAoC;QAChE,IAAI,CAACR,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;;;uBAlEWP,wBAAwB;IAAA;EAAA;;;YAAxBA,wBAAwB;MAAAsB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDXrC3B,8BAAkB;UAEGA,iCAAiB;UAAAA,iBAAK;UAEzCA,8BAAuB;UAErBA,yEAGM;UAENA,yEAGM;UAGNA,yEAIM;UAGNA,yEAGM;UAGNA,0EA2EM;UACRA,iBAAM;;;UApGEA,eAAW;UAAXA,gCAAW;UAKXA,eAAa;UAAbA,kCAAa;UAMbA,eAAa;UAAbA,kCAAa;UAObA,eAAuD;UAAvDA,gFAAuD;UAMvDA,eAAsD;UAAtDA,+EAAsD","names":["i0","AiModelSettingsComponent","constructor","authService","settingsService","fb","ngOnInit","loadSettings","loading","error","success","getAiModelSettings","subscribe","next","settings","err","message","toggleAutoUpdate","canEditAiModelSettings","newValue","enableAutoUpdate","request","updateAiModelSettings","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\settings\\ai-model-settings\\ai-model-settings.component.html","E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\settings\\ai-model-settings\\ai-model-settings.component.ts"],"sourcesContent":["<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <h5 class=\"mb-0\">AI Model Settings</h5>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- Error and success alerts -->\r\n    <div *ngIf=\"error\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n      {{ error }}\r\n      <button type=\"button\" class=\"btn-close\" (click)=\"error = ''\"></button>\r\n    </div>\r\n    \r\n    <div *ngIf=\"success\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n      {{ success }}\r\n      <button type=\"button\" class=\"btn-close\" (click)=\"success = ''\"></button>\r\n    </div>\r\n\r\n    <!-- Loading state -->\r\n    <div *ngIf=\"loading\" class=\"d-flex justify-content-center mb-3\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- No permission message -->\r\n    <div *ngIf=\"!authService.canViewAiModelSettings() && !loading\" class=\"alert alert-warning\">\r\n      <i class=\"bi bi-lock-fill me-2\"></i>\r\n      You do not have permission to view AI model settings. Contact an administrator.\r\n    </div>\r\n\r\n    <!-- AI Model Settings Form -->\r\n    <div *ngIf=\"authService.canViewAiModelSettings() && !loading\">\r\n      <form [formGroup]=\"aiModelForm\" (ngSubmit)=\"saveAiModelSettings()\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"modelType\" class=\"form-label\">AI Model Provider</label>\r\n          <select id=\"modelType\" class=\"form-select\" formControlName=\"modelType\">\r\n            <option value=\"openai\">OpenAI</option>\r\n            <option value=\"azureopenai\">Azure OpenAI</option>\r\n            <option value=\"custom\">Custom Model</option>\r\n          </select>\r\n          <div *ngIf=\"aiModelForm.get('modelType')?.invalid && aiModelForm.get('modelType')?.touched\" class=\"text-danger mt-1\">\r\n            <small>Model provider is required</small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"apiKey\" class=\"form-label\">API Key</label>\r\n          <div class=\"input-group\">\r\n            <input \r\n              [type]=\"showApiKey ? 'text' : 'password'\" \r\n              class=\"form-control\" \r\n              id=\"apiKey\" \r\n              formControlName=\"apiKey\"\r\n              placeholder=\"Enter your API key\">\r\n            <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"toggleApiKeyVisibility()\">\r\n              <i class=\"bi\" [ngClass]=\"showApiKey ? 'bi-eye-slash' : 'bi-eye'\"></i>\r\n            </button>\r\n          </div>\r\n          <div *ngIf=\"aiModelForm.get('apiKey')?.invalid && aiModelForm.get('apiKey')?.touched\" class=\"text-danger mt-1\">\r\n            <small *ngIf=\"aiModelForm.get('apiKey')?.errors?.['required']\">API key is required</small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mb-3\" *ngIf=\"aiModelForm.get('modelType')?.value === 'azureopenai' || aiModelForm.get('modelType')?.value === 'custom'\">\r\n          <label for=\"endpoint\" class=\"form-label\">Endpoint URL</label>\r\n          <input \r\n            type=\"text\" \r\n            class=\"form-control\" \r\n            id=\"endpoint\" \r\n            formControlName=\"endpoint\"\r\n            placeholder=\"Enter the model endpoint URL\">\r\n          <div *ngIf=\"aiModelForm.get('endpoint')?.invalid && aiModelForm.get('endpoint')?.touched\" class=\"text-danger mt-1\">\r\n            <small *ngIf=\"aiModelForm.get('endpoint')?.errors?.['required']\">Endpoint URL is required</small>\r\n            <small *ngIf=\"aiModelForm.get('endpoint')?.errors?.['pattern']\">Enter a valid URL</small>\r\n          </div>\r\n          <small class=\"form-text text-muted\">\r\n            For Azure OpenAI, use your deployment URL\r\n          </small>\r\n        </div>\r\n\r\n        <div class=\"mb-4\">\r\n          <div class=\"form-check\">\r\n            <input \r\n              class=\"form-check-input\" \r\n              type=\"checkbox\" \r\n              id=\"enableRecommendations\" \r\n              formControlName=\"enableRecommendations\">\r\n            <label class=\"form-check-label\" for=\"enableRecommendations\">\r\n              Enable AI Recommendations\r\n            </label>\r\n          </div>\r\n          <small class=\"form-text text-muted\">\r\n            When enabled, the system will provide AI-powered recommendations for task estimation and assignment\r\n          </small>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"aiModelForm.invalid || loading || !authService.canEditAiModelSettings()\">\r\n          <i class=\"bi bi-check-circle me-1\"></i> Save AI Model Settings\r\n        </button>\r\n      </form>\r\n\r\n      <!-- Info message about permissions -->\r\n      <div *ngIf=\"!authService.canEditAiModelSettings()\" class=\"alert alert-info mt-3\">\r\n        <i class=\"bi bi-info-circle me-2\"></i>\r\n        You can view AI model settings, but you need Admin or Scrum Master role to modify them.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> ","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { SettingsService } from '../../../services/settings.service';\r\nimport { AiModelSettingsDto, UpdateAiModelSettingsRequest } from '../../../models/settings.model';\r\n\r\n@Component({\r\n  selector: 'app-ai-model-settings',\r\n  templateUrl: './ai-model-settings.component.html',\r\n  styleUrls: ['./ai-model-settings.component.scss']\r\n})\r\nexport class AiModelSettingsComponent implements OnInit {\r\n  settings: AiModelSettingsDto | null = null;\r\n  loading = false;\r\n  error = '';\r\n  success = '';\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private settingsService: SettingsService,\r\n    private fb: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadSettings();\r\n  }\r\n\r\n  loadSettings(): void {\r\n    this.loading = true;\r\n    this.error = '';\r\n    this.success = '';\r\n\r\n    this.settingsService.getAiModelSettings().subscribe({\r\n      next: (settings) => {\r\n        this.settings = settings;\r\n        this.loading = false;\r\n      },\r\n      error: (err) => {\r\n        this.error = err.message || 'Failed to load AI model settings';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleAutoUpdate(): void {\r\n    if (!this.authService.canEditAiModelSettings()) {\r\n      this.error = 'You do not have permission to update AI model settings';\r\n      return;\r\n    }\r\n\r\n    if (!this.settings) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.error = '';\r\n    this.success = '';\r\n\r\n    const newValue = !this.settings.enableAutoUpdate;\r\n    \r\n    const request: UpdateAiModelSettingsRequest = {\r\n      enableAutoUpdate: newValue\r\n    };\r\n\r\n    this.settingsService.updateAiModelSettings(request).subscribe({\r\n      next: () => {\r\n        if (this.settings) {\r\n          this.settings.enableAutoUpdate = newValue;\r\n        }\r\n        this.success = `AI Model Auto-Update ${newValue ? 'enabled' : 'disabled'} successfully`;\r\n        this.loading = false;\r\n      },\r\n      error: (err) => {\r\n        this.error = err.message || 'Failed to update AI model settings';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}