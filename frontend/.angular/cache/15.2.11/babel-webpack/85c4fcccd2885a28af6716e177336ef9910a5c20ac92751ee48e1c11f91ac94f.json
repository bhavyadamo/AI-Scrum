{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/dashboard.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"stateDistributionChart\"];\nconst _c1 = [\"iterationDistributionChart\"];\nfunction DashboardComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"span\", 24);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction DashboardComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.error.sprint, \" \");\n  }\n}\nfunction DashboardComponent_div_17_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"div\", 33)(2, \"span\");\n    i0.ɵɵtext(3, \"Sprint Progress\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 34);\n    i0.ɵɵelement(8, \"div\", 35);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(6, 4, ctx_r22.sprintSummary.completionPercentage, \"1.0-0\"), \"%\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleProp(\"width\", ctx_r22.sprintSummary.completionPercentage, \"%\");\n    i0.ɵɵattribute(\"aria-valuenow\", ctx_r22.sprintSummary.completionPercentage);\n  }\n}\nfunction DashboardComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 27)(4, \"div\")(5, \"p\", 28);\n    i0.ɵɵtext(6, \"Start Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 29);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\")(11, \"p\", 28);\n    i0.ɵɵtext(12, \"End Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\", 29);\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\")(17, \"p\", 28);\n    i0.ɵɵtext(18, \"Days Remaining\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"p\", 30);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(21, DashboardComponent_div_17_div_21_Template, 9, 7, \"div\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.sprintOverview.sprintName);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 5, ctx_r2.sprintOverview.startDate, \"mediumDate\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 8, ctx_r2.sprintOverview.endDate, \"mediumDate\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.sprintOverview.daysRemaining);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.sprintSummary);\n  }\n}\nfunction DashboardComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"span\", 24);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction DashboardComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.error.aiTips, \" \");\n  }\n}\nfunction DashboardComponent_div_26_div_7_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 43)(1, \"div\", 44)(2, \"h6\", 45);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"small\", 39);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"p\", 46);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"small\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r25 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r25.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", item_r25.daysInState, \" days\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"ID: \", item_r25.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Assigned to: \", item_r25.assignedTo || \"Unassigned\", \"\");\n  }\n}\nfunction DashboardComponent_div_26_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"h6\", 39);\n    i0.ɵɵelement(2, \"i\", 40);\n    i0.ɵɵtext(3, \" Long-term Dev-New Items \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 41);\n    i0.ɵɵtemplate(5, DashboardComponent_div_26_div_7_a_5_Template, 10, 4, \"a\", 42);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r23.longTermDevNewItems);\n  }\n}\nfunction DashboardComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"div\", 37);\n    i0.ɵɵelement(2, \"i\", 38);\n    i0.ɵɵelementStart(3, \"h5\", 5);\n    i0.ɵɵtext(4, \"Daily Tip\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, DashboardComponent_div_26_div_7_Template, 6, 1, \"div\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r5.dailyTip);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.longTermDevNewItems && ctx_r5.longTermDevNewItems.length > 0);\n  }\n}\nfunction DashboardComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"span\", 24);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction DashboardComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.error.summary, \" \");\n  }\n}\nfunction DashboardComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 47)(2, \"div\", 48)(3, \"div\", 10)(4, \"h5\", 49);\n    i0.ɵɵtext(5, \"Total Tasks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"h2\", 50);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(8, \"div\", 47)(9, \"div\", 51)(10, \"div\", 10)(11, \"h5\", 49);\n    i0.ɵɵtext(12, \"In Progress\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"h2\", 50);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(15, \"div\", 47)(16, \"div\", 52)(17, \"div\", 10)(18, \"h5\", 49);\n    i0.ɵɵtext(19, \"Completed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"h2\", 50);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(22, \"div\", 47)(23, \"div\", 53)(24, \"div\", 10)(25, \"h5\", 49);\n    i0.ɵɵtext(26, \"Blocked\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"h2\", 50);\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r8.sprintSummary.totalTasks);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r8.sprintSummary.inProgress);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r8.sprintSummary.completed);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r8.sprintSummary.blocked);\n  }\n}\nfunction DashboardComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"span\", 24);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction DashboardComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.error.distribution, \" \");\n  }\n}\nfunction DashboardComponent_div_40_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"p\", 56);\n    i0.ɵɵtext(2, \"No work item data available for this iteration\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DashboardComponent_div_40_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵelement(1, \"canvas\", null, 58);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_40_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 61);\n    i0.ɵɵelement(1, \"div\", 62);\n    i0.ɵɵelementStart(2, \"span\", 63);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const state_r31 = ctx.$implicit;\n    const ctx_r30 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r30.getStateColor(state_r31.state));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", state_r31.state, \": \", state_r31.count, \"\");\n  }\n}\nfunction DashboardComponent_div_40_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 59);\n    i0.ɵɵtemplate(1, DashboardComponent_div_40_div_3_div_1_Template, 4, 4, \"div\", 60);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r28.workItemDistribution.states);\n  }\n}\nfunction DashboardComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DashboardComponent_div_40_div_1_Template, 3, 0, \"div\", 11);\n    i0.ɵɵtemplate(2, DashboardComponent_div_40_div_2_Template, 3, 0, \"div\", 54);\n    i0.ɵɵtemplate(3, DashboardComponent_div_40_div_3_Template, 2, 1, \"div\", 55);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.workItemDistribution.states.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.workItemDistribution.states.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.workItemDistribution.states.length > 0);\n  }\n}\nfunction DashboardComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"span\", 24);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction DashboardComponent_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r13.error.stateDistribution, \" \");\n  }\n}\nfunction DashboardComponent_div_49_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"p\", 56);\n    i0.ɵɵtext(2, \"No iteration data available\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DashboardComponent_div_49_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵelement(1, \"canvas\", null, 64);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DashboardComponent_div_49_div_1_Template, 3, 0, \"div\", 11);\n    i0.ɵɵtemplate(2, DashboardComponent_div_49_div_2_Template, 3, 0, \"div\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.stateDistributions.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.stateDistributions.length > 0);\n  }\n}\nfunction DashboardComponent_div_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"span\", 24);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction DashboardComponent_div_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r16.error.supportItems, \" \");\n  }\n}\nfunction DashboardComponent_div_59_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"p\", 56);\n    i0.ɵɵtext(2, \"No support items found in the last 6 months\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c2 = function (a0, a1, a2, a3) {\n  return {\n    \"bg-danger\": a0,\n    \"bg-warning text-dark\": a1,\n    \"bg-info text-dark\": a2,\n    \"bg-success\": a3\n  };\n};\nfunction DashboardComponent_div_59_div_2_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"span\", 69);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\")(9, \"span\", 70);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\")(15, \"span\", 70);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r38 = ctx.$implicit;\n    const ctx_r37 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r38.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r38.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r38.supportId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(11, _c2, item_r38.priority === 1, item_r38.priority === 2, item_r38.priority === 3, item_r38.priority === 4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" P\", item_r38.priority, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(13, 8, item_r38.createdDate, \"shortDate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r37.getStateColor(item_r38.state));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r38.state, \" \");\n  }\n}\nfunction DashboardComponent_div_59_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 66)(1, \"table\", 67)(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Support ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Priority\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Created\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15, \"State\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"tbody\");\n    i0.ɵɵtemplate(17, DashboardComponent_div_59_div_2_tr_17_Template, 17, 16, \"tr\", 68);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r36 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r36.supportItems);\n  }\n}\nfunction DashboardComponent_div_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DashboardComponent_div_59_div_1_Template, 3, 0, \"div\", 11);\n    i0.ɵɵtemplate(2, DashboardComponent_div_59_div_2_Template, 18, 1, \"div\", 65);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.supportItems.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.supportItems.length > 0);\n  }\n}\nfunction DashboardComponent_div_67_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"span\", 24);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction DashboardComponent_div_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.error.activity, \" \");\n  }\n}\nfunction DashboardComponent_div_69_li_2_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 79);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r40 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r40.details);\n  }\n}\nfunction DashboardComponent_div_69_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 73)(1, \"div\", 74)(2, \"div\")(3, \"span\", 75);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 76);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 77)(8, \"small\", 56);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(11, DashboardComponent_div_69_li_2_p_11_Template, 2, 1, \"p\", 78);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r40 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", \"bg-\" + (item_r40.type === \"Created\" ? \"success\" : item_r40.type === \"Updated\" ? \"info\" : item_r40.type === \"Commented\" ? \"warning\" : \"primary\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r40.type, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r40.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", item_r40.user, \" \\u00B7 \", i0.ɵɵpipeBind2(10, 6, item_r40.timestamp, \"short\"), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", item_r40.details);\n  }\n}\nfunction DashboardComponent_div_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ul\", 71);\n    i0.ɵɵtemplate(2, DashboardComponent_div_69_li_2_Template, 12, 9, \"li\", 72);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r20.activityFeed.activities);\n  }\n}\nfunction DashboardComponent_div_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 80)(1, \"p\", 56);\n    i0.ɵɵtext(2, \"No recent activity found\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class DashboardComponent {\n  constructor(dashboardService) {\n    this.dashboardService = dashboardService;\n    this.sprintOverview = null;\n    this.sprintSummary = null;\n    this.activityFeed = null;\n    this.dailyTip = '';\n    this.workItemDistribution = null;\n    this.stateDistributions = [];\n    this.longTermDevNewItems = [];\n    this.supportItems = [];\n    this.aiTips = null;\n    // Define state colors for consistency\n    this.stateColors = {\n      'Proposed': '#e6e6e6',\n      'New': '#b4d7a8',\n      'Dev-New': '#b4d7a8',\n      'Active': '#4a86e8',\n      'Dev-WIP': '#4a86e8',\n      'In Progress': '#4a86e8',\n      'Resolved': '#ffd966',\n      'Code Review': '#9fc5e8',\n      'QA': '#d5a6bd',\n      'Testing': '#d5a6bd',\n      'Done': '#93c47d',\n      'Closed': '#6aa84f',\n      'Completed': '#6aa84f',\n      'Blocked': '#e06666',\n      'Removed': '#999999'\n    };\n    // Default chart colors if state not found in mapping\n    this.defaultChartColors = ['#4a86e8', '#6aa84f', '#ffd966', '#e06666', '#9fc5e8', '#d5a6bd', '#b4d7a8', '#e6e6e6', '#93c47d', '#6fa8dc'];\n    // Track loading and error states\n    this.loading = {\n      sprint: true,\n      summary: true,\n      activity: true,\n      tip: true,\n      distribution: true,\n      stateDistribution: true,\n      longTermDevNew: true,\n      supportItems: true,\n      aiTips: true\n    };\n    this.error = {\n      sprint: '',\n      summary: '',\n      activity: '',\n      tip: '',\n      distribution: '',\n      stateDistribution: '',\n      longTermDevNew: '',\n      supportItems: '',\n      aiTips: ''\n    };\n    // Hard-coded iteration path as requested\n    this.selectedIterationPath = 'Techoil\\\\2.3.23';\n    this.availableIterationPaths = ['Techoil\\\\2.3.23'];\n  }\n  ngOnInit() {\n    this.loadDashboardData();\n  }\n  ngAfterViewInit() {\n    // Charts will be initialized after data is loaded\n  }\n  loadDashboardData() {\n    this.loadSprintOverview();\n    this.loadAiTips();\n  }\n  loadSprintOverview() {\n    this.loading.sprint = true;\n    this.dashboardService.getCurrentSprint().subscribe({\n      next: data => {\n        this.sprintOverview = data;\n        // Use hard-coded iteration path instead of data.iterationPath\n        // this.selectedIterationPath = data.iterationPath;\n        this.loading.sprint = false;\n        this.loadSprintSummary(this.selectedIterationPath);\n        this.loadActivityFeed();\n        this.loadWorkItemDistribution(this.selectedIterationPath);\n        this.loadStateDistributions();\n      },\n      error: err => {\n        this.error.sprint = 'Failed to load sprint data';\n        this.loading.sprint = false;\n        console.error('Error loading sprint data:', err);\n      }\n    });\n  }\n  loadSprintSummary(iterationPath) {\n    this.loading.summary = true;\n    this.dashboardService.getSprintSummary(iterationPath).subscribe({\n      next: data => {\n        this.sprintSummary = data;\n        this.loading.summary = false;\n      },\n      error: err => {\n        this.error.summary = 'Failed to load summary data';\n        this.loading.summary = false;\n        console.error('Error loading summary data:', err);\n      }\n    });\n  }\n  loadActivityFeed() {\n    this.loading.activity = true;\n    this.dashboardService.getActivityFeed().subscribe({\n      next: data => {\n        this.activityFeed = data;\n        this.loading.activity = false;\n      },\n      error: err => {\n        this.error.activity = 'Failed to load activity feed';\n        this.loading.activity = false;\n        console.error('Error loading activity feed:', err);\n      }\n    });\n  }\n  loadDailyTip() {\n    this.loading.tip = true;\n    this.dashboardService.getDailyTip().subscribe({\n      next: data => {\n        this.dailyTip = data.tip;\n        this.loading.tip = false;\n      },\n      error: err => {\n        this.error.tip = 'Failed to load daily tip';\n        this.loading.tip = false;\n        console.error('Error loading daily tip:', err);\n      }\n    });\n  }\n  loadWorkItemDistribution(iterationPath) {\n    this.loading.distribution = true;\n    this.dashboardService.getWorkItemDistribution(iterationPath).subscribe({\n      next: data => {\n        this.workItemDistribution = data;\n        this.loading.distribution = false;\n        // Initialize distribution chart after data is loaded\n        setTimeout(() => {\n          this.initializeWorkItemDistributionChart();\n        }, 100);\n      },\n      error: err => {\n        this.error.distribution = 'Failed to load work item distribution';\n        this.loading.distribution = false;\n        console.error('Error loading work item distribution:', err);\n      }\n    });\n  }\n  loadStateDistributions() {\n    this.loading.stateDistribution = true;\n    this.dashboardService.getStateDistribution(this.selectedIterationPath).subscribe({\n      next: data => {\n        this.stateDistributions = data;\n        // Keep hard-coded iteration paths instead of dynamically loading them\n        // this.availableIterationPaths = data.map(d => d.iterationPath);\n        this.loading.stateDistribution = false;\n        // Initialize state distribution chart after data is loaded\n        setTimeout(() => {\n          this.initializeStateDistributionsChart();\n        }, 100);\n      },\n      error: err => {\n        this.error.stateDistribution = 'Failed to load state distributions';\n        this.loading.stateDistribution = false;\n        console.error('Error loading state distributions:', err);\n      }\n    });\n  }\n  loadLongTermDevNewItems() {\n    this.loading.longTermDevNew = true;\n    this.dashboardService.getLongTermDevNewItems(5).subscribe({\n      next: data => {\n        this.longTermDevNewItems = data;\n        this.loading.longTermDevNew = false;\n      },\n      error: err => {\n        this.error.longTermDevNew = 'Failed to load long-term Dev-New items';\n        this.loading.longTermDevNew = false;\n        console.error('Error loading long-term Dev-New items:', err);\n      }\n    });\n  }\n  loadSupportItems() {\n    this.loading.supportItems = true;\n    this.dashboardService.getSupportItems(6).subscribe({\n      next: data => {\n        this.supportItems = data;\n        this.loading.supportItems = false;\n      },\n      error: err => {\n        this.error.supportItems = 'Failed to load support items';\n        this.loading.supportItems = false;\n        console.error('Error loading support items:', err);\n      }\n    });\n  }\n  loadAiTips() {\n    this.loading.aiTips = true;\n    this.dashboardService.getAiTips().subscribe({\n      next: data => {\n        this.aiTips = data;\n        this.longTermDevNewItems = data.longTermDevNewItems;\n        this.supportItems = data.supportItems;\n        this.dailyTip = data.tip;\n        this.loading.aiTips = false;\n      },\n      error: err => {\n        this.error.aiTips = 'Failed to load AI tips';\n        this.loading.aiTips = false;\n        console.error('Error loading AI tips:', err);\n        // Fall back to individual methods\n        this.loadDailyTip();\n        this.loadLongTermDevNewItems();\n        this.loadSupportItems();\n      }\n    });\n  }\n  initializeWorkItemDistributionChart() {\n    if (!this.workItemDistribution || !this.stateDistributionChartRef?.nativeElement) {\n      return;\n    }\n    // Get canvas element\n    const ctx = this.stateDistributionChartRef.nativeElement.getContext('2d');\n    if (!ctx) return;\n    const labels = this.workItemDistribution.states.map(s => s.state);\n    const data = this.workItemDistribution.states.map(s => s.count);\n    const colors = this.workItemDistribution.states.map(s => this.stateColors[s.state] || this.getRandomColor());\n    // Clear any existing chart\n    if (window.Chart && ctx.chart) {\n      ctx.chart.destroy();\n    }\n    // Create new chart\n    if (window.Chart) {\n      ctx.chart = new window.Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: labels,\n          datasets: [{\n            data: data,\n            backgroundColor: colors,\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'right'\n            },\n            title: {\n              display: true,\n              text: `Work Item States - ${this.workItemDistribution.iterationPath}`\n            }\n          }\n        }\n      });\n    }\n  }\n  initializeStateDistributionsChart() {\n    if (this.stateDistributions.length === 0 || !this.iterationDistributionChartRef?.nativeElement) {\n      return;\n    }\n    // Get canvas element\n    const ctx = this.iterationDistributionChartRef.nativeElement.getContext('2d');\n    if (!ctx) return;\n    // Clear any existing chart\n    if (window.Chart && ctx.chart) {\n      ctx.chart.destroy();\n    }\n    // Prepare data for stacked bar chart\n    const iterationLabels = this.stateDistributions.map(d => d.iterationPath);\n    // Find all unique states across all iterations\n    const allStates = new Set();\n    this.stateDistributions.forEach(dist => {\n      dist.states.forEach(state => {\n        allStates.add(state.state);\n      });\n    });\n    // Create datasets, one for each state\n    const datasets = Array.from(allStates).map(stateName => {\n      // Find color for this state\n      const stateColor = this.stateColors[stateName] || this.getRandomColor();\n      // Create dataset for this state across all iterations\n      return {\n        label: stateName,\n        data: this.stateDistributions.map(dist => {\n          const stateData = dist.states.find(s => s.state === stateName);\n          return stateData ? stateData.count : 0;\n        }),\n        backgroundColor: stateColor\n      };\n    });\n    // Create new chart\n    if (window.Chart) {\n      ctx.chart = new window.Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: iterationLabels,\n          datasets: datasets\n        },\n        options: {\n          responsive: true,\n          scales: {\n            x: {\n              stacked: true\n            },\n            y: {\n              stacked: true,\n              beginAtZero: true\n            }\n          },\n          plugins: {\n            legend: {\n              position: 'right'\n            },\n            title: {\n              display: true,\n              text: 'Work Item Distribution by Iteration'\n            }\n          }\n        }\n      });\n    }\n  }\n  changeIterationPath(iterationPath) {\n    this.selectedIterationPath = iterationPath;\n    this.loadWorkItemDistribution(iterationPath);\n    this.loadSprintSummary(iterationPath);\n  }\n  getStateColor(state) {\n    return this.stateColors[state] || this.getRandomColor();\n  }\n  getRandomColor() {\n    const randomIndex = Math.floor(Math.random() * this.defaultChartColors.length);\n    return this.defaultChartColors[randomIndex];\n  }\n  reload() {\n    this.loadDashboardData();\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DashboardService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      viewQuery: function DashboardComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stateDistributionChartRef = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iterationDistributionChartRef = _t.first);\n        }\n      },\n      decls: 71,\n      vars: 22,\n      consts: [[1, \"dashboard-container\", \"p-4\"], [1, \"row\", \"mb-4\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-header\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mb-0\"], [1, \"d-inline-block\", \"me-2\"], [\"type\", \"button\", \"disabled\", \"\", 1, \"btn\", \"btn-outline-secondary\", \"btn-sm\"], [1, \"btn\", \"btn-outline-primary\", \"btn-sm\", 3, \"click\"], [1, \"bi\", \"bi-arrow-clockwise\"], [1, \"card-body\"], [\"class\", \"text-center py-4\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"col-md-4\"], [1, \"card-header\"], [\"class\", \"daily-tip\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"col-md-6\", \"mb-4\"], [1, \"col-12\"], [1, \"row\"], [\"class\", \"text-center py-3\", 4, \"ngIf\"], [1, \"text-center\", \"py-4\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"alert\", \"alert-danger\"], [1, \"sprint-title\"], [1, \"d-flex\", \"justify-content-between\", \"mt-3\"], [1, \"text-muted\", \"mb-1\"], [1, \"fw-bold\"], [1, \"fw-bold\", \"days-remaining\"], [\"class\", \"mt-4\", 4, \"ngIf\"], [1, \"mt-4\"], [1, \"d-flex\", \"justify-content-between\", \"mb-1\"], [1, \"progress\", 2, \"height\", \"10px\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"bg-success\"], [1, \"daily-tip\"], [1, \"d-flex\", \"align-items-center\", \"mb-3\"], [1, \"bi\", \"bi-lightbulb-fill\", \"text-warning\", \"me-2\", \"fs-4\"], [1, \"text-danger\"], [1, \"bi\", \"bi-exclamation-triangle-fill\", \"me-1\"], [1, \"list-group\", \"mt-2\"], [\"href\", \"javascript:void(0)\", \"class\", \"list-group-item list-group-item-action\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"javascript:void(0)\", 1, \"list-group-item\", \"list-group-item-action\"], [1, \"d-flex\", \"w-100\", \"justify-content-between\"], [1, \"mb-1\"], [1, \"mb-1\", \"small\", \"text-truncate\"], [1, \"col-md-3\", \"mb-3\"], [1, \"card\", \"summary-card\", \"total-card\"], [1, \"card-title\"], [1, \"card-value\"], [1, \"card\", \"summary-card\", \"in-progress-card\"], [1, \"card\", \"summary-card\", \"completed-card\"], [1, \"card\", \"summary-card\", \"blocked-card\"], [\"class\", \"chart-container\", \"style\", \"height: 300px;\", 4, \"ngIf\"], [\"class\", \"d-flex flex-wrap mt-3\", 4, \"ngIf\"], [1, \"text-muted\"], [1, \"chart-container\", 2, \"height\", \"300px\"], [\"stateDistributionChart\", \"\"], [1, \"d-flex\", \"flex-wrap\", \"mt-3\"], [\"class\", \"me-3 mb-2 d-flex align-items-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"me-3\", \"mb-2\", \"d-flex\", \"align-items-center\"], [1, \"color-box\"], [1, \"ms-1\"], [\"iterationDistributionChart\", \"\"], [\"class\", \"table-responsive\", 4, \"ngIf\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [1, \"badge\", \"bg-info\"], [1, \"badge\", \"rounded-pill\", 3, \"ngClass\"], [1, \"list-group\", \"activity-list\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"badge\", 3, \"ngClass\"], [1, \"ms-2\", \"activity-title\"], [1, \"activity-meta\"], [\"class\", \"mt-1 mb-0 activity-details\", 4, \"ngIf\"], [1, \"mt-1\", \"mb-0\", \"activity-details\"], [1, \"text-center\", \"py-3\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n          i0.ɵɵtext(6, \"Sprint Overview\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\")(8, \"div\", 6)(9, \"button\", 7);\n          i0.ɵɵtext(10, \" Techoil\\\\2.3.23 \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_11_listener() {\n            return ctx.reload();\n          });\n          i0.ɵɵelement(12, \"i\", 9);\n          i0.ɵɵtext(13, \" Refresh \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(14, \"div\", 10);\n          i0.ɵɵtemplate(15, DashboardComponent_div_15_Template, 4, 0, \"div\", 11);\n          i0.ɵɵtemplate(16, DashboardComponent_div_16_Template, 2, 1, \"div\", 12);\n          i0.ɵɵtemplate(17, DashboardComponent_div_17_Template, 22, 11, \"div\", 13);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(18, \"div\", 14)(19, \"div\", 3)(20, \"div\", 15)(21, \"h4\", 5);\n          i0.ɵɵtext(22, \"AI Insights\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"div\", 10);\n          i0.ɵɵtemplate(24, DashboardComponent_div_24_Template, 4, 0, \"div\", 11);\n          i0.ɵɵtemplate(25, DashboardComponent_div_25_Template, 2, 1, \"div\", 12);\n          i0.ɵɵtemplate(26, DashboardComponent_div_26_Template, 8, 2, \"div\", 16);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(27, \"div\", 1);\n          i0.ɵɵtemplate(28, DashboardComponent_div_28_Template, 4, 0, \"div\", 11);\n          i0.ɵɵtemplate(29, DashboardComponent_div_29_Template, 2, 1, \"div\", 12);\n          i0.ɵɵtemplate(30, DashboardComponent_div_30_Template, 29, 4, \"div\", 17);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"div\", 1)(32, \"div\", 18)(33, \"div\", 3)(34, \"div\", 15)(35, \"h4\", 5);\n          i0.ɵɵtext(36, \"Work Item States\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(37, \"div\", 10);\n          i0.ɵɵtemplate(38, DashboardComponent_div_38_Template, 4, 0, \"div\", 11);\n          i0.ɵɵtemplate(39, DashboardComponent_div_39_Template, 2, 1, \"div\", 12);\n          i0.ɵɵtemplate(40, DashboardComponent_div_40_Template, 4, 3, \"div\", 13);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(41, \"div\", 18)(42, \"div\", 3)(43, \"div\", 15)(44, \"h4\", 5);\n          i0.ɵɵtext(45, \"Iteration Comparison\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(46, \"div\", 10);\n          i0.ɵɵtemplate(47, DashboardComponent_div_47_Template, 4, 0, \"div\", 11);\n          i0.ɵɵtemplate(48, DashboardComponent_div_48_Template, 2, 1, \"div\", 12);\n          i0.ɵɵtemplate(49, DashboardComponent_div_49_Template, 3, 2, \"div\", 13);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(50, \"div\", 1)(51, \"div\", 19)(52, \"div\", 3)(53, \"div\", 15)(54, \"h4\", 5);\n          i0.ɵɵtext(55, \"Recent Support Items (Last 6 Months)\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(56, \"div\", 10);\n          i0.ɵɵtemplate(57, DashboardComponent_div_57_Template, 4, 0, \"div\", 11);\n          i0.ɵɵtemplate(58, DashboardComponent_div_58_Template, 2, 1, \"div\", 12);\n          i0.ɵɵtemplate(59, DashboardComponent_div_59_Template, 3, 2, \"div\", 13);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(60, \"div\", 20)(61, \"div\", 19)(62, \"div\", 3)(63, \"div\", 15)(64, \"h4\", 5);\n          i0.ɵɵtext(65, \"Latest Activity\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(66, \"div\", 10);\n          i0.ɵɵtemplate(67, DashboardComponent_div_67_Template, 4, 0, \"div\", 11);\n          i0.ɵɵtemplate(68, DashboardComponent_div_68_Template, 2, 1, \"div\", 12);\n          i0.ɵɵtemplate(69, DashboardComponent_div_69_Template, 3, 1, \"div\", 13);\n          i0.ɵɵtemplate(70, DashboardComponent_div_70_Template, 3, 0, \"div\", 21);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(15);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.sprint);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.sprint);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.sprint && !ctx.error.sprint && ctx.sprintOverview);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.aiTips);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.aiTips);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.aiTips && !ctx.error.aiTips);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.summary);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.summary);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.summary && !ctx.error.summary && ctx.sprintSummary);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.distribution);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.distribution);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.distribution && !ctx.error.distribution && ctx.workItemDistribution);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.stateDistribution);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.stateDistribution);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.stateDistribution && !ctx.error.stateDistribution);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.supportItems && !ctx.aiTips);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.supportItems && !ctx.aiTips);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (!ctx.loading.supportItems || ctx.aiTips) && (!ctx.error.supportItems || ctx.aiTips) && ctx.supportItems);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.activity);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.activity);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.activity && !ctx.error.activity && ctx.activityFeed && ctx.activityFeed.activities.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.activity && !ctx.error.activity && (!ctx.activityFeed || ctx.activityFeed.activities.length === 0));\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.DecimalPipe, i2.DatePipe],\n      styles: [\".dashboard-container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  border-radius: 8px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n  margin-bottom: 20px;\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  background-color: #f8f9fa;\\n  border-bottom: 1px solid #eaeaea;\\n  padding: 12px 16px;\\n}\\n\\n.days-remaining[_ngcontent-%COMP%] {\\n  font-size: 24px;\\n  color: #3050e6;\\n}\\n\\n.sprint-title[_ngcontent-%COMP%] {\\n  font-size: 1.5rem;\\n  font-weight: 600;\\n  color: #333;\\n  margin-bottom: 1rem;\\n}\\n\\n\\n.summary-card[_ngcontent-%COMP%] {\\n  text-align: center;\\n  border-radius: 8px;\\n  transition: transform 0.2s;\\n  height: 100%;\\n}\\n\\n.summary-card[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-5px);\\n}\\n\\n.card-value[_ngcontent-%COMP%] {\\n  font-size: 2.5rem;\\n  font-weight: 700;\\n  margin: 15px 0 0;\\n}\\n\\n.total-card[_ngcontent-%COMP%] {\\n  border-left: 4px solid #6c757d;\\n}\\n\\n.in-progress-card[_ngcontent-%COMP%] {\\n  border-left: 4px solid #007bff;\\n}\\n\\n.completed-card[_ngcontent-%COMP%] {\\n  border-left: 4px solid #28a745;\\n}\\n\\n.blocked-card[_ngcontent-%COMP%] {\\n  border-left: 4px solid #dc3545;\\n}\\n\\n\\n.daily-tip[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  background-color: #fffdf0;\\n  border-radius: 6px;\\n  border-left: 4px solid #ffc107;\\n}\\n\\n.daily-tip[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n  font-size: 1.5rem;\\n  margin-right: 10px;\\n}\\n\\n\\n.activity-list[_ngcontent-%COMP%] {\\n  max-height: 400px;\\n  overflow-y: auto;\\n}\\n\\n.activity-title[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n}\\n\\n.activity-details[_ngcontent-%COMP%] {\\n  font-size: 0.9rem;\\n  color: #666;\\n  margin-left: 28px;\\n}\\n\\n.activity-meta[_ngcontent-%COMP%] {\\n  white-space: nowrap;\\n  margin-left: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSx3Q0FBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtFQUNBLGdDQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFLGVBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUEsa0JBQUE7QUFDQTtFQUNFLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSwwQkFBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLDJCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLDhCQUFBO0FBQ0Y7O0FBRUE7RUFDRSw4QkFBQTtBQUNGOztBQUVBO0VBQ0UsOEJBQUE7QUFDRjs7QUFFQTtFQUNFLDhCQUFBO0FBQ0Y7O0FBRUEsY0FBQTtBQUNBO0VBQ0UsYUFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSw4QkFBQTtBQUNGOztBQUVBO0VBQ0UsaUJBQUE7RUFDQSxrQkFBQTtBQUNGOztBQUVBLGtCQUFBO0FBQ0E7RUFDRSxpQkFBQTtFQUNBLGdCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLG1CQUFBO0VBQ0EsaUJBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5kYXNoYm9hcmQtY29udGFpbmVyIHtcbiAgcGFkZGluZzogMjBweDtcbn1cblxuLmNhcmQge1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWFlYWVhO1xuICBwYWRkaW5nOiAxMnB4IDE2cHg7XG59XG5cbi5kYXlzLXJlbWFpbmluZyB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgY29sb3I6ICMzMDUwZTY7XG59XG5cbi5zcHJpbnQtdGl0bGUge1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6ICMzMzM7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbi8qIFN1bW1hcnkgQ2FyZHMgKi9cbi5zdW1tYXJ5LWNhcmQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnM7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnN1bW1hcnktY2FyZDpob3ZlciB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNXB4KTtcbn1cblxuLmNhcmQtdmFsdWUge1xuICBmb250LXNpemU6IDIuNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbWFyZ2luOiAxNXB4IDAgMDtcbn1cblxuLnRvdGFsLWNhcmQge1xuICBib3JkZXItbGVmdDogNHB4IHNvbGlkICM2Yzc1N2Q7XG59XG5cbi5pbi1wcm9ncmVzcy1jYXJkIHtcbiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCAjMDA3YmZmO1xufVxuXG4uY29tcGxldGVkLWNhcmQge1xuICBib3JkZXItbGVmdDogNHB4IHNvbGlkICMyOGE3NDU7XG59XG5cbi5ibG9ja2VkLWNhcmQge1xuICBib3JkZXItbGVmdDogNHB4IHNvbGlkICNkYzM1NDU7XG59XG5cbi8qIERhaWx5IFRpcCAqL1xuLmRhaWx5LXRpcCB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZkZjA7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCAjZmZjMTA3O1xufVxuXG4uZGFpbHktdGlwIGkge1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuXG4vKiBBY3Rpdml0eSBMaXN0ICovXG4uYWN0aXZpdHktbGlzdCB7XG4gIG1heC1oZWlnaHQ6IDQwMHB4O1xuICBvdmVyZmxvdy15OiBhdXRvO1xufVxuXG4uYWN0aXZpdHktdGl0bGUge1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG4uYWN0aXZpdHktZGV0YWlscyB7XG4gIGZvbnQtc2l6ZTogMC45cmVtO1xuICBjb2xvcjogIzY2NjtcbiAgbWFyZ2luLWxlZnQ6IDI4cHg7XG59XG5cbi5hY3Rpdml0eS1tZXRhIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XG59ICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["i0","DashboardComponent","constructor","dashboardService","sprint","summary","activity","tip","distribution","stateDistribution","longTermDevNew","supportItems","aiTips","ngOnInit","loadDashboardData","ngAfterViewInit","loadSprintOverview","loadAiTips","loading","getCurrentSprint","subscribe","next","data","sprintOverview","loadSprintSummary","selectedIterationPath","loadActivityFeed","loadWorkItemDistribution","loadStateDistributions","error","err","console","iterationPath","getSprintSummary","sprintSummary","getActivityFeed","activityFeed","loadDailyTip","getDailyTip","dailyTip","getWorkItemDistribution","workItemDistribution","setTimeout","initializeWorkItemDistributionChart","getStateDistribution","stateDistributions","initializeStateDistributionsChart","loadLongTermDevNewItems","getLongTermDevNewItems","longTermDevNewItems","loadSupportItems","getSupportItems","getAiTips","stateDistributionChartRef","nativeElement","ctx","getContext","labels","states","map","s","state","count","colors","stateColors","getRandomColor","window","Chart","chart","destroy","type","datasets","backgroundColor","borderWidth","options","responsive","plugins","legend","position","title","display","text","length","iterationDistributionChartRef","iterationLabels","d","allStates","Set","forEach","dist","add","Array","from","stateName","stateColor","label","stateData","find","scales","x","stacked","y","beginAtZero","changeIterationPath","getStateColor","randomIndex","Math","floor","random","defaultChartColors","reload","selectors","viewQuery"],"sourceRoot":"","sources":["E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\dashboard\\dashboard.component.html","E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\dashboard\\dashboard.component.ts"],"sourcesContent":["<div class=\"dashboard-container p-4\">\r\n  <div class=\"row mb-4\">\r\n    <div class=\"col-md-8\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n          <h4 class=\"mb-0\">Sprint Overview</h4>\r\n          <div>\r\n            <div class=\"d-inline-block me-2\">\r\n              <!-- Using a simple button instead of dropdown since we're hardcoding the value -->\r\n              <button class=\"btn btn-outline-secondary btn-sm\" type=\"button\" disabled>\r\n                Techoil\\2.3.23\r\n              </button>\r\n            </div>\r\n            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"reload()\">\r\n              <i class=\"bi bi-arrow-clockwise\"></i> Refresh\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div *ngIf=\"loading.sprint\" class=\"text-center py-4\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div *ngIf=\"error.sprint\" class=\"alert alert-danger\">\r\n            {{ error.sprint }}\r\n          </div>\r\n          \r\n          <div *ngIf=\"!loading.sprint && !error.sprint && sprintOverview\">\r\n            <h2 class=\"sprint-title\">{{ sprintOverview.sprintName }}</h2>\r\n            <div class=\"d-flex justify-content-between mt-3\">\r\n              <div>\r\n                <p class=\"text-muted mb-1\">Start Date</p>\r\n                <p class=\"fw-bold\">{{ sprintOverview.startDate | date:'mediumDate' }}</p>\r\n              </div>\r\n              <div>\r\n                <p class=\"text-muted mb-1\">End Date</p>\r\n                <p class=\"fw-bold\">{{ sprintOverview.endDate | date:'mediumDate' }}</p>\r\n              </div>\r\n              <div>\r\n                <p class=\"text-muted mb-1\">Days Remaining</p>\r\n                <p class=\"fw-bold days-remaining\">{{ sprintOverview.daysRemaining }}</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- Progress Bar -->\r\n            <div *ngIf=\"sprintSummary\" class=\"mt-4\">\r\n              <div class=\"d-flex justify-content-between mb-1\">\r\n                <span>Sprint Progress</span>\r\n                <span>{{ sprintSummary.completionPercentage | number:'1.0-0' }}%</span>\r\n              </div>\r\n              <div class=\"progress\" style=\"height: 10px;\">\r\n                <div class=\"progress-bar bg-success\" \r\n                     [style.width.%]=\"sprintSummary.completionPercentage\"\r\n                     role=\"progressbar\" \r\n                     [attr.aria-valuenow]=\"sprintSummary.completionPercentage\" \r\n                     aria-valuemin=\"0\" \r\n                     aria-valuemax=\"100\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"col-md-4\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h4 class=\"mb-0\">AI Insights</h4>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div *ngIf=\"loading.aiTips\" class=\"text-center py-4\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div *ngIf=\"error.aiTips\" class=\"alert alert-danger\">\r\n            {{ error.aiTips }}\r\n          </div>\r\n          \r\n          <div *ngIf=\"!loading.aiTips && !error.aiTips\" class=\"daily-tip\">\r\n            <div class=\"d-flex align-items-center mb-3\">\r\n              <i class=\"bi bi-lightbulb-fill text-warning me-2 fs-4\"></i>\r\n              <h5 class=\"mb-0\">Daily Tip</h5>\r\n            </div>\r\n            <p>{{ dailyTip }}</p>\r\n            \r\n            <!-- Long-term Dev-New Items -->\r\n            <div *ngIf=\"longTermDevNewItems && longTermDevNewItems.length > 0\" class=\"mt-4\">\r\n              <h6 class=\"text-danger\">\r\n                <i class=\"bi bi-exclamation-triangle-fill me-1\"></i>\r\n                Long-term Dev-New Items\r\n              </h6>\r\n              <div class=\"list-group mt-2\">\r\n                <a *ngFor=\"let item of longTermDevNewItems\" \r\n                   href=\"javascript:void(0)\" \r\n                   class=\"list-group-item list-group-item-action\">\r\n                  <div class=\"d-flex w-100 justify-content-between\">\r\n                    <h6 class=\"mb-1\">{{ item.title }}</h6>\r\n                    <small class=\"text-danger\">{{ item.daysInState }} days</small>\r\n                  </div>\r\n                  <p class=\"mb-1 small text-truncate\">ID: {{ item.id }}</p>\r\n                  <small>Assigned to: {{ item.assignedTo || 'Unassigned' }}</small>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Summary Cards Row -->\r\n  <div class=\"row mb-4\">\r\n    <div *ngIf=\"loading.summary\" class=\"text-center py-4\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"error.summary\" class=\"alert alert-danger\">\r\n      {{ error.summary }}\r\n    </div>\r\n    \r\n    <div *ngIf=\"!loading.summary && !error.summary && sprintSummary\" class=\"row\">\r\n      <div class=\"col-md-3 mb-3\">\r\n        <div class=\"card summary-card total-card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Total Tasks</h5>\r\n            <h2 class=\"card-value\">{{ sprintSummary.totalTasks }}</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"col-md-3 mb-3\">\r\n        <div class=\"card summary-card in-progress-card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">In Progress</h5>\r\n            <h2 class=\"card-value\">{{ sprintSummary.inProgress }}</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"col-md-3 mb-3\">\r\n        <div class=\"card summary-card completed-card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Completed</h5>\r\n            <h2 class=\"card-value\">{{ sprintSummary.completed }}</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"col-md-3 mb-3\">\r\n        <div class=\"card summary-card blocked-card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Blocked</h5>\r\n            <h2 class=\"card-value\">{{ sprintSummary.blocked }}</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Charts Row -->\r\n  <div class=\"row mb-4\">\r\n    <!-- State Distribution Pie Chart -->\r\n    <div class=\"col-md-6 mb-4\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h4 class=\"mb-0\">Work Item States</h4>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div *ngIf=\"loading.distribution\" class=\"text-center py-4\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div *ngIf=\"error.distribution\" class=\"alert alert-danger\">\r\n            {{ error.distribution }}\r\n          </div>\r\n          \r\n          <div *ngIf=\"!loading.distribution && !error.distribution && workItemDistribution\">\r\n            <div *ngIf=\"workItemDistribution.states.length === 0\" class=\"text-center py-4\">\r\n              <p class=\"text-muted\">No work item data available for this iteration</p>\r\n            </div>\r\n            \r\n            <div *ngIf=\"workItemDistribution.states.length > 0\" class=\"chart-container\" style=\"height: 300px;\">\r\n              <canvas #stateDistributionChart></canvas>\r\n            </div>\r\n            \r\n            <!-- Legend as colored boxes -->\r\n            <div *ngIf=\"workItemDistribution.states.length > 0\" class=\"d-flex flex-wrap mt-3\">\r\n              <div *ngFor=\"let state of workItemDistribution.states\" class=\"me-3 mb-2 d-flex align-items-center\">\r\n                <div class=\"color-box\" [style.background-color]=\"getStateColor(state.state)\"></div>\r\n                <span class=\"ms-1\">{{ state.state }}: {{ state.count }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Iteration/State Chart -->\r\n    <div class=\"col-md-6 mb-4\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h4 class=\"mb-0\">Iteration Comparison</h4>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div *ngIf=\"loading.stateDistribution\" class=\"text-center py-4\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div *ngIf=\"error.stateDistribution\" class=\"alert alert-danger\">\r\n            {{ error.stateDistribution }}\r\n          </div>\r\n          \r\n          <div *ngIf=\"!loading.stateDistribution && !error.stateDistribution\">\r\n            <div *ngIf=\"stateDistributions.length === 0\" class=\"text-center py-4\">\r\n              <p class=\"text-muted\">No iteration data available</p>\r\n            </div>\r\n            \r\n            <div *ngIf=\"stateDistributions.length > 0\" class=\"chart-container\" style=\"height: 300px;\">\r\n              <canvas #iterationDistributionChart></canvas>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Support Items Row -->\r\n  <div class=\"row mb-4\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h4 class=\"mb-0\">Recent Support Items (Last 6 Months)</h4>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div *ngIf=\"loading.supportItems && !aiTips\" class=\"text-center py-4\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div *ngIf=\"error.supportItems && !aiTips\" class=\"alert alert-danger\">\r\n            {{ error.supportItems }}\r\n          </div>\r\n          \r\n          <div *ngIf=\"(!loading.supportItems || aiTips) && (!error.supportItems || aiTips) && supportItems\">\r\n            <div *ngIf=\"supportItems.length === 0\" class=\"text-center py-4\">\r\n              <p class=\"text-muted\">No support items found in the last 6 months</p>\r\n            </div>\r\n            \r\n            <div *ngIf=\"supportItems.length > 0\" class=\"table-responsive\">\r\n              <table class=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Title</th>\r\n                    <th>Support ID</th>\r\n                    <th>Priority</th>\r\n                    <th>Created</th>\r\n                    <th>State</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let item of supportItems\">\r\n                    <td>{{ item.id }}</td>\r\n                    <td>{{ item.title }}</td>\r\n                    <td><span class=\"badge bg-info\">{{ item.supportId }}</span></td>\r\n                    <td>\r\n                      <span class=\"badge rounded-pill\" \r\n                           [ngClass]=\"{'bg-danger': item.priority === 1, 'bg-warning text-dark': item.priority === 2, 'bg-info text-dark': item.priority === 3, 'bg-success': item.priority === 4}\">\r\n                        P{{ item.priority }}\r\n                      </span>\r\n                    </td>\r\n                    <td>{{ item.createdDate | date:'shortDate' }}</td>\r\n                    <td>\r\n                      <span class=\"badge rounded-pill\" [ngClass]=\"getStateColor(item.state)\">\r\n                        {{ item.state }}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Activity Feed -->\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h4 class=\"mb-0\">Latest Activity</h4>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div *ngIf=\"loading.activity\" class=\"text-center py-4\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div *ngIf=\"error.activity\" class=\"alert alert-danger\">\r\n            {{ error.activity }}\r\n          </div>\r\n          \r\n          <div *ngIf=\"!loading.activity && !error.activity && activityFeed && activityFeed.activities.length > 0\">\r\n            <ul class=\"list-group activity-list\">\r\n              <li *ngFor=\"let item of activityFeed.activities\" class=\"list-group-item\">\r\n                <div class=\"d-flex justify-content-between align-items-center\">\r\n                  <div>\r\n                    <span class=\"badge\" [ngClass]=\"'bg-' + (item.type === 'Created' ? 'success' : \r\n                                                          item.type === 'Updated' ? 'info' : \r\n                                                          item.type === 'Commented' ? 'warning' : 'primary')\">\r\n                      {{ item.type }}\r\n                    </span>\r\n                    <span class=\"ms-2 activity-title\">{{ item.title }}</span>\r\n                  </div>\r\n                  <div class=\"activity-meta\">\r\n                    <small class=\"text-muted\">{{ item.user }} · {{ item.timestamp | date:'short' }}</small>\r\n                  </div>\r\n                </div>\r\n                <p *ngIf=\"item.details\" class=\"mt-1 mb-0 activity-details\">{{ item.details }}</p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          \r\n          <div *ngIf=\"!loading.activity && !error.activity && (!activityFeed || activityFeed.activities.length === 0)\" class=\"text-center py-3\">\r\n            <p class=\"text-muted\">No recent activity found</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> ","import { Component, OnInit, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { DashboardService } from '../../services/dashboard.service';\r\nimport { \r\n  SprintOverview, \r\n  SprintSummary, \r\n  ActivityFeed, \r\n  WorkItemDistribution, \r\n  LongTermDevNewItem, \r\n  SupportItem,\r\n  AiDashboardTip,\r\n  StateCount\r\n} from '../../models/sprint.model';\r\nimport { forkJoin, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    Chart: any;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('stateDistributionChart') stateDistributionChartRef!: ElementRef;\r\n  @ViewChild('iterationDistributionChart') iterationDistributionChartRef!: ElementRef;\r\n  \r\n  sprintOverview: SprintOverview | null = null;\r\n  sprintSummary: SprintSummary | null = null;\r\n  activityFeed: ActivityFeed | null = null;\r\n  dailyTip: string = '';\r\n  workItemDistribution: WorkItemDistribution | null = null;\r\n  stateDistributions: WorkItemDistribution[] = [];\r\n  longTermDevNewItems: LongTermDevNewItem[] = [];\r\n  supportItems: SupportItem[] = [];\r\n  aiTips: AiDashboardTip | null = null;\r\n  \r\n  // Define state colors for consistency\r\n  stateColors: Record<string, string> = {\r\n    'Proposed': '#e6e6e6',\r\n    'New': '#b4d7a8',\r\n    'Dev-New': '#b4d7a8',\r\n    'Active': '#4a86e8',\r\n    'Dev-WIP': '#4a86e8',\r\n    'In Progress': '#4a86e8',\r\n    'Resolved': '#ffd966',\r\n    'Code Review': '#9fc5e8',\r\n    'QA': '#d5a6bd',\r\n    'Testing': '#d5a6bd',\r\n    'Done': '#93c47d',\r\n    'Closed': '#6aa84f',\r\n    'Completed': '#6aa84f',\r\n    'Blocked': '#e06666',\r\n    'Removed': '#999999'\r\n  };\r\n  \r\n  // Default chart colors if state not found in mapping\r\n  defaultChartColors = [\r\n    '#4a86e8', '#6aa84f', '#ffd966', '#e06666', '#9fc5e8', \r\n    '#d5a6bd', '#b4d7a8', '#e6e6e6', '#93c47d', '#6fa8dc'\r\n  ];\r\n  \r\n  // Track loading and error states\r\n  loading = {\r\n    sprint: true,\r\n    summary: true,\r\n    activity: true,\r\n    tip: true,\r\n    distribution: true,\r\n    stateDistribution: true,\r\n    longTermDevNew: true,\r\n    supportItems: true,\r\n    aiTips: true\r\n  };\r\n  \r\n  error = {\r\n    sprint: '',\r\n    summary: '',\r\n    activity: '',\r\n    tip: '',\r\n    distribution: '',\r\n    stateDistribution: '',\r\n    longTermDevNew: '',\r\n    supportItems: '',\r\n    aiTips: ''\r\n  };\r\n\r\n  // Hard-coded iteration path as requested\r\n  selectedIterationPath: string = 'Techoil\\\\2.3.23';\r\n  availableIterationPaths: string[] = ['Techoil\\\\2.3.23'];\r\n\r\n  constructor(private dashboardService: DashboardService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadDashboardData();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Charts will be initialized after data is loaded\r\n  }\r\n\r\n  loadDashboardData(): void {\r\n    this.loadSprintOverview();\r\n    this.loadAiTips();\r\n  }\r\n\r\n  loadSprintOverview(): void {\r\n    this.loading.sprint = true;\r\n    this.dashboardService.getCurrentSprint().subscribe({\r\n      next: (data) => {\r\n        this.sprintOverview = data;\r\n        // Use hard-coded iteration path instead of data.iterationPath\r\n        // this.selectedIterationPath = data.iterationPath;\r\n        this.loading.sprint = false;\r\n        this.loadSprintSummary(this.selectedIterationPath);\r\n        this.loadActivityFeed();\r\n        this.loadWorkItemDistribution(this.selectedIterationPath);\r\n        this.loadStateDistributions();\r\n      },\r\n      error: (err) => {\r\n        this.error.sprint = 'Failed to load sprint data';\r\n        this.loading.sprint = false;\r\n        console.error('Error loading sprint data:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadSprintSummary(iterationPath: string): void {\r\n    this.loading.summary = true;\r\n    this.dashboardService.getSprintSummary(iterationPath).subscribe({\r\n      next: (data) => {\r\n        this.sprintSummary = data;\r\n        this.loading.summary = false;\r\n      },\r\n      error: (err) => {\r\n        this.error.summary = 'Failed to load summary data';\r\n        this.loading.summary = false;\r\n        console.error('Error loading summary data:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadActivityFeed(): void {\r\n    this.loading.activity = true;\r\n    this.dashboardService.getActivityFeed().subscribe({\r\n      next: (data) => {\r\n        this.activityFeed = data;\r\n        this.loading.activity = false;\r\n      },\r\n      error: (err) => {\r\n        this.error.activity = 'Failed to load activity feed';\r\n        this.loading.activity = false;\r\n        console.error('Error loading activity feed:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadDailyTip(): void {\r\n    this.loading.tip = true;\r\n    this.dashboardService.getDailyTip().subscribe({\r\n      next: (data) => {\r\n        this.dailyTip = data.tip;\r\n        this.loading.tip = false;\r\n      },\r\n      error: (err) => {\r\n        this.error.tip = 'Failed to load daily tip';\r\n        this.loading.tip = false;\r\n        console.error('Error loading daily tip:', err);\r\n      }\r\n    });\r\n  }\r\n  \r\n  loadWorkItemDistribution(iterationPath?: string): void {\r\n    this.loading.distribution = true;\r\n    this.dashboardService.getWorkItemDistribution(iterationPath).subscribe({\r\n      next: (data) => {\r\n        this.workItemDistribution = data;\r\n        this.loading.distribution = false;\r\n        \r\n        // Initialize distribution chart after data is loaded\r\n        setTimeout(() => {\r\n          this.initializeWorkItemDistributionChart();\r\n        }, 100);\r\n      },\r\n      error: (err) => {\r\n        this.error.distribution = 'Failed to load work item distribution';\r\n        this.loading.distribution = false;\r\n        console.error('Error loading work item distribution:', err);\r\n      }\r\n    });\r\n  }\r\n  \r\n  loadStateDistributions(): void {\r\n    this.loading.stateDistribution = true;\r\n    this.dashboardService.getStateDistribution(this.selectedIterationPath).subscribe({\r\n      next: (data) => {\r\n        this.stateDistributions = data;\r\n        // Keep hard-coded iteration paths instead of dynamically loading them\r\n        // this.availableIterationPaths = data.map(d => d.iterationPath);\r\n        this.loading.stateDistribution = false;\r\n        \r\n        // Initialize state distribution chart after data is loaded\r\n        setTimeout(() => {\r\n          this.initializeStateDistributionsChart();\r\n        }, 100);\r\n      },\r\n      error: (err) => {\r\n        this.error.stateDistribution = 'Failed to load state distributions';\r\n        this.loading.stateDistribution = false;\r\n        console.error('Error loading state distributions:', err);\r\n      }\r\n    });\r\n  }\r\n  \r\n  loadLongTermDevNewItems(): void {\r\n    this.loading.longTermDevNew = true;\r\n    this.dashboardService.getLongTermDevNewItems(5).subscribe({\r\n      next: (data) => {\r\n        this.longTermDevNewItems = data;\r\n        this.loading.longTermDevNew = false;\r\n      },\r\n      error: (err) => {\r\n        this.error.longTermDevNew = 'Failed to load long-term Dev-New items';\r\n        this.loading.longTermDevNew = false;\r\n        console.error('Error loading long-term Dev-New items:', err);\r\n      }\r\n    });\r\n  }\r\n  \r\n  loadSupportItems(): void {\r\n    this.loading.supportItems = true;\r\n    this.dashboardService.getSupportItems(6).subscribe({\r\n      next: (data) => {\r\n        this.supportItems = data;\r\n        this.loading.supportItems = false;\r\n      },\r\n      error: (err) => {\r\n        this.error.supportItems = 'Failed to load support items';\r\n        this.loading.supportItems = false;\r\n        console.error('Error loading support items:', err);\r\n      }\r\n    });\r\n  }\r\n  \r\n  loadAiTips(): void {\r\n    this.loading.aiTips = true;\r\n    this.dashboardService.getAiTips().subscribe({\r\n      next: (data) => {\r\n        this.aiTips = data;\r\n        this.longTermDevNewItems = data.longTermDevNewItems;\r\n        this.supportItems = data.supportItems;\r\n        this.dailyTip = data.tip;\r\n        this.loading.aiTips = false;\r\n      },\r\n      error: (err) => {\r\n        this.error.aiTips = 'Failed to load AI tips';\r\n        this.loading.aiTips = false;\r\n        console.error('Error loading AI tips:', err);\r\n        // Fall back to individual methods\r\n        this.loadDailyTip();\r\n        this.loadLongTermDevNewItems();\r\n        this.loadSupportItems();\r\n      }\r\n    });\r\n  }\r\n  \r\n  initializeWorkItemDistributionChart(): void {\r\n    if (!this.workItemDistribution || !this.stateDistributionChartRef?.nativeElement) {\r\n      return;\r\n    }\r\n    \r\n    // Get canvas element\r\n    const ctx = this.stateDistributionChartRef.nativeElement.getContext('2d');\r\n    if (!ctx) return;\r\n    \r\n    const labels = this.workItemDistribution.states.map(s => s.state);\r\n    const data = this.workItemDistribution.states.map(s => s.count);\r\n    const colors = this.workItemDistribution.states.map(s => \r\n      this.stateColors[s.state] || this.getRandomColor()\r\n    );\r\n    \r\n    // Clear any existing chart\r\n    if (window.Chart && ctx.chart) {\r\n      ctx.chart.destroy();\r\n    }\r\n    \r\n    // Create new chart\r\n    if (window.Chart) {\r\n      ctx.chart = new window.Chart(ctx, {\r\n        type: 'pie',\r\n        data: {\r\n          labels: labels,\r\n          datasets: [{\r\n            data: data,\r\n            backgroundColor: colors,\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              position: 'right',\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: `Work Item States - ${this.workItemDistribution.iterationPath}`\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  initializeStateDistributionsChart(): void {\r\n    if (this.stateDistributions.length === 0 || !this.iterationDistributionChartRef?.nativeElement) {\r\n      return;\r\n    }\r\n    \r\n    // Get canvas element\r\n    const ctx = this.iterationDistributionChartRef.nativeElement.getContext('2d');\r\n    if (!ctx) return;\r\n    \r\n    // Clear any existing chart\r\n    if (window.Chart && ctx.chart) {\r\n      ctx.chart.destroy();\r\n    }\r\n    \r\n    // Prepare data for stacked bar chart\r\n    const iterationLabels = this.stateDistributions.map(d => d.iterationPath);\r\n    \r\n    // Find all unique states across all iterations\r\n    const allStates = new Set<string>();\r\n    this.stateDistributions.forEach(dist => {\r\n      dist.states.forEach(state => {\r\n        allStates.add(state.state);\r\n      });\r\n    });\r\n    \r\n    // Create datasets, one for each state\r\n    const datasets = Array.from(allStates).map(stateName => {\r\n      // Find color for this state\r\n      const stateColor = this.stateColors[stateName] || this.getRandomColor();\r\n      \r\n      // Create dataset for this state across all iterations\r\n      return {\r\n        label: stateName,\r\n        data: this.stateDistributions.map(dist => {\r\n          const stateData = dist.states.find(s => s.state === stateName);\r\n          return stateData ? stateData.count : 0;\r\n        }),\r\n        backgroundColor: stateColor\r\n      };\r\n    });\r\n    \r\n    // Create new chart\r\n    if (window.Chart) {\r\n      ctx.chart = new window.Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: iterationLabels,\r\n          datasets: datasets\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          scales: {\r\n            x: {\r\n              stacked: true,\r\n            },\r\n            y: {\r\n              stacked: true,\r\n              beginAtZero: true\r\n            }\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              position: 'right',\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Work Item Distribution by Iteration'\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  changeIterationPath(iterationPath: string): void {\r\n    this.selectedIterationPath = iterationPath;\r\n    this.loadWorkItemDistribution(iterationPath);\r\n    this.loadSprintSummary(iterationPath);\r\n  }\r\n  \r\n  getStateColor(state: string): string {\r\n    return this.stateColors[state] || this.getRandomColor();\r\n  }\r\n  \r\n  getRandomColor(): string {\r\n    const randomIndex = Math.floor(Math.random() * this.defaultChartColors.length);\r\n    return this.defaultChartColors[randomIndex];\r\n  }\r\n\r\n  reload(): void {\r\n    this.loadDashboardData();\r\n  }\r\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}