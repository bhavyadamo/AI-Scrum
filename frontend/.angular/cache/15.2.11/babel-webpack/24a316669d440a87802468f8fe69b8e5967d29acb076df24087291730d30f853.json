{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/task.service\";\nfunction TaskDistributionComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Auto-Assign Tasks\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"span\", 34);\n    i0.ɵɵtext(2, \" Assigning... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.error.autoAssign);\n  }\n}\nfunction TaskDistributionComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"div\", 37)(2, \"span\", 38);\n    i0.ɵɵtext(3, \"Loading tasks...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction TaskDistributionComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.error.tasks);\n  }\n}\nfunction TaskDistributionComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"p\", 39);\n    i0.ɵɵtext(2, \"No tasks found for the current sprint.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskDistributionComponent_div_20_tr_17_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r17.assignedTo);\n  }\n}\nfunction TaskDistributionComponent_div_20_tr_17_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 39);\n    i0.ɵɵtext(1, \"Unassigned\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_20_tr_17_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 48)(1, \"small\", 49);\n    i0.ɵɵelement(2, \"i\", 50);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Suggest: \", task_r17.autoAssignSuggestion, \" \");\n  }\n}\nfunction TaskDistributionComponent_div_20_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"span\", 43);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtemplate(9, TaskDistributionComponent_div_20_tr_17_span_9_Template, 2, 1, \"span\", 7);\n    i0.ɵɵtemplate(10, TaskDistributionComponent_div_20_tr_17_span_10_Template, 2, 0, \"span\", 44);\n    i0.ɵɵtemplate(11, TaskDistributionComponent_div_20_tr_17_div_11_Template, 4, 1, \"div\", 45);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"span\", 43);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function TaskDistributionComponent_div_20_tr_17_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const task_r17 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.openAssignModal(task_r17.id));\n    });\n    i0.ɵɵelement(17, \"i\", 47);\n    i0.ɵɵtext(18, \" Assign \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r17.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r17.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r16.getPriorityClass(task_r17.priority));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r17.priority, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", task_r17.assignedTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !task_r17.assignedTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r17.autoAssignSuggestion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r16.getStatusClass(task_r17.status));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r17.status, \" \");\n  }\n}\nfunction TaskDistributionComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40)(1, \"table\", 41)(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Priority\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Assigned To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"tbody\");\n    i0.ɵɵtemplate(17, TaskDistributionComponent_div_20_tr_17_Template, 19, 9, \"tr\", 42);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.tasks);\n  }\n}\nfunction TaskDistributionComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"div\", 37)(2, \"span\", 38);\n    i0.ɵɵtext(3, \"Loading team members...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction TaskDistributionComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.error.members);\n  }\n}\nfunction TaskDistributionComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"p\", 39);\n    i0.ɵɵtext(2, \"No team members found.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskDistributionComponent_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 52)(1, \"div\", 53)(2, \"div\", 54)(3, \"h5\", 55);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 56)(6, \"span\", 57);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"div\", 58);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const member_r26 = ctx.$implicit;\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(member_r26.displayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r25.getTeamMemberWorkloadClass(member_r26.currentWorkload));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Tasks: \", member_r26.currentWorkload, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", member_r26.currentWorkload / 10 * 100, \"%\");\n  }\n}\nfunction TaskDistributionComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, TaskDistributionComponent_div_31_div_1_Template, 9, 5, \"div\", 51);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.teamMembers);\n  }\n}\nfunction TaskDistributionComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r11.error.assign);\n  }\n}\nfunction TaskDistributionComponent_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 59);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const member_r27 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", member_r27.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", member_r27.displayName, \" (Tasks: \", member_r27.currentWorkload, \")\");\n  }\n}\nfunction TaskDistributionComponent_span_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Assign\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_span_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"span\", 34);\n    i0.ɵɵtext(2, \" Assigning... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskDistributionComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 60);\n  }\n}\nexport class TaskDistributionComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n    this.teamMembers = [];\n    this.currentSprint = '';\n    this.loading = {\n      tasks: true,\n      members: true,\n      assign: false,\n      autoAssign: false\n    };\n    this.error = {\n      tasks: '',\n      members: '',\n      assign: '',\n      autoAssign: ''\n    };\n    this.selectedTask = null;\n    this.selectedMember = '';\n  }\n  ngOnInit() {\n    this.loadTeamMembers();\n    this.loadTasks();\n  }\n  loadTasks() {\n    this.loading.tasks = true;\n    this.taskService.getTasks('Project\\\\Sprint 3').subscribe({\n      next: data => {\n        this.tasks = data;\n        this.currentSprint = 'Project\\\\Sprint 3';\n        this.loading.tasks = false;\n        this.loadAutoAssignSuggestions();\n      },\n      error: err => {\n        this.error.tasks = 'Failed to load tasks';\n        this.loading.tasks = false;\n        console.error('Error loading tasks:', err);\n      }\n    });\n  }\n  loadTeamMembers() {\n    this.loading.members = true;\n    this.taskService.getTeamMembers().subscribe({\n      next: data => {\n        this.teamMembers = data;\n        this.loading.members = false;\n      },\n      error: err => {\n        this.error.members = 'Failed to load team members';\n        this.loading.members = false;\n        console.error('Error loading team members:', err);\n      }\n    });\n  }\n  loadAutoAssignSuggestions() {\n    this.taskService.getAutoAssignSuggestions(this.currentSprint).subscribe({\n      next: suggestions => {\n        this.tasks = this.tasks.map(task => {\n          if (suggestions[task.id.toString()]) {\n            return {\n              ...task,\n              autoAssignSuggestion: suggestions[task.id.toString()]\n            };\n          }\n          return task;\n        });\n      },\n      error: err => {\n        console.error('Error loading auto-assign suggestions:', err);\n      }\n    });\n  }\n  openAssignModal(taskId) {\n    this.selectedTask = taskId;\n    this.selectedMember = '';\n  }\n  assignTask() {\n    if (!this.selectedTask || !this.selectedMember) {\n      this.error.assign = 'Please select a team member';\n      return;\n    }\n    this.loading.assign = true;\n    this.error.assign = '';\n    this.taskService.assignTask(this.selectedTask, this.selectedMember).subscribe({\n      next: () => {\n        this.loading.assign = false;\n        // Update the assigned task in the local array\n        this.tasks = this.tasks.map(task => {\n          if (task.id === this.selectedTask) {\n            const assignedMember = this.teamMembers.find(m => m.id === this.selectedMember);\n            return {\n              ...task,\n              assignedTo: assignedMember ? assignedMember.displayName : this.selectedMember\n            };\n          }\n          return task;\n        });\n        this.selectedTask = null;\n      },\n      error: err => {\n        this.error.assign = 'Failed to assign task';\n        this.loading.assign = false;\n        console.error('Error assigning task:', err);\n      }\n    });\n  }\n  autoAssignTasks() {\n    this.loading.autoAssign = true;\n    this.error.autoAssign = '';\n    this.taskService.autoAssignTasks(this.currentSprint).subscribe({\n      next: () => {\n        this.loading.autoAssign = false;\n        // Reload tasks to get updated assignments\n        this.loadTasks();\n      },\n      error: err => {\n        this.error.autoAssign = 'Failed to auto-assign tasks';\n        this.loading.autoAssign = false;\n        console.error('Error auto-assigning tasks:', err);\n      }\n    });\n  }\n  cancelAssign() {\n    this.selectedTask = null;\n    this.error.assign = '';\n  }\n  getTeamMemberWorkloadClass(workload) {\n    if (workload >= 8) return 'high-workload';\n    if (workload >= 5) return 'medium-workload';\n    return 'low-workload';\n  }\n  getPriorityClass(priority) {\n    switch (priority) {\n      case '1':\n        return 'bg-danger';\n      case '2':\n        return 'bg-warning';\n      case '3':\n        return 'bg-info';\n      default:\n        return 'bg-secondary';\n    }\n  }\n  getStatusClass(status) {\n    switch (status.toLowerCase()) {\n      case 'completed':\n      case 'done':\n        return 'bg-success';\n      case 'in progress':\n        return 'bg-primary';\n      case 'blocked':\n        return 'bg-danger';\n      default:\n        return 'bg-secondary';\n    }\n  }\n  static {\n    this.ɵfac = function TaskDistributionComponent_Factory(t) {\n      return new (t || TaskDistributionComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskDistributionComponent,\n      selectors: [[\"app-task-distribution\"]],\n      decls: 55,\n      vars: 23,\n      consts: [[1, \"container-fluid\", \"p-4\"], [1, \"row\", \"mb-4\"], [1, \"col-12\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mb-0\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"bi\", \"bi-magic\"], [4, \"ngIf\"], [1, \"text-muted\", \"mt-2\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"row\"], [1, \"card\"], [1, \"card-body\"], [\"class\", \"text-center py-4\", 4, \"ngIf\"], [\"class\", \"table-responsive\", 4, \"ngIf\"], [1, \"row\", \"mt-4\"], [1, \"card-header\"], [\"class\", \"row\", 4, \"ngIf\"], [\"tabindex\", \"-1\", 1, \"modal\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", 1, \"btn-close\", 3, \"click\"], [1, \"modal-body\"], [1, \"mb-3\"], [\"for\", \"teamMemberSelect\", 1, \"form-label\"], [\"id\", \"teamMemberSelect\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"class\", \"modal-backdrop fade show\", 4, \"ngIf\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\"], [1, \"alert\", \"alert-danger\"], [1, \"text-center\", \"py-4\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"text-muted\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [1, \"badge\", \"rounded-pill\", 3, \"ngClass\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [\"class\", \"mt-1 suggestion-box\", 4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-outline-primary\", \"me-1\", 3, \"click\"], [1, \"bi\", \"bi-person-plus\"], [1, \"mt-1\", \"suggestion-box\"], [1, \"text-primary\"], [1, \"bi\", \"bi-lightbulb-fill\"], [\"class\", \"col-md-3 col-sm-6 mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\", \"col-sm-6\", \"mb-3\"], [1, \"card\", \"team-member-card\", \"h-100\"], [1, \"card-body\", \"text-center\"], [1, \"card-title\"], [1, \"workload-indicator\", \"mt-2\", 3, \"ngClass\"], [1, \"workload-label\"], [1, \"workload-bar\"], [3, \"value\"], [1, \"modal-backdrop\", \"fade\", \"show\"]],\n      template: function TaskDistributionComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\", 4);\n          i0.ɵɵtext(5, \"Task Distribution\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_6_listener() {\n            return ctx.autoAssignTasks();\n          });\n          i0.ɵɵelement(7, \"i\", 6);\n          i0.ɵɵtemplate(8, TaskDistributionComponent_span_8_Template, 2, 0, \"span\", 7);\n          i0.ɵɵtemplate(9, TaskDistributionComponent_span_9_Template, 3, 0, \"span\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"p\", 8);\n          i0.ɵɵtext(11, \"Manage and assign tasks for the current sprint\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, TaskDistributionComponent_div_12_Template, 2, 1, \"div\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 2)(15, \"div\", 11)(16, \"div\", 12);\n          i0.ɵɵtemplate(17, TaskDistributionComponent_div_17_Template, 4, 0, \"div\", 13);\n          i0.ɵɵtemplate(18, TaskDistributionComponent_div_18_Template, 2, 1, \"div\", 9);\n          i0.ɵɵtemplate(19, TaskDistributionComponent_div_19_Template, 3, 0, \"div\", 13);\n          i0.ɵɵtemplate(20, TaskDistributionComponent_div_20_Template, 18, 1, \"div\", 14);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(21, \"div\", 15)(22, \"div\", 2)(23, \"div\", 11)(24, \"div\", 16)(25, \"h4\", 4);\n          i0.ɵɵtext(26, \"Team Workload\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"div\", 12);\n          i0.ɵɵtemplate(28, TaskDistributionComponent_div_28_Template, 4, 0, \"div\", 13);\n          i0.ɵɵtemplate(29, TaskDistributionComponent_div_29_Template, 2, 1, \"div\", 9);\n          i0.ɵɵtemplate(30, TaskDistributionComponent_div_30_Template, 3, 0, \"div\", 13);\n          i0.ɵɵtemplate(31, TaskDistributionComponent_div_31_Template, 2, 1, \"div\", 17);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(32, \"div\", 18)(33, \"div\", 19)(34, \"div\", 20)(35, \"div\", 21)(36, \"h5\", 22);\n          i0.ɵɵtext(37, \"Assign Task\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"button\", 23);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_38_listener() {\n            return ctx.cancelAssign();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(39, \"div\", 24);\n          i0.ɵɵtemplate(40, TaskDistributionComponent_div_40_Template, 2, 1, \"div\", 9);\n          i0.ɵɵelementStart(41, \"div\", 25)(42, \"label\", 26);\n          i0.ɵɵtext(43, \"Select Team Member\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"select\", 27);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskDistributionComponent_Template_select_ngModelChange_44_listener($event) {\n            return ctx.selectedMember = $event;\n          });\n          i0.ɵɵelementStart(45, \"option\", 28);\n          i0.ɵɵtext(46, \"-- Select Team Member --\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(47, TaskDistributionComponent_option_47_Template, 2, 3, \"option\", 29);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(48, \"div\", 30)(49, \"button\", 31);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_49_listener() {\n            return ctx.cancelAssign();\n          });\n          i0.ɵɵtext(50, \"Cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(51, \"button\", 32);\n          i0.ɵɵlistener(\"click\", function TaskDistributionComponent_Template_button_click_51_listener() {\n            return ctx.assignTask();\n          });\n          i0.ɵɵtemplate(52, TaskDistributionComponent_span_52_Template, 2, 0, \"span\", 7);\n          i0.ɵɵtemplate(53, TaskDistributionComponent_span_53_Template, 3, 0, \"span\", 7);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵtemplate(54, TaskDistributionComponent_div_54_Template, 1, 0, \"div\", 33);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"disabled\", ctx.loading.autoAssign);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.autoAssign);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.autoAssign);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.autoAssign);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.tasks);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.tasks);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.tasks && !ctx.error.tasks && ctx.tasks.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.tasks && !ctx.error.tasks && ctx.tasks.length > 0);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.members);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.members);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.members && !ctx.error.members && ctx.teamMembers.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.members && !ctx.error.members && ctx.teamMembers.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleProp(\"display\", ctx.selectedTask !== null ? \"block\" : \"none\");\n          i0.ɵɵclassProp(\"show\", ctx.selectedTask !== null);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.error.assign);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedMember);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.teamMembers);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.loading.assign);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading.assign);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading.assign);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedTask !== null);\n        }\n      },\n      styles: [\".card[_ngcontent-%COMP%] {\\n  border-radius: 8px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n  margin-bottom: 20px;\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  background-color: #f8f9fa;\\n  border-bottom: 1px solid #eaeaea;\\n  padding: 12px 16px;\\n}\\n\\n.table[_ngcontent-%COMP%] {\\n  margin-bottom: 0;\\n}\\n\\n.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  color: #495057;\\n}\\n\\n.suggestion-box[_ngcontent-%COMP%] {\\n  background-color: #f8f9ff;\\n  padding: 4px 8px;\\n  border-radius: 4px;\\n  font-size: 0.8rem;\\n}\\n\\n\\n.team-member-card[_ngcontent-%COMP%] {\\n  transition: transform 0.2s;\\n  border-radius: 8px;\\n}\\n\\n.team-member-card[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-5px);\\n}\\n\\n\\n.workload-indicator[_ngcontent-%COMP%] {\\n  position: relative;\\n  height: 24px;\\n  border-radius: 12px;\\n  background-color: #f0f0f0;\\n  overflow: hidden;\\n  margin-top: 10px;\\n}\\n\\n.workload-bar[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  z-index: 1;\\n}\\n\\n.workload-label[_ngcontent-%COMP%] {\\n  position: relative;\\n  z-index: 2;\\n  display: block;\\n  text-align: center;\\n  line-height: 24px;\\n  font-size: 0.8rem;\\n  font-weight: 500;\\n  color: #333;\\n}\\n\\n.low-workload[_ngcontent-%COMP%]   .workload-bar[_ngcontent-%COMP%] {\\n  background-color: #28a745;\\n}\\n\\n.medium-workload[_ngcontent-%COMP%]   .workload-bar[_ngcontent-%COMP%] {\\n  background-color: #ffc107;\\n}\\n\\n.high-workload[_ngcontent-%COMP%]   .workload-bar[_ngcontent-%COMP%] {\\n  background-color: #dc3545;\\n}\\n\\n\\n.modal-backdrop[_ngcontent-%COMP%] {\\n  opacity: 0.5;\\n}\\n\\n.modal-content[_ngcontent-%COMP%] {\\n  border-radius: 8px;\\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrLWRpc3RyaWJ1dGlvbi90YXNrLWRpc3RyaWJ1dGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBQ0Esd0NBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7RUFDQSxnQ0FBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUVBLHNCQUFBO0FBQ0E7RUFDRSwwQkFBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSwyQkFBQTtBQUNGOztBQUVBLHdCQUFBO0FBQ0E7RUFDRSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLHlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxNQUFBO0VBQ0EsT0FBQTtFQUNBLFlBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxXQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0FBQ0Y7O0FBRUEsd0JBQUE7QUFDQTtFQUNFLFlBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0VBQ0EseUNBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm94LXNoYWRvdzogMCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4uY2FyZC1oZWFkZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlYWVhZWE7XHJcbiAgcGFkZGluZzogMTJweCAxNnB4O1xyXG59XHJcblxyXG4udGFibGUge1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbn1cclxuXHJcbi50YWJsZSB0aCB7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICBjb2xvcjogIzQ5NTA1NztcclxufVxyXG5cclxuLnN1Z2dlc3Rpb24tYm94IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZmO1xyXG4gIHBhZGRpbmc6IDRweCA4cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGZvbnQtc2l6ZTogMC44cmVtO1xyXG59XHJcblxyXG4vKiBUZWFtIE1lbWJlciBDYXJkcyAqL1xyXG4udGVhbS1tZW1iZXItY2FyZCB7XHJcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnM7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG59XHJcblxyXG4udGVhbS1tZW1iZXItY2FyZDpob3ZlciB7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01cHgpO1xyXG59XHJcblxyXG4vKiBXb3JrbG9hZCBJbmRpY2F0b3JzICovXHJcbi53b3JrbG9hZC1pbmRpY2F0b3Ige1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBoZWlnaHQ6IDI0cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5cclxuLndvcmtsb2FkLWJhciB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG4ud29ya2xvYWQtbGFiZWwge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB6LWluZGV4OiAyO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBsaW5lLWhlaWdodDogMjRweDtcclxuICBmb250LXNpemU6IDAuOHJlbTtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG4gIGNvbG9yOiAjMzMzO1xyXG59XHJcblxyXG4ubG93LXdvcmtsb2FkIC53b3JrbG9hZC1iYXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMyOGE3NDU7XHJcbn1cclxuXHJcbi5tZWRpdW0td29ya2xvYWQgLndvcmtsb2FkLWJhciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYzEwNztcclxufVxyXG5cclxuLmhpZ2gtd29ya2xvYWQgLndvcmtsb2FkLWJhciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RjMzU0NTtcclxufVxyXG5cclxuLyogTW9kYWwgY3VzdG9taXphdGlvbiAqL1xyXG4ubW9kYWwtYmFja2Ryb3Age1xyXG4gIG9wYWNpdHk6IDAuNTtcclxufVxyXG5cclxuLm1vZGFsLWNvbnRlbnQge1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBib3gtc2hhZG93OiAwIDVweCAxNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxufSAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["i0","TaskDistributionComponent","constructor","taskService","tasks","members","assign","autoAssign","ngOnInit","loadTeamMembers","loadTasks","loading","getTasks","subscribe","next","data","currentSprint","loadAutoAssignSuggestions","error","err","console","getTeamMembers","teamMembers","getAutoAssignSuggestions","suggestions","map","task","id","toString","autoAssignSuggestion","openAssignModal","taskId","selectedTask","selectedMember","assignTask","assignedMember","find","m","assignedTo","displayName","autoAssignTasks","cancelAssign","getTeamMemberWorkloadClass","workload","getPriorityClass","priority","getStatusClass","status","toLowerCase","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\task-distribution\\task-distribution.component.html","E:\\Project-AI\\AI-Scrum\\frontend\\src\\app\\components\\task-distribution\\task-distribution.component.ts"],"sourcesContent":["<div class=\"container-fluid p-4\">\r\n  <div class=\"row mb-4\">\r\n    <div class=\"col-12\">\r\n      <div class=\"d-flex justify-content-between align-items-center\">\r\n        <h2 class=\"mb-0\">Task Distribution</h2>\r\n        <button class=\"btn btn-primary\" (click)=\"autoAssignTasks()\" [disabled]=\"loading.autoAssign\">\r\n          <i class=\"bi bi-magic\"></i> \r\n          <span *ngIf=\"!loading.autoAssign\">Auto-Assign Tasks</span>\r\n          <span *ngIf=\"loading.autoAssign\">\r\n            <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            Assigning...\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <p class=\"text-muted mt-2\">Manage and assign tasks for the current sprint</p>\r\n      <div *ngIf=\"error.autoAssign\" class=\"alert alert-danger\">{{ error.autoAssign }}</div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Tasks Table -->\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div *ngIf=\"loading.tasks\" class=\"text-center py-4\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading tasks...</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"error.tasks\" class=\"alert alert-danger\">{{ error.tasks }}</div>\r\n\r\n          <div *ngIf=\"!loading.tasks && !error.tasks && tasks.length === 0\" class=\"text-center py-4\">\r\n            <p class=\"text-muted\">No tasks found for the current sprint.</p>\r\n          </div>\r\n\r\n          <div *ngIf=\"!loading.tasks && !error.tasks && tasks.length > 0\" class=\"table-responsive\">\r\n            <table class=\"table table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Title</th>\r\n                  <th>Priority</th>\r\n                  <th>Assigned To</th>\r\n                  <th>Status</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let task of tasks\">\r\n                  <td>{{ task.id }}</td>\r\n                  <td>{{ task.title }}</td>\r\n                  <td>\r\n                    <span class=\"badge rounded-pill\" [ngClass]=\"getPriorityClass(task.priority)\">\r\n                      {{ task.priority }}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span *ngIf=\"task.assignedTo\">{{ task.assignedTo }}</span>\r\n                    <span *ngIf=\"!task.assignedTo\" class=\"text-muted\">Unassigned</span>\r\n                    <div *ngIf=\"task.autoAssignSuggestion\" class=\"mt-1 suggestion-box\">\r\n                      <small class=\"text-primary\">\r\n                        <i class=\"bi bi-lightbulb-fill\"></i> \r\n                        Suggest: {{ task.autoAssignSuggestion }}\r\n                      </small>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"badge rounded-pill\" [ngClass]=\"getStatusClass(task.status)\">\r\n                      {{ task.status }}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <button class=\"btn btn-sm btn-outline-primary me-1\" (click)=\"openAssignModal(task.id)\">\r\n                      <i class=\"bi bi-person-plus\"></i> Assign\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Team Workload Overview -->\r\n  <div class=\"row mt-4\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h4 class=\"mb-0\">Team Workload</h4>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div *ngIf=\"loading.members\" class=\"text-center py-4\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading team members...</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"error.members\" class=\"alert alert-danger\">{{ error.members }}</div>\r\n\r\n          <div *ngIf=\"!loading.members && !error.members && teamMembers.length === 0\" class=\"text-center py-4\">\r\n            <p class=\"text-muted\">No team members found.</p>\r\n          </div>\r\n\r\n          <div *ngIf=\"!loading.members && !error.members && teamMembers.length > 0\" class=\"row\">\r\n            <div *ngFor=\"let member of teamMembers\" class=\"col-md-3 col-sm-6 mb-3\">\r\n              <div class=\"card team-member-card h-100\">\r\n                <div class=\"card-body text-center\">\r\n                  <h5 class=\"card-title\">{{ member.displayName }}</h5>\r\n                  <div class=\"workload-indicator mt-2\" [ngClass]=\"getTeamMemberWorkloadClass(member.currentWorkload)\">\r\n                    <span class=\"workload-label\">Tasks: {{ member.currentWorkload }}</span>\r\n                    <div class=\"workload-bar\" [style.width.%]=\"(member.currentWorkload / 10) * 100\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Assign Task Modal -->\r\n  <div class=\"modal\" [class.show]=\"selectedTask !== null\" [style.display]=\"selectedTask !== null ? 'block' : 'none'\" tabindex=\"-1\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\">Assign Task</h5>\r\n          <button type=\"button\" class=\"btn-close\" (click)=\"cancelAssign()\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div *ngIf=\"error.assign\" class=\"alert alert-danger\">{{ error.assign }}</div>\r\n          \r\n          <div class=\"mb-3\">\r\n            <label for=\"teamMemberSelect\" class=\"form-label\">Select Team Member</label>\r\n            <select class=\"form-select\" id=\"teamMemberSelect\" [(ngModel)]=\"selectedMember\">\r\n              <option value=\"\">-- Select Team Member --</option>\r\n              <option *ngFor=\"let member of teamMembers\" [value]=\"member.id\">{{ member.displayName }} (Tasks: {{ member.currentWorkload }})</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cancelAssign()\">Cancel</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"assignTask()\" [disabled]=\"loading.assign\">\r\n            <span *ngIf=\"!loading.assign\">Assign</span>\r\n            <span *ngIf=\"loading.assign\">\r\n              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n              Assigning...\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-backdrop fade show\" *ngIf=\"selectedTask !== null\"></div>\r\n</div> ","import { Component, OnInit } from '@angular/core';\r\nimport { TaskService } from '../../services/task.service';\r\nimport { WorkItem, TeamMember } from '../../models/task.model';\r\n\r\n@Component({\r\n  selector: 'app-task-distribution',\r\n  templateUrl: './task-distribution.component.html',\r\n  styleUrls: ['./task-distribution.component.scss']\r\n})\r\nexport class TaskDistributionComponent implements OnInit {\r\n  tasks: WorkItem[] = [];\r\n  teamMembers: TeamMember[] = [];\r\n  currentSprint: string = '';\r\n  loading = {\r\n    tasks: true,\r\n    members: true,\r\n    assign: false,\r\n    autoAssign: false\r\n  };\r\n  error = {\r\n    tasks: '',\r\n    members: '',\r\n    assign: '',\r\n    autoAssign: ''\r\n  };\r\n  selectedTask: number | null = null;\r\n  selectedMember: string = '';\r\n\r\n  constructor(private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadTeamMembers();\r\n    this.loadTasks();\r\n  }\r\n\r\n  loadTasks(): void {\r\n    this.loading.tasks = true;\r\n    this.taskService.getTasks('Project\\\\Sprint 3').subscribe({\r\n      next: (data) => {\r\n        this.tasks = data;\r\n        this.currentSprint = 'Project\\\\Sprint 3';\r\n        this.loading.tasks = false;\r\n        this.loadAutoAssignSuggestions();\r\n      },\r\n      error: (err) => {\r\n        this.error.tasks = 'Failed to load tasks';\r\n        this.loading.tasks = false;\r\n        console.error('Error loading tasks:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadTeamMembers(): void {\r\n    this.loading.members = true;\r\n    this.taskService.getTeamMembers().subscribe({\r\n      next: (data) => {\r\n        this.teamMembers = data;\r\n        this.loading.members = false;\r\n      },\r\n      error: (err) => {\r\n        this.error.members = 'Failed to load team members';\r\n        this.loading.members = false;\r\n        console.error('Error loading team members:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadAutoAssignSuggestions(): void {\r\n    this.taskService.getAutoAssignSuggestions(this.currentSprint).subscribe({\r\n      next: (suggestions) => {\r\n        this.tasks = this.tasks.map(task => {\r\n          if (suggestions[task.id.toString()]) {\r\n            return { ...task, autoAssignSuggestion: suggestions[task.id.toString()] };\r\n          }\r\n          return task;\r\n        });\r\n      },\r\n      error: (err) => {\r\n        console.error('Error loading auto-assign suggestions:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  openAssignModal(taskId: number): void {\r\n    this.selectedTask = taskId;\r\n    this.selectedMember = '';\r\n  }\r\n\r\n  assignTask(): void {\r\n    if (!this.selectedTask || !this.selectedMember) {\r\n      this.error.assign = 'Please select a team member';\r\n      return;\r\n    }\r\n\r\n    this.loading.assign = true;\r\n    this.error.assign = '';\r\n\r\n    this.taskService.assignTask(this.selectedTask, this.selectedMember).subscribe({\r\n      next: () => {\r\n        this.loading.assign = false;\r\n        // Update the assigned task in the local array\r\n        this.tasks = this.tasks.map(task => {\r\n          if (task.id === this.selectedTask) {\r\n            const assignedMember = this.teamMembers.find(m => m.id === this.selectedMember);\r\n            return { \r\n              ...task, \r\n              assignedTo: assignedMember ? assignedMember.displayName : this.selectedMember \r\n            };\r\n          }\r\n          return task;\r\n        });\r\n        this.selectedTask = null;\r\n      },\r\n      error: (err) => {\r\n        this.error.assign = 'Failed to assign task';\r\n        this.loading.assign = false;\r\n        console.error('Error assigning task:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  autoAssignTasks(): void {\r\n    this.loading.autoAssign = true;\r\n    this.error.autoAssign = '';\r\n\r\n    this.taskService.autoAssignTasks(this.currentSprint).subscribe({\r\n      next: () => {\r\n        this.loading.autoAssign = false;\r\n        // Reload tasks to get updated assignments\r\n        this.loadTasks();\r\n      },\r\n      error: (err) => {\r\n        this.error.autoAssign = 'Failed to auto-assign tasks';\r\n        this.loading.autoAssign = false;\r\n        console.error('Error auto-assigning tasks:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelAssign(): void {\r\n    this.selectedTask = null;\r\n    this.error.assign = '';\r\n  }\r\n\r\n  getTeamMemberWorkloadClass(workload: number): string {\r\n    if (workload >= 8) return 'high-workload';\r\n    if (workload >= 5) return 'medium-workload';\r\n    return 'low-workload';\r\n  }\r\n\r\n  getPriorityClass(priority: string): string {\r\n    switch (priority) {\r\n      case '1': return 'bg-danger';\r\n      case '2': return 'bg-warning';\r\n      case '3': return 'bg-info';\r\n      default: return 'bg-secondary';\r\n    }\r\n  }\r\n\r\n  getStatusClass(status: string): string {\r\n    switch (status.toLowerCase()) {\r\n      case 'completed': \r\n      case 'done': return 'bg-success';\r\n      case 'in progress': return 'bg-primary';\r\n      case 'blocked': return 'bg-danger';\r\n      default: return 'bg-secondary';\r\n    }\r\n  }\r\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}